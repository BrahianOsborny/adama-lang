/*
 * This file is subject to the terms and conditions outlined in the file 'LICENSE' (hint: it's MIT); this file is located in the root directory near the README.md which you should also read.
 *
 * This file is part of the 'Adama' project which is a programming language and document store for board games; however, it can be so much more.
 *
 * See http://www.adama-lang.org/ for more information.
 *
 * (c) 2020 - 2022 by Jeffrey M. Barber (http://jeffrey.io)
 */
package org.adamalang.translator;

import org.junit.Test;

public class GeneratedMapsTests extends GeneratedBase {
  private String cached_Basic_1 = null;
  private String get_Basic_1() {
    if (cached_Basic_1 != null) {
      return cached_Basic_1;
    }
    cached_Basic_1 = generateTestOutput(true, "Basic_1", "./test_code/Maps_Basic_success.a");
    return cached_Basic_1;
  }

  @Test
  public void testBasicEmission() {
    assertEmissionGood(get_Basic_1());
  }

  @Test
  public void testBasicSuccess() {
    assertLivePass(get_Basic_1());
  }

  @Test
  public void testBasicGoodWillHappy() {
    assertGoodWillHappy(get_Basic_1());
  }

  @Test
  public void testBasicExceptionFree() {
    assertExceptionFree(get_Basic_1());
  }

  @Test
  public void testBasicTODOFree() {
    assertTODOFree(get_Basic_1());
  }

  @Test
  public void stable_Basic_1() {
    String live = get_Basic_1();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Maps_Basic_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class Basic_1 extends LivingDocument {");
    gold.append("\n  private final RxLazy<NtMap<Integer,Integer>> zoop;");
    gold.append("\n  private final RxInt32 z;");
    gold.append("\n  private final RxInt32 count;");
    gold.append("\n  private final RxInt32 count_after_delete;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += zoop.__memory();");
    gold.append("\n    __sum += z.__memory();");
    gold.append("\n    __sum += count.__memory();");
    gold.append("\n    __sum += count_after_delete.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Basic_1(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    zoop = new RxLazy<NtMap<Integer,Integer>>(this, () -> (__FUNC_0_x()));");
    gold.append("\n    z = new RxInt32(this, 100);");
    gold.append("\n    count = new RxInt32(this, 0);");
    gold.append("\n    count_after_delete = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"z\":");
    gold.append("\n            z.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"count\":");
    gold.append("\n            count.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"count_after_delete\":");
    gold.append("\n            count_after_delete.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"z\":");
    gold.append("\n            z.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"count\":");
    gold.append("\n            count.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"count_after_delete\":");
    gold.append("\n            count_after_delete.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"z\");");
    gold.append("\n    z.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"count\");");
    gold.append("\n    count.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"count_after_delete\");");
    gold.append("\n    count_after_delete.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    z.__commit(\"z\", __forward, __reverse);");
    gold.append("\n    count.__commit(\"count\", __forward, __reverse);");
    gold.append("\n    count_after_delete.__commit(\"count_after_delete\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    z.__revert();");
    gold.append("\n    count.__revert();");
    gold.append("\n    count_after_delete.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaBasic_1 {");
    gold.append("\n    private int __gzoop;");
    gold.append("\n    private DMap<Integer,DInt32> __dzoop;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaBasic_1() {");
    gold.append("\n      __gzoop = -1;");
    gold.append("\n      __dzoop = new DMap<Integer,DInt32>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(Basic_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gzoop != __item.zoop.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __map1 = __obj.planField(\"zoop\").planObject();");
    gold.append("\n          DMap<Integer,DInt32> __deltaMap2 = __dzoop;");
    gold.append("\n          DMap<Integer,DInt32>.Walk __deltaMapWalker3 = __deltaMap2.begin();");
    gold.append("\n          for (Map.Entry<Integer,Integer> __mapEntry4 : __item.zoop.get()) {");
    gold.append("\n            DInt32 __deltaElement5 = __deltaMapWalker3.next(__mapEntry4.getKey(), () -> new DInt32());");
    gold.append("\n            __deltaElement5.show(__mapEntry4.getValue(), __map1.planField(\"\" + __mapEntry4.getKey()));");
    gold.append("\n          }");
    gold.append("\n          __deltaMapWalker3.end(__map1);");
    gold.append("\n          __map1.end();");
    gold.append("\n        }");
    gold.append("\n        __gzoop = __item.zoop.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    Basic_1 __self = this;");
    gold.append("\n    DeltaBasic_1 __state = new DeltaBasic_1();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_Z = new int[] {0, 1, 2};");
    gold.append("\n  private NtMap<Integer,Integer> __FUNC_0_x() {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(0);");
    gold.append("\n    NtMap<Integer,Integer> m = new NtMap<Integer,Integer>();");
    gold.append("\n    __track(1);");
    gold.append("\n    m.lookup(1).set(2);");
    gold.append("\n    __track(2);");
    gold.append("\n    m.lookup(2).set(3);");
    gold.append("\n    __track(3);");
    gold.append("\n    return m;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  private void __step_nice() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(0);");
    gold.append("\n    NtMap<Integer,Integer> g = new NtMap<Integer,Integer>();");
    gold.append("\n    __track(1);");
    gold.append("\n    g.lookup(0).set(123);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"nice\":");
    gold.append("\n        __step_nice();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 15;");
    gold.append("\n    __track(2);");
    gold.append("\n    NtMap<Integer,Integer> foo = new NtMap<Integer,Integer>();");
    gold.append("\n    __track(3);");
    gold.append("\n    foo.lookup(123).set(42);");
    gold.append("\n    __track(4);");
    gold.append("\n    z.set(0);");
    gold.append("\n    __track(5);");
    gold.append("\n    NtMaybe<Integer> _AutoConditionx_6;");
    gold.append("\n    if ((_AutoConditionx_6 = foo.lookup(123)).has()) {");
    gold.append("\n      int x = _AutoConditionx_6.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(6);");
    gold.append("\n      z.set(x);");
    gold.append("\n    }");
    gold.append("\n    __track(7);");
    gold.append("\n    NtMap<Integer,Integer> g1 = new NtMap<Integer,Integer>(foo);");
    gold.append("\n    __track(8);");
    gold.append("\n    NtMap<Integer,Integer> g2 = new NtMap<Integer,Integer>();");
    gold.append("\n    __track(9);");
    gold.append("\n    g2.set(foo);");
    gold.append("\n    __track(10);");
    gold.append("\n    __transitionStateMachine(\"nice\", 0);");
    gold.append("\n    __track(11);");
    gold.append("\n    foo.lookup(42).set(13);");
    gold.append("\n    __track(12);");
    gold.append("\n    g2.lookup(500).set(100);");
    gold.append("\n    __track(13);");
    gold.append("\n    foo.insert(g2).insert(g1);");
    gold.append("\n    __track(14);");
    gold.append("\n    count.set(foo.size());");
    gold.append("\n    __track(15);");
    gold.append("\n    foo.lookup(123).delete();");
    gold.append("\n    __track(16);");
    gold.append("\n    count_after_delete.set(foo.size());");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"zoop\":{\"type\":{\"nature\":\"native_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"int\"},\"range\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"Z\":{\"nature\":\"native_value\",\"enum\":\"Z\",\"options\":{\"options\":{\"A\":0,\"B\":1,\"C\":2},\"default\":\"A\"}}},\"channels\":{},\"constructors\":[],\"labels\":[\"nice\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__state\":\"nice\",\"__constructed\":true,\"__entropy\":\"0\",\"z\":42,\"count\":3,\"count_after_delete\":2} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__state\":\"\",\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:20");
    gold.append("\nMEMORY:568");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"zoop\":{\"1\":2,\"2\":3}},\"seq\":2}");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"zoop\":{\"1\":2,\"2\":3}},\"seq\":3}");
    gold.append("\nRANDO was DENIED:");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"z\":42,\"count\":3,\"count_after_delete\":2,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"z\":42,\"count\":3,\"count_after_delete\":2,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n{\"z\":42,\"count\":3,\"count_after_delete\":2,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_InvalidAssignments_2 = null;
  private String get_InvalidAssignments_2() {
    if (cached_InvalidAssignments_2 != null) {
      return cached_InvalidAssignments_2;
    }
    cached_InvalidAssignments_2 = generateTestOutput(false, "InvalidAssignments_2", "./test_code/Maps_InvalidAssignments_failure.a");
    return cached_InvalidAssignments_2;
  }

  @Test
  public void testInvalidAssignmentsFailure() {
    assertLiveFail(get_InvalidAssignments_2());
  }

  @Test
  public void testInvalidAssignmentsNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_InvalidAssignments_2());
  }

  @Test
  public void testInvalidAssignmentsExceptionFree() {
    assertExceptionFree(get_InvalidAssignments_2());
  }

  @Test
  public void testInvalidAssignmentsTODOFree() {
    assertTODOFree(get_InvalidAssignments_2());
  }

  @Test
  public void stable_InvalidAssignments_2() {
    String live = get_InvalidAssignments_2();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Maps_InvalidAssignments_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":8,\"character\":2},\"end\":{\"line\":8,\"character\":18}},\"severity\":1,\"source\":\"error\",\"message\":\"The domain type 'double' is not an appropriate. (TyNativeMap)\"},{\"range\":{\"start\":{\"line\":7,\"character\":2},\"end\":{\"line\":7,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the type 'map<int,int>' is unable to store type 'map<double,int>'. (TypeCheckReferences)\"},{\"range\":{\"start\":{\"line\":7,\"character\":2},\"end\":{\"line\":7,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the type 'map<int,int>' is unable to store type 'map<int,double>'. (TypeCheckReferences)\"},{\"range\":{\"start\":{\"line\":8,\"character\":2},\"end\":{\"line\":8,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the type 'map<double,int>' is unable to store type 'map<int,int>'. (TypeCheckReferences)\"},{\"range\":{\"start\":{\"line\":8,\"character\":2},\"end\":{\"line\":8,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the type 'map<double,int>' is unable to store type 'map<int,double>'. (TypeCheckReferences)\"},{\"range\":{\"start\":{\"line\":9,\"character\":2},\"end\":{\"line\":9,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the type 'map<int,double>' is unable to store type 'map<int,int>'. (TypeCheckReferences)\"},{\"range\":{\"start\":{\"line\":9,\"character\":2},\"end\":{\"line\":9,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the type 'map<int,double>' is unable to store type 'map<double,int>'. (TypeCheckReferences)\"},{\"range\":{\"start\":{\"line\":1,\"character\":2},\"end\":{\"line\":1,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the type 'map<int,int>' is unable to store type 'int'. (TypeCheckReferences)\"},{\"range\":{\"start\":{\"line\":1,\"character\":2},\"end\":{\"line\":1,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the type 'map<int,int>' is unable to store type 'string'. (TypeCheckReferences)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
  private String cached_InvalidDomains_3 = null;
  private String get_InvalidDomains_3() {
    if (cached_InvalidDomains_3 != null) {
      return cached_InvalidDomains_3;
    }
    cached_InvalidDomains_3 = generateTestOutput(false, "InvalidDomains_3", "./test_code/Maps_InvalidDomains_failure.a");
    return cached_InvalidDomains_3;
  }

  @Test
  public void testInvalidDomainsFailure() {
    assertLiveFail(get_InvalidDomains_3());
  }

  @Test
  public void testInvalidDomainsNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_InvalidDomains_3());
  }

  @Test
  public void testInvalidDomainsExceptionFree() {
    assertExceptionFree(get_InvalidDomains_3());
  }

  @Test
  public void testInvalidDomainsTODOFree() {
    assertTODOFree(get_InvalidDomains_3());
  }

  @Test
  public void stable_InvalidDomains_3() {
    String live = get_InvalidDomains_3();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Maps_InvalidDomains_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":4,\"character\":2},\"end\":{\"line\":4,\"character\":18}},\"severity\":1,\"source\":\"error\",\"message\":\"The domain type 'client' is not an appropriate. (TyNativeMap)\"},{\"range\":{\"start\":{\"line\":5,\"character\":2},\"end\":{\"line\":5,\"character\":13}},\"severity\":1,\"source\":\"error\",\"message\":\"The domain type 'M' is not an appropriate. (TyNativeMap)\"},{\"range\":{\"start\":{\"line\":7,\"character\":6},\"end\":{\"line\":7,\"character\":7}},\"severity\":1,\"source\":\"error\",\"message\":\"Type not found: the type 'K' was not found. (TypeCheckReferences)\"},{\"range\":{\"start\":{\"line\":10,\"character\":12},\"end\":{\"line\":10,\"character\":24}},\"severity\":1,\"source\":\"error\",\"message\":\"Record 'map<int,int>' lacks field 'notFound' (FieldLookup)\"},{\"range\":{\"start\":{\"line\":10,\"character\":12},\"end\":{\"line\":10,\"character\":24}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression is not a function (FunctionInvoke)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
  private String cached_ReactiveBad_4 = null;
  private String get_ReactiveBad_4() {
    if (cached_ReactiveBad_4 != null) {
      return cached_ReactiveBad_4;
    }
    cached_ReactiveBad_4 = generateTestOutput(false, "ReactiveBad_4", "./test_code/Maps_ReactiveBad_failure.a");
    return cached_ReactiveBad_4;
  }

  @Test
  public void testReactiveBadFailure() {
    assertLiveFail(get_ReactiveBad_4());
  }

  @Test
  public void testReactiveBadNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_ReactiveBad_4());
  }

  @Test
  public void testReactiveBadExceptionFree() {
    assertExceptionFree(get_ReactiveBad_4());
  }

  @Test
  public void testReactiveBadTODOFree() {
    assertTODOFree(get_ReactiveBad_4());
  }

  @Test
  public void stable_ReactiveBad_4() {
    String live = get_ReactiveBad_4();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Maps_ReactiveBad_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":1,\"character\":7},\"end\":{\"line\":1,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"The domain type 'client' is not an appropriate. (TyNativeMap)\"},{\"range\":{\"start\":{\"line\":5,\"character\":2},\"end\":{\"line\":5,\"character\":14}},\"severity\":1,\"source\":\"error\",\"message\":\"Record 'map<client,int>' lacks field 'nope' (FieldLookup)\"},{\"range\":{\"start\":{\"line\":5,\"character\":2},\"end\":{\"line\":5,\"character\":14}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression is not a function (FunctionInvoke)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
  private String cached_Reactive_5 = null;
  private String get_Reactive_5() {
    if (cached_Reactive_5 != null) {
      return cached_Reactive_5;
    }
    cached_Reactive_5 = generateTestOutput(true, "Reactive_5", "./test_code/Maps_Reactive_success.a");
    return cached_Reactive_5;
  }

  @Test
  public void testReactiveEmission() {
    assertEmissionGood(get_Reactive_5());
  }

  @Test
  public void testReactiveSuccess() {
    assertLivePass(get_Reactive_5());
  }

  @Test
  public void testReactiveGoodWillHappy() {
    assertGoodWillHappy(get_Reactive_5());
  }

  @Test
  public void testReactiveExceptionFree() {
    assertExceptionFree(get_Reactive_5());
  }

  @Test
  public void testReactiveTODOFree() {
    assertTODOFree(get_Reactive_5());
  }

  @Test
  public void stable_Reactive_5() {
    String live = get_Reactive_5();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Maps_Reactive_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class Reactive_5 extends LivingDocument {");
    gold.append("\n  private final RxMap<Integer,RxInt32> my_map1;");
    gold.append("\n  private final RxMap<String,RTxX> my_map2;");
    gold.append("\n  private final RxInt32 v;");
    gold.append("\n  private final RxInt32 w;");
    gold.append("\n  private final RxInt32 sz;");
    gold.append("\n  private final RxMap<Long,RxInt32> my_map3;");
    gold.append("\n  private final RxMap<Long,RxMap<Integer,RxInt32>> crazy;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += my_map1.__memory();");
    gold.append("\n    __sum += my_map2.__memory();");
    gold.append("\n    __sum += v.__memory();");
    gold.append("\n    __sum += w.__memory();");
    gold.append("\n    __sum += sz.__memory();");
    gold.append("\n    __sum += my_map3.__memory();");
    gold.append("\n    __sum += crazy.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Reactive_5(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    my_map1 = new RxMap<Integer,RxInt32>(this, new RxMap.IntegerCodec<RxInt32>() { @Override public RxInt32 make(RxParent __parent) { return new RxInt32(__parent, 0);} });");
    gold.append("\n    my_map2 = new RxMap<String,RTxX>(this, new RxMap.StringCodec<RTxX>() { @Override public RTxX make(RxParent __parent) { return new RTxX(__parent);} });");
    gold.append("\n    v = new RxInt32(this, 0);");
    gold.append("\n    w = new RxInt32(this, 0);");
    gold.append("\n    sz = new RxInt32(this, 0);");
    gold.append("\n    my_map3 = new RxMap<Long,RxInt32>(this, new RxMap.LongCodec<RxInt32>() { @Override public RxInt32 make(RxParent __parent) { return new RxInt32(__parent, 0);} });");
    gold.append("\n    crazy = new RxMap<Long,RxMap<Integer,RxInt32>>(this, new RxMap.LongCodec<RxMap<Integer,RxInt32>>() { @Override public RxMap<Integer,RxInt32> make(RxParent __parent) { return new RxMap<Integer,RxInt32>(__parent, new RxMap.IntegerCodec<RxInt32>() { @Override public RxInt32 make(RxParent __parent) { return new RxInt32(__parent, 0);} });} });");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"my_map1\":");
    gold.append("\n            my_map1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"my_map2\":");
    gold.append("\n            my_map2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"v\":");
    gold.append("\n            v.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"w\":");
    gold.append("\n            w.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"sz\":");
    gold.append("\n            sz.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"my_map3\":");
    gold.append("\n            my_map3.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"crazy\":");
    gold.append("\n            crazy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"my_map1\":");
    gold.append("\n            my_map1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"my_map2\":");
    gold.append("\n            my_map2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"v\":");
    gold.append("\n            v.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"w\":");
    gold.append("\n            w.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"sz\":");
    gold.append("\n            sz.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"my_map3\":");
    gold.append("\n            my_map3.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"crazy\":");
    gold.append("\n            crazy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"my_map1\");");
    gold.append("\n    my_map1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"my_map2\");");
    gold.append("\n    my_map2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"v\");");
    gold.append("\n    v.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"w\");");
    gold.append("\n    w.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"sz\");");
    gold.append("\n    sz.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"my_map3\");");
    gold.append("\n    my_map3.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"crazy\");");
    gold.append("\n    crazy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    my_map1.__commit(\"my_map1\", __forward, __reverse);");
    gold.append("\n    my_map2.__commit(\"my_map2\", __forward, __reverse);");
    gold.append("\n    v.__commit(\"v\", __forward, __reverse);");
    gold.append("\n    w.__commit(\"w\", __forward, __reverse);");
    gold.append("\n    sz.__commit(\"sz\", __forward, __reverse);");
    gold.append("\n    my_map3.__commit(\"my_map3\", __forward, __reverse);");
    gold.append("\n    crazy.__commit(\"crazy\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    my_map1.__revert();");
    gold.append("\n    my_map2.__revert();");
    gold.append("\n    v.__revert();");
    gold.append("\n    w.__revert();");
    gold.append("\n    sz.__revert();");
    gold.append("\n    my_map3.__revert();");
    gold.append("\n    crazy.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaReactive_5 {");
    gold.append("\n    private DMap<Integer,DInt32> __dmy_map1;");
    gold.append("\n    private DMap<String,DeltaRTxX> __dmy_map2;");
    gold.append("\n    private DMap<Long,DInt32> __dmy_map3;");
    gold.append("\n    private DMap<Long,DMap<Integer,DInt32>> __dcrazy;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaReactive_5() {");
    gold.append("\n      __dmy_map1 = new DMap<Integer,DInt32>();");
    gold.append("\n      __dmy_map2 = new DMap<String,DeltaRTxX>();");
    gold.append("\n      __dmy_map3 = new DMap<Long,DInt32>();");
    gold.append("\n      __dcrazy = new DMap<Long,DMap<Integer,DInt32>>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(Reactive_5 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      {");
    gold.append("\n        PrivateLazyDeltaWriter __map1 = __obj.planField(\"my_map1\").planObject();");
    gold.append("\n        DMap<Integer,DInt32> __deltaMap2 = __dmy_map1;");
    gold.append("\n        DMap<Integer,DInt32>.Walk __deltaMapWalker3 = __deltaMap2.begin();");
    gold.append("\n        for (Map.Entry<Integer,RxInt32> __mapEntry4 : __item.my_map1) {");
    gold.append("\n          DInt32 __deltaElement5 = __deltaMapWalker3.next(__mapEntry4.getKey(), () -> new DInt32());");
    gold.append("\n          __deltaElement5.show(__mapEntry4.getValue().get(), __map1.planField(\"\" + __mapEntry4.getKey()));");
    gold.append("\n        }");
    gold.append("\n        __deltaMapWalker3.end(__map1);");
    gold.append("\n        __map1.end();");
    gold.append("\n      }");
    gold.append("\n      {");
    gold.append("\n        PrivateLazyDeltaWriter __map6 = __obj.planField(\"my_map2\").planObject();");
    gold.append("\n        DMap<String,DeltaRTxX> __deltaMap7 = __dmy_map2;");
    gold.append("\n        DMap<String,DeltaRTxX>.Walk __deltaMapWalker8 = __deltaMap7.begin();");
    gold.append("\n        for (Map.Entry<String,RTxX> __mapEntry9 : __item.my_map2) {");
    gold.append("\n          DeltaRTxX __deltaElement10 = __deltaMapWalker8.next(__mapEntry9.getKey(), () -> new DeltaRTxX());");
    gold.append("\n          __deltaElement10.show(__mapEntry9.getValue(), __map6.planField(\"\" + __mapEntry9.getKey()));");
    gold.append("\n        }");
    gold.append("\n        __deltaMapWalker8.end(__map6);");
    gold.append("\n        __map6.end();");
    gold.append("\n      }");
    gold.append("\n      {");
    gold.append("\n        PrivateLazyDeltaWriter __map11 = __obj.planField(\"my_map3\").planObject();");
    gold.append("\n        DMap<Long,DInt32> __deltaMap12 = __dmy_map3;");
    gold.append("\n        DMap<Long,DInt32>.Walk __deltaMapWalker13 = __deltaMap12.begin();");
    gold.append("\n        for (Map.Entry<Long,RxInt32> __mapEntry14 : __item.my_map3) {");
    gold.append("\n          DInt32 __deltaElement15 = __deltaMapWalker13.next(__mapEntry14.getKey(), () -> new DInt32());");
    gold.append("\n          __deltaElement15.show(__mapEntry14.getValue().get(), __map11.planField(\"\" + __mapEntry14.getKey()));");
    gold.append("\n        }");
    gold.append("\n        __deltaMapWalker13.end(__map11);");
    gold.append("\n        __map11.end();");
    gold.append("\n      }");
    gold.append("\n      {");
    gold.append("\n        PrivateLazyDeltaWriter __map16 = __obj.planField(\"crazy\").planObject();");
    gold.append("\n        DMap<Long,DMap<Integer,DInt32>> __deltaMap17 = __dcrazy;");
    gold.append("\n        DMap<Long,DMap<Integer,DInt32>>.Walk __deltaMapWalker18 = __deltaMap17.begin();");
    gold.append("\n        for (Map.Entry<Long,RxMap<Integer,RxInt32>> __mapEntry19 : __item.crazy) {");
    gold.append("\n          DMap<Integer,DInt32> __deltaElement20 = __deltaMapWalker18.next(__mapEntry19.getKey(), () -> new DMap<Integer,DInt32>());");
    gold.append("\n          {");
    gold.append("\n            PrivateLazyDeltaWriter __map21 = __map16.planField(\"\" + __mapEntry19.getKey()).planObject();");
    gold.append("\n            DMap<Integer,DInt32> __deltaMap22 = __deltaElement20;");
    gold.append("\n            DMap<Integer,DInt32>.Walk __deltaMapWalker23 = __deltaMap22.begin();");
    gold.append("\n            for (Map.Entry<Integer,RxInt32> __mapEntry24 : __mapEntry19.getValue()) {");
    gold.append("\n              DInt32 __deltaElement25 = __deltaMapWalker23.next(__mapEntry24.getKey(), () -> new DInt32());");
    gold.append("\n              __deltaElement25.show(__mapEntry24.getValue().get(), __map21.planField(\"\" + __mapEntry24.getKey()));");
    gold.append("\n            }");
    gold.append("\n            __deltaMapWalker23.end(__map21);");
    gold.append("\n            __map21.end();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n        __deltaMapWalker18.end(__map16);");
    gold.append("\n        __map16.end();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    Reactive_5 __self = this;");
    gold.append("\n    DeltaReactive_5 __state = new DeltaReactive_5();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_X = new String[] {\"u\", \"v\"};");
    gold.append("\n  private class RTxX extends RxRecordBase<RTxX> {");
    gold.append("\n    private final RxInt32 u;");
    gold.append("\n    private final RxInt32 v;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxX(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      u = new RxInt32(this, 0);");
    gold.append("\n      v = new RxInt32(this, 0);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += u.__memory();");
    gold.append("\n      __sum += v.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_X;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {u.getIndexValue(), v.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"u\":");
    gold.append("\n              u.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"v\":");
    gold.append("\n              v.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"u\":");
    gold.append("\n              u.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"v\":");
    gold.append("\n              v.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"u\");");
    gold.append("\n      u.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"v\");");
    gold.append("\n      v.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        u.__commit(\"u\", __forward, __reverse);");
    gold.append("\n        v.__commit(\"v\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        u.__revert();");
    gold.append("\n        v.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"X\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxX {");
    gold.append("\n    private DInt32 __du;");
    gold.append("\n    private DInt32 __dv;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxX() {");
    gold.append("\n      __du = new DInt32();");
    gold.append("\n      __dv = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxX __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __du.show(__item.u.get(), __obj.planField(\"u\"));");
    gold.append("\n      __dv.show(__item.v.get(), __obj.planField(\"v\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_E = new int[] {0, 1};");
    gold.append("\n  private static class RTx_AnonObjConvert_0 implements NtMessageBase {");
    gold.append("\n    private int u = 0;");
    gold.append("\n    private int v = 0;");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"u\":");
    gold.append("\n              this.u = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            case \"v\":");
    gold.append("\n              this.v = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"u\");");
    gold.append("\n      __writer.writeInteger(u);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"v\");");
    gold.append("\n      __writer.writeInteger(v);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() {}");
    gold.append("\n    private RTx_AnonObjConvert_0(int u, int v) {");
    gold.append("\n      this.u = u;");
    gold.append("\n      this.v = v;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 {");
    gold.append("\n    private DInt32 __du;");
    gold.append("\n    private DInt32 __dv;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __du = new DInt32();");
    gold.append("\n      __dv = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __du.show(__item.u, __obj.planField(\"u\"));");
    gold.append("\n      __dv.show(__item.v, __obj.planField(\"v\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public boolean __onConnected__0(NtClient who){");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 9;");
    gold.append("\n    __track(1);");
    gold.append("\n    my_map1.getOrCreate(42).set(24);");
    gold.append("\n    __track(2);");
    gold.append("\n    my_map1.getOrCreate(500).set(100500);");
    gold.append("\n    __track(3);");
    gold.append("\n    crazy.getOrCreate((long) 100).getOrCreate(100).set(42);");
    gold.append("\n    __track(4);");
    gold.append("\n    NtMaybe<RxInt32> _AutoConditionx_26;");
    gold.append("\n    if ((_AutoConditionx_26 = my_map1.lookup(4)).has()) {");
    gold.append("\n      RxInt32 x = _AutoConditionx_26.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(5);");
    gold.append("\n      my_map1.getOrCreate(5000).set(123);");
    gold.append("\n    } else {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(6);");
    gold.append("\n      my_map1.getOrCreate(1000).set(9999);");
    gold.append("\n    }");
    gold.append("\n    __track(7);");
    gold.append("\n    NtMaybe<RxInt32> _AutoConditionx_27;");
    gold.append("\n    if ((_AutoConditionx_27 = my_map1.lookup(500)).has()) {");
    gold.append("\n      RxInt32 x = _AutoConditionx_27.get();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(8);");
    gold.append("\n      v.set(x.get());");
    gold.append("\n      __track(9);");
    gold.append("\n      x.set(424242);");
    gold.append("\n    }");
    gold.append("\n    __track(10);");
    gold.append("\n    {");
    gold.append("\n      RTxX _AutoRef28 = my_map2.getOrCreate(\"hi\");");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr30 = new RTx_AnonObjConvert_0(42, 50);");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _AutoRef28.u.set(_AutoExpr30.u);");
    gold.append("\n      _AutoRef28.v.set(_AutoExpr30.v);");
    gold.append("\n    }");
    gold.append("\n    __track(11);");
    gold.append("\n    NtMaybe<RTxX> _AutoConditionuv_31;");
    gold.append("\n    if ((_AutoConditionuv_31 = my_map2.lookup(\"hi\")).has()) {");
    gold.append("\n      RTxX uv = _AutoConditionuv_31.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(12);");
    gold.append("\n      w.set(uv.u.get() + uv.v.get());");
    gold.append("\n    }");
    gold.append("\n    __track(13);");
    gold.append("\n    sz.set(my_map1.size());");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"my_map1\":{\"type\":{\"nature\":\"reactive_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"int\"},\"range\":{\"nature\":\"reactive_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"my_map2\":{\"type\":{\"nature\":\"reactive_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"string\"},\"range\":{\"nature\":\"reactive_ref\",\"ref\":\"X\"}},\"privacy\":\"public\"},\"my_map3\":{\"type\":{\"nature\":\"reactive_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"long\"},\"range\":{\"nature\":\"reactive_ref\",\"ref\":\"E\"}},\"privacy\":\"public\"},\"crazy\":{\"type\":{\"nature\":\"reactive_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"long\"},\"range\":{\"nature\":\"reactive_map\",\"domain\":{\"nature\":\"native_value\",\"type\":\"int\"},\"range\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"X\":{\"nature\":\"reactive_record\",\"name\":\"X\",\"fields\":{\"u\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"v\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"E\":{\"nature\":\"native_value\",\"enum\":\"E\",\"options\":{\"options\":{\"A\":0,\"B\":1},\"default\":\"A\"}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"u\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"v\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}}}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\",\"my_map1\":{\"42\":24,\"500\":424242,\"1000\":9999},\"my_map2\":{\"hi\":{\"u\":42,\"v\":50}},\"v\":100500,\"w\":92,\"sz\":3,\"crazy\":{\"100\":{\"100\":42}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:18");
    gold.append("\nMEMORY:1870");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"my_map1\":{\"42\":24,\"500\":424242,\"1000\":9999},\"my_map2\":{\"hi\":{\"u\":42,\"v\":50}},\"crazy\":{\"100\":{\"100\":42}}},\"seq\":2}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"}}-->{\"__seq\":3,\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"-1034601897293430941\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"125\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"7848011421992302230\",\"__time\":\"125\"} need:false in:-125");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"my_map1\":{\"42\":24,\"500\":424242,\"1000\":9999},\"my_map2\":{\"hi\":{\"u\":42,\"v\":50}},\"crazy\":{\"100\":{\"100\":42}}},\"seq\":5}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"150\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}-->{\"__seq\":6,\"__connection_id\":2,\"__time\":\"150\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"175\"}-->{\"__messages\":null,\"__seq\":7,\"__entropy\":\"-8929183248358367000\",\"__time\":\"175\"} need:false in:-175");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":7}");
    gold.append("\n+ RANDO DELTA:{\"seq\":7}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"200\"}-->{\"__messages\":null,\"__seq\":8,\"__entropy\":\"488730542833106255\",\"__time\":\"200\"} need:false in:-200");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"my_map1\":{\"42\":24,\"500\":424242,\"1000\":9999},\"my_map2\":{\"hi\":{\"u\":42,\"v\":50,\"id\":0}},\"v\":100500,\"w\":92,\"sz\":3,\"my_map3\":{},\"crazy\":{\"100\":{\"100\":42}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":8,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"200\",\"__auto_table_row_id\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"my_map1\":{\"42\":24,\"500\":424242,\"1000\":9999},\"my_map2\":{\"hi\":{\"u\":42,\"v\":50,\"id\":0}},\"v\":100500,\"w\":92,\"sz\":3,\"my_map3\":{},\"crazy\":{\"100\":{\"100\":42}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":8,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"200\",\"__auto_table_row_id\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"my_map1\":{\"42\":24,\"500\":424242,\"1000\":9999},\"my_map2\":{\"hi\":{\"u\":42,\"v\":50,\"id\":0}},\"v\":100500,\"w\":92,\"sz\":3,\"my_map3\":{},\"crazy\":{\"100\":{\"100\":42}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":8,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"200\",\"__auto_table_row_id\":0,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_ReduceHappy_6 = null;
  private String get_ReduceHappy_6() {
    if (cached_ReduceHappy_6 != null) {
      return cached_ReduceHappy_6;
    }
    cached_ReduceHappy_6 = generateTestOutput(true, "ReduceHappy_6", "./test_code/Maps_ReduceHappy_success.a");
    return cached_ReduceHappy_6;
  }

  @Test
  public void testReduceHappyEmission() {
    assertEmissionGood(get_ReduceHappy_6());
  }

  @Test
  public void testReduceHappySuccess() {
    assertLivePass(get_ReduceHappy_6());
  }

  @Test
  public void testReduceHappyGoodWillHappy() {
    assertGoodWillHappy(get_ReduceHappy_6());
  }

  @Test
  public void testReduceHappyExceptionFree() {
    assertExceptionFree(get_ReduceHappy_6());
  }

  @Test
  public void testReduceHappyTODOFree() {
    assertTODOFree(get_ReduceHappy_6());
  }

  @Test
  public void stable_ReduceHappy_6() {
    String live = get_ReduceHappy_6();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Maps_ReduceHappy_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class ReduceHappy_6 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxR> t;");
    gold.append("\n  private final RxInt32 x1;");
    gold.append("\n  private final RxInt32 x2;");
    gold.append("\n  private final RxInt32 x3;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += t.__memory();");
    gold.append("\n    __sum += x1.__memory();");
    gold.append("\n    __sum += x2.__memory();");
    gold.append("\n    __sum += x3.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public ReduceHappy_6(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    t = new RxTable<>(__self, this, \"t\", (RxParent __parent) -> new RTxR(__parent), 0);");
    gold.append("\n    x1 = new RxInt32(this, 0);");
    gold.append("\n    x2 = new RxInt32(this, 0);");
    gold.append("\n    x3 = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"t\":");
    gold.append("\n            t.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x1\":");
    gold.append("\n            x1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x2\":");
    gold.append("\n            x2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x3\":");
    gold.append("\n            x3.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"t\":");
    gold.append("\n            t.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x1\":");
    gold.append("\n            x1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x2\":");
    gold.append("\n            x2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x3\":");
    gold.append("\n            x3.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"t\");");
    gold.append("\n    t.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x1\");");
    gold.append("\n    x1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x2\");");
    gold.append("\n    x2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x3\");");
    gold.append("\n    x3.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    t.__commit(\"t\", __forward, __reverse);");
    gold.append("\n    x1.__commit(\"x1\", __forward, __reverse);");
    gold.append("\n    x2.__commit(\"x2\", __forward, __reverse);");
    gold.append("\n    x3.__commit(\"x3\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    t.__revert();");
    gold.append("\n    x1.__revert();");
    gold.append("\n    x2.__revert();");
    gold.append("\n    x3.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaReduceHappy_6 {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaReduceHappy_6() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(ReduceHappy_6 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    ReduceHappy_6 __self = this;");
    gold.append("\n    DeltaReduceHappy_6 __state = new DeltaReduceHappy_6();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_R = new String[] {\"v\", \"x\"};");
    gold.append("\n  private class RTxR extends RxRecordBase<RTxR> {");
    gold.append("\n    private final RxInt32 x;");
    gold.append("\n    private final RxInt32 v;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxR(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      x = new RxInt32(this, 0);");
    gold.append("\n      v = new RxInt32(this, 0);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += x.__memory();");
    gold.append("\n      __sum += v.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_R;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {v.getIndexValue(), x.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"v\":");
    gold.append("\n              v.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"v\":");
    gold.append("\n              v.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      x.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"v\");");
    gold.append("\n      v.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n        v.__commit(\"v\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        x.__revert();");
    gold.append("\n        v.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"R\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxR {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxR() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxR __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_1 implements NtMessageBase {");
    gold.append("\n    private int v = 0;");
    gold.append("\n    private int x = 0;");
    gold.append("\n    private RTx_AnonObjConvert_1(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"v\":");
    gold.append("\n              this.v = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              this.x = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"v\");");
    gold.append("\n      __writer.writeInteger(v);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      __writer.writeInteger(x);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_1() {}");
    gold.append("\n    private RTx_AnonObjConvert_1(int v, int x) {");
    gold.append("\n      this.v = v;");
    gold.append("\n      this.x = x;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_1 {");
    gold.append("\n    private DInt32 __dv;");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_1() {");
    gold.append("\n      __dv = new DInt32();");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dv.show(__item.v, __obj.planField(\"v\"));");
    gold.append("\n      __dx.show(__item.x, __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private int __FUNC_0_foo(NtList<RTxR> z) {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(0);");
    gold.append("\n    int sv = 0;");
    gold.append("\n    __track(1);");
    gold.append("\n    for(RTxR e : z.get()) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(2);");
    gold.append("\n      sv += e.v.get();");
    gold.append("\n    }");
    gold.append("\n    __track(3);");
    gold.append("\n    return sv;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 11;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef7 = t;");
    gold.append("\n      RTx_AnonObjConvert_1 _AutoExpr9 = new RTx_AnonObjConvert_1(1, 1);");
    gold.append("\n      RTxR _CreateRef8 = _AutoRef7.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef8.v.set(_AutoExpr9.v);");
    gold.append("\n      _CreateRef8.x.set(_AutoExpr9.x);");
    gold.append("\n    }");
    gold.append("\n    __track(1);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef10 = t;");
    gold.append("\n      RTx_AnonObjConvert_1 _AutoExpr12 = new RTx_AnonObjConvert_1(5, 2);");
    gold.append("\n      RTxR _CreateRef11 = _AutoRef10.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef11.v.set(_AutoExpr12.v);");
    gold.append("\n      _CreateRef11.x.set(_AutoExpr12.x);");
    gold.append("\n    }");
    gold.append("\n    __track(2);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef13 = t;");
    gold.append("\n      RTx_AnonObjConvert_1 _AutoExpr15 = new RTx_AnonObjConvert_1(10, 3);");
    gold.append("\n      RTxR _CreateRef14 = _AutoRef13.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef14.v.set(_AutoExpr15.v);");
    gold.append("\n      _CreateRef14.x.set(_AutoExpr15.x);");
    gold.append("\n    }");
    gold.append("\n    __track(3);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef16 = t;");
    gold.append("\n      RTx_AnonObjConvert_1 _AutoExpr18 = new RTx_AnonObjConvert_1(10, 2);");
    gold.append("\n      RTxR _CreateRef17 = _AutoRef16.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef17.v.set(_AutoExpr18.v);");
    gold.append("\n      _CreateRef17.x.set(_AutoExpr18.x);");
    gold.append("\n    }");
    gold.append("\n    __track(4);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef19 = t;");
    gold.append("\n      RTx_AnonObjConvert_1 _AutoExpr21 = new RTx_AnonObjConvert_1(100, 3);");
    gold.append("\n      RTxR _CreateRef20 = _AutoRef19.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef20.v.set(_AutoExpr21.v);");
    gold.append("\n      _CreateRef20.x.set(_AutoExpr21.x);");
    gold.append("\n    }");
    gold.append("\n    __track(5);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxR> _AutoRef22 = t;");
    gold.append("\n      RTx_AnonObjConvert_1 _AutoExpr24 = new RTx_AnonObjConvert_1(1000, 3);");
    gold.append("\n      RTxR _CreateRef23 = _AutoRef22.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef23.v.set(_AutoExpr24.v);");
    gold.append("\n      _CreateRef23.x.set(_AutoExpr24.x);");
    gold.append("\n    }");
    gold.append("\n    __track(6);");
    gold.append("\n    final NtMap<Integer,Integer> mp = new NtMap<Integer,Integer>((t.iterate(false)).reduce((__item) -> __item.x.get(), (__list) -> __FUNC_0_foo(__list)));");
    gold.append("\n    __track(7);");
    gold.append("\n    NtMaybe<Integer> _AutoConditionv_25;");
    gold.append("\n    if ((_AutoConditionv_25 = mp.lookup(1)).has()) {");
    gold.append("\n      int v = _AutoConditionv_25.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(8);");
    gold.append("\n      x1.set(v);");
    gold.append("\n    }");
    gold.append("\n    __track(9);");
    gold.append("\n    NtMaybe<Integer> _AutoConditionv_26;");
    gold.append("\n    if ((_AutoConditionv_26 = mp.lookup(2)).has()) {");
    gold.append("\n      int v = _AutoConditionv_26.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(10);");
    gold.append("\n      x2.set(v);");
    gold.append("\n    }");
    gold.append("\n    __track(11);");
    gold.append("\n    NtMaybe<Integer> _AutoConditionv_27;");
    gold.append("\n    if ((_AutoConditionv_27 = mp.lookup(3)).has()) {");
    gold.append("\n      int v = _AutoConditionv_27.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(12);");
    gold.append("\n      x3.set(v);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"R\":{\"nature\":\"reactive_record\",\"name\":\"R\",\"fields\":{}},\"_AnonObjConvert_1\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_1\",\"anonymous\":true,\"fields\":{\"v\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"x\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}}}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\",\"__auto_table_row_id\":6,\"t\":{\"1\":{\"x\":1,\"v\":1,\"id\":1},\"2\":{\"x\":2,\"v\":5,\"id\":2},\"3\":{\"x\":3,\"v\":10,\"id\":3},\"4\":{\"x\":2,\"v\":10,\"id\":4},\"5\":{\"x\":3,\"v\":100,\"id\":5},\"6\":{\"x\":3,\"v\":1000,\"id\":6}},\"x1\":1,\"x2\":15,\"x3\":1110} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:53");
    gold.append("\nMEMORY:1870");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":2}");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"seq\":3}");
    gold.append("\nRANDO was DENIED:");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"t\":{\"1\":{\"x\":1,\"v\":1,\"id\":1},\"2\":{\"x\":2,\"v\":5,\"id\":2},\"3\":{\"x\":3,\"v\":10,\"id\":3},\"4\":{\"x\":2,\"v\":10,\"id\":4},\"5\":{\"x\":3,\"v\":100,\"id\":5},\"6\":{\"x\":3,\"v\":1000,\"id\":6}},\"x1\":1,\"x2\":15,\"x3\":1110,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":6}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"t\":{\"1\":{\"x\":1,\"v\":1,\"id\":1},\"2\":{\"x\":2,\"v\":5,\"id\":2},\"3\":{\"x\":3,\"v\":10,\"id\":3},\"4\":{\"x\":2,\"v\":10,\"id\":4},\"5\":{\"x\":3,\"v\":100,\"id\":5},\"6\":{\"x\":3,\"v\":1000,\"id\":6}},\"x1\":1,\"x2\":15,\"x3\":1110,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":6}");
    gold.append("\n{\"t\":{\"1\":{\"x\":1,\"v\":1,\"id\":1},\"2\":{\"x\":2,\"v\":5,\"id\":2},\"3\":{\"x\":3,\"v\":10,\"id\":3},\"4\":{\"x\":2,\"v\":10,\"id\":4},\"5\":{\"x\":3,\"v\":100,\"id\":5},\"6\":{\"x\":3,\"v\":1000,\"id\":6}},\"x1\":1,\"x2\":15,\"x3\":1110,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":6}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_ReduceSad_7 = null;
  private String get_ReduceSad_7() {
    if (cached_ReduceSad_7 != null) {
      return cached_ReduceSad_7;
    }
    cached_ReduceSad_7 = generateTestOutput(false, "ReduceSad_7", "./test_code/Maps_ReduceSad_failure.a");
    return cached_ReduceSad_7;
  }

  @Test
  public void testReduceSadFailure() {
    assertLiveFail(get_ReduceSad_7());
  }

  @Test
  public void testReduceSadNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_ReduceSad_7());
  }

  @Test
  public void testReduceSadExceptionFree() {
    assertExceptionFree(get_ReduceSad_7());
  }

  @Test
  public void testReduceSadTODOFree() {
    assertTODOFree(get_ReduceSad_7());
  }

  @Test
  public void stable_ReduceSad_7() {
    String live = get_ReduceSad_7();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Maps_ReduceSad_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":10,\"character\":0},\"end\":{\"line\":11,\"character\":1}},\"severity\":1,\"source\":\"error\",\"message\":\"The function 'goo' does not return in all cases (FunctionDefine)\"},{\"range\":{\"start\":{\"line\":21,\"character\":11},\"end\":{\"line\":21,\"character\":39}},\"severity\":1,\"source\":\"error\",\"message\":\"Function '$<foo>' must be a pure function a value (Reduce)\"},{\"range\":{\"start\":{\"line\":21,\"character\":11},\"end\":{\"line\":21,\"character\":39}},\"severity\":1,\"source\":\"error\",\"message\":\"Function '$<foo>' must return value (Reduce)\"},{\"range\":{\"start\":{\"line\":22,\"character\":11},\"end\":{\"line\":22,\"character\":39}},\"severity\":1,\"source\":\"error\",\"message\":\"Function invoked with wrong number of arguments. Expected 2, got 1 (FunctionInvoke)\"},{\"range\":{\"start\":{\"line\":23,\"character\":39},\"end\":{\"line\":23,\"character\":42}},\"severity\":1,\"source\":\"error\",\"message\":\"The variable 'zoo' was not defined (VariableLookup)\"},{\"range\":{\"start\":{\"line\":24,\"character\":11},\"end\":{\"line\":24,\"character\":42}},\"severity\":1,\"source\":\"error\",\"message\":\"Function '$<foo>' must be a pure function a value (Reduce)\"},{\"range\":{\"start\":{\"line\":24,\"character\":11},\"end\":{\"line\":24,\"character\":42}},\"severity\":1,\"source\":\"error\",\"message\":\"Function '$<foo>' must return value (Reduce)\"},{\"range\":{\"start\":{\"line\":24,\"character\":11},\"end\":{\"line\":24,\"character\":42}},\"severity\":1,\"source\":\"error\",\"message\":\"Field 'z' was not found for reduction (Reduce)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
}
