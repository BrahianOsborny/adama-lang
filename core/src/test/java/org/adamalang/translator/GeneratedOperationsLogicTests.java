/*
 * This file is subject to the terms and conditions outlined in the file 'LICENSE' (hint: it's MIT); this file is located in the root directory near the README.md which you should also read.
 *
 * This file is part of the 'Adama' project which is a programming language and document store for board games; however, it can be so much more.
 *
 * See http://www.adama-lang.org/ for more information.
 *
 * (c) 2020 - 2022 by Jeffrey M. Barber (http://jeffrey.io)
 */
package org.adamalang.translator;

import org.junit.Test;

public class GeneratedOperationsLogicTests extends GeneratedBase {
  private String cached_Formulas_1 = null;
  private String get_Formulas_1() {
    if (cached_Formulas_1 != null) {
      return cached_Formulas_1;
    }
    cached_Formulas_1 = generateTestOutput(true, "Formulas_1", "./test_code/OperationsLogic_Formulas_success.a");
    return cached_Formulas_1;
  }

  @Test
  public void testFormulasEmission() {
    assertEmissionGood(get_Formulas_1());
  }

  @Test
  public void testFormulasSuccess() {
    assertLivePass(get_Formulas_1());
  }

  @Test
  public void testFormulasGoodWillHappy() {
    assertGoodWillHappy(get_Formulas_1());
  }

  @Test
  public void testFormulasExceptionFree() {
    assertExceptionFree(get_Formulas_1());
  }

  @Test
  public void testFormulasTODOFree() {
    assertTODOFree(get_Formulas_1());
  }

  @Test
  public void stable_Formulas_1() {
    String live = get_Formulas_1();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:OperationsLogic_Formulas_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class Formulas_1 extends LivingDocument {");
    gold.append("\n  private final RxLazy<Boolean> f0;");
    gold.append("\n  private final RxLazy<Boolean> f1;");
    gold.append("\n  private final RxLazy<Boolean> f2;");
    gold.append("\n  private final RxLazy<Boolean> f3;");
    gold.append("\n  private final RxLazy<Boolean> f4;");
    gold.append("\n  private final RxLazy<Boolean> f5;");
    gold.append("\n  private final RxLazy<Boolean> f6;");
    gold.append("\n  private final RxLazy<Boolean> f7;");
    gold.append("\n  private final RxLazy<Boolean> f8;");
    gold.append("\n  private final RxLazy<Boolean> f9;");
    gold.append("\n  private final RxLazy<Boolean> f10;");
    gold.append("\n  private final RxLazy<Boolean> f11;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += f0.__memory();");
    gold.append("\n    __sum += f1.__memory();");
    gold.append("\n    __sum += f2.__memory();");
    gold.append("\n    __sum += f3.__memory();");
    gold.append("\n    __sum += f4.__memory();");
    gold.append("\n    __sum += f5.__memory();");
    gold.append("\n    __sum += f6.__memory();");
    gold.append("\n    __sum += f7.__memory();");
    gold.append("\n    __sum += f8.__memory();");
    gold.append("\n    __sum += f9.__memory();");
    gold.append("\n    __sum += f10.__memory();");
    gold.append("\n    __sum += f11.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Formulas_1(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    f0 = new RxLazy<Boolean>(this, () -> (true || true));");
    gold.append("\n    f1 = new RxLazy<Boolean>(this, () -> (true && true));");
    gold.append("\n    f2 = new RxLazy<Boolean>(this, () -> (LibMath.xor(true, true)));");
    gold.append("\n    f3 = new RxLazy<Boolean>(this, () -> (true || false));");
    gold.append("\n    f4 = new RxLazy<Boolean>(this, () -> (true && false));");
    gold.append("\n    f5 = new RxLazy<Boolean>(this, () -> (LibMath.xor(true, false)));");
    gold.append("\n    f6 = new RxLazy<Boolean>(this, () -> (false || true));");
    gold.append("\n    f7 = new RxLazy<Boolean>(this, () -> (false && true));");
    gold.append("\n    f8 = new RxLazy<Boolean>(this, () -> (LibMath.xor(false, true)));");
    gold.append("\n    f9 = new RxLazy<Boolean>(this, () -> (false || false));");
    gold.append("\n    f10 = new RxLazy<Boolean>(this, () -> (false && false));");
    gold.append("\n    f11 = new RxLazy<Boolean>(this, () -> (LibMath.xor(false, false)));");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaFormulas_1 implements DeltaNode {");
    gold.append("\n    private int __gf0;");
    gold.append("\n    private DBoolean __df0;");
    gold.append("\n    private int __gf1;");
    gold.append("\n    private DBoolean __df1;");
    gold.append("\n    private int __gf2;");
    gold.append("\n    private DBoolean __df2;");
    gold.append("\n    private int __gf3;");
    gold.append("\n    private DBoolean __df3;");
    gold.append("\n    private int __gf4;");
    gold.append("\n    private DBoolean __df4;");
    gold.append("\n    private int __gf5;");
    gold.append("\n    private DBoolean __df5;");
    gold.append("\n    private int __gf6;");
    gold.append("\n    private DBoolean __df6;");
    gold.append("\n    private int __gf7;");
    gold.append("\n    private DBoolean __df7;");
    gold.append("\n    private int __gf8;");
    gold.append("\n    private DBoolean __df8;");
    gold.append("\n    private int __gf9;");
    gold.append("\n    private DBoolean __df9;");
    gold.append("\n    private int __gf10;");
    gold.append("\n    private DBoolean __df10;");
    gold.append("\n    private int __gf11;");
    gold.append("\n    private DBoolean __df11;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaFormulas_1() {");
    gold.append("\n      __gf0 = -1;");
    gold.append("\n      __df0 = new DBoolean();");
    gold.append("\n      __gf1 = -1;");
    gold.append("\n      __df1 = new DBoolean();");
    gold.append("\n      __gf2 = -1;");
    gold.append("\n      __df2 = new DBoolean();");
    gold.append("\n      __gf3 = -1;");
    gold.append("\n      __df3 = new DBoolean();");
    gold.append("\n      __gf4 = -1;");
    gold.append("\n      __df4 = new DBoolean();");
    gold.append("\n      __gf5 = -1;");
    gold.append("\n      __df5 = new DBoolean();");
    gold.append("\n      __gf6 = -1;");
    gold.append("\n      __df6 = new DBoolean();");
    gold.append("\n      __gf7 = -1;");
    gold.append("\n      __df7 = new DBoolean();");
    gold.append("\n      __gf8 = -1;");
    gold.append("\n      __df8 = new DBoolean();");
    gold.append("\n      __gf9 = -1;");
    gold.append("\n      __df9 = new DBoolean();");
    gold.append("\n      __gf10 = -1;");
    gold.append("\n      __df10 = new DBoolean();");
    gold.append("\n      __gf11 = -1;");
    gold.append("\n      __df11 = new DBoolean();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __df0.__memory();");
    gold.append("\n      __sum += __df1.__memory();");
    gold.append("\n      __sum += __df2.__memory();");
    gold.append("\n      __sum += __df3.__memory();");
    gold.append("\n      __sum += __df4.__memory();");
    gold.append("\n      __sum += __df5.__memory();");
    gold.append("\n      __sum += __df6.__memory();");
    gold.append("\n      __sum += __df7.__memory();");
    gold.append("\n      __sum += __df8.__memory();");
    gold.append("\n      __sum += __df9.__memory();");
    gold.append("\n      __sum += __df10.__memory();");
    gold.append("\n      __sum += __df11.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(Formulas_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 12;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gf0 != __item.f0.getGeneration()) {");
    gold.append("\n        __df0.show(__item.f0.get(), __obj.planField(\"f0\"));");
    gold.append("\n        __gf0 = __item.f0.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf1 != __item.f1.getGeneration()) {");
    gold.append("\n        __df1.show(__item.f1.get(), __obj.planField(\"f1\"));");
    gold.append("\n        __gf1 = __item.f1.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf2 != __item.f2.getGeneration()) {");
    gold.append("\n        __df2.show(__item.f2.get(), __obj.planField(\"f2\"));");
    gold.append("\n        __gf2 = __item.f2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf3 != __item.f3.getGeneration()) {");
    gold.append("\n        __df3.show(__item.f3.get(), __obj.planField(\"f3\"));");
    gold.append("\n        __gf3 = __item.f3.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf4 != __item.f4.getGeneration()) {");
    gold.append("\n        __df4.show(__item.f4.get(), __obj.planField(\"f4\"));");
    gold.append("\n        __gf4 = __item.f4.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf5 != __item.f5.getGeneration()) {");
    gold.append("\n        __df5.show(__item.f5.get(), __obj.planField(\"f5\"));");
    gold.append("\n        __gf5 = __item.f5.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf6 != __item.f6.getGeneration()) {");
    gold.append("\n        __df6.show(__item.f6.get(), __obj.planField(\"f6\"));");
    gold.append("\n        __gf6 = __item.f6.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf7 != __item.f7.getGeneration()) {");
    gold.append("\n        __df7.show(__item.f7.get(), __obj.planField(\"f7\"));");
    gold.append("\n        __gf7 = __item.f7.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf8 != __item.f8.getGeneration()) {");
    gold.append("\n        __df8.show(__item.f8.get(), __obj.planField(\"f8\"));");
    gold.append("\n        __gf8 = __item.f8.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf9 != __item.f9.getGeneration()) {");
    gold.append("\n        __df9.show(__item.f9.get(), __obj.planField(\"f9\"));");
    gold.append("\n        __gf9 = __item.f9.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf10 != __item.f10.getGeneration()) {");
    gold.append("\n        __df10.show(__item.f10.get(), __obj.planField(\"f10\"));");
    gold.append("\n        __gf10 = __item.f10.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf11 != __item.f11.getGeneration()) {");
    gold.append("\n        __df11.show(__item.f11.get(), __obj.planField(\"f11\"));");
    gold.append("\n        __gf11 = __item.f11.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    Formulas_1 __self = this;");
    gold.append("\n    DeltaFormulas_1 __state = new DeltaFormulas_1();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, NtMessageBase message) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"f0\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f1\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f3\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f4\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f5\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f6\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f7\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f8\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f9\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f10\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"f11\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:864");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"f0\":true,\"f1\":true,\"f2\":false,\"f3\":true,\"f4\":false,\"f5\":true,\"f6\":true,\"f7\":false,\"f8\":true,\"f9\":false,\"f10\":false,\"f11\":false},\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"f0\":true,\"f1\":true,\"f2\":false,\"f3\":true,\"f4\":false,\"f5\":true,\"f6\":true,\"f7\":false,\"f8\":true,\"f9\":false,\"f10\":false,\"f11\":false},\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:1942");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
}
