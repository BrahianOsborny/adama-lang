/*
 * This file is subject to the terms and conditions outlined in the file 'LICENSE' (hint: it's MIT); this file is located in the root directory near the README.md which you should also read.
 *
 * This file is part of the 'Adama' project which is a programming language and document store for board games; however, it can be so much more.
 *
 * See https://www.adama-platform.com/ for more information.
 *
 * (c) 2020 - 2022 by Jeffrey M. Barber ( http://jeffrey.io )
 */
package org.adamalang.translator;

import org.junit.Test;

public class GeneratedDemoTests extends GeneratedBase {
  private String cached_BlogMaxSeq_1 = null;
  private String get_BlogMaxSeq_1() {
    if (cached_BlogMaxSeq_1 != null) {
      return cached_BlogMaxSeq_1;
    }
    cached_BlogMaxSeq_1 = generateTestOutput(true, "BlogMaxSeq_1", "./test_code/Demo_BlogMaxSeq_success.a");
    return cached_BlogMaxSeq_1;
  }

  @Test
  public void testBlogMaxSeqEmission() {
    assertEmissionGood(get_BlogMaxSeq_1());
  }

  @Test
  public void testBlogMaxSeqSuccess() {
    assertLivePass(get_BlogMaxSeq_1());
  }

  @Test
  public void testBlogMaxSeqGoodWillHappy() {
    assertGoodWillHappy(get_BlogMaxSeq_1());
  }

  @Test
  public void testBlogMaxSeqExceptionFree() {
    assertExceptionFree(get_BlogMaxSeq_1());
  }

  @Test
  public void testBlogMaxSeqTODOFree() {
    assertTODOFree(get_BlogMaxSeq_1());
  }

  @Test
  public void stable_BlogMaxSeq_1() {
    String live = get_BlogMaxSeq_1();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_BlogMaxSeq_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class BlogMaxSeq_1 extends LivingDocument {");
    gold.append("\n  private final RxInt32 max_db_seq;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += max_db_seq.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public BlogMaxSeq_1(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    max_db_seq = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"max_db_seq\":");
    gold.append("\n            max_db_seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"max_db_seq\":");
    gold.append("\n            max_db_seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"max_db_seq\");");
    gold.append("\n    max_db_seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    max_db_seq.__commit(\"max_db_seq\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    max_db_seq.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaBlogMaxSeq_1 implements DeltaNode {");
    gold.append("\n    private DInt32 __dmax_db_seq;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaBlogMaxSeq_1() {");
    gold.append("\n      __dmax_db_seq = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dmax_db_seq.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(BlogMaxSeq_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dmax_db_seq.show(__item.max_db_seq.get(), __obj.planField(\"max_db_seq\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dmax_db_seq.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    BlogMaxSeq_1 __self = this;");
    gold.append("\n    DeltaBlogMaxSeq_1 __state = new DeltaBlogMaxSeq_1();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxNotifyWrite extends NtMessageBase {");
    gold.append("\n    private int db_seq = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"db_seq\");");
    gold.append("\n      __hash.hashInteger(this.db_seq);");
    gold.append("\n      __hash.hashString(\"NotifyWrite\");");
    gold.append("\n    }");
    gold.append("\n    private RTxNotifyWrite(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"db_seq\":");
    gold.append("\n              this.db_seq = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"db_seq\");");
    gold.append("\n      __writer.writeInteger(db_seq);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxNotifyWrite() {}");
    gold.append("\n    private RTxNotifyWrite(int db_seq) {");
    gold.append("\n      this.db_seq = db_seq;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxNotifyWrite implements DeltaNode {");
    gold.append("\n    private DInt32 __ddb_seq;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxNotifyWrite() {");
    gold.append("\n      __ddb_seq = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __ddb_seq.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxNotifyWrite __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __ddb_seq.show(__item.db_seq, __obj.planField(\"db_seq\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __ddb_seq.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  private void handleChannelMessage_notify(CoreRequestContext __context, NtPrincipal __who, RTxNotifyWrite message) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    if (message.db_seq > max_db_seq.get()) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(1);");
    gold.append("\n      max_db_seq.set(message.db_seq);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"notify\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"notify\":");
    gold.append("\n        handleChannelMessage_notify(__context, __context.who, (RTxNotifyWrite) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"notify\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_notify(__task.context(__getKey()), __task.who, (RTxNotifyWrite)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"notify\":");
    gold.append("\n        return new RTxNotifyWrite(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"max_db_seq\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"NotifyWrite\":{\"nature\":\"native_message\",\"name\":\"NotifyWrite\",\"anonymous\":false,\"fields\":{\"db_seq\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}}},\"channels\":{\"notify\":\"NotifyWrite\"},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:432");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"max_db_seq\":0},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"max_db_seq\":0},\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:630");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"max_db_seq\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"max_db_seq\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"max_db_seq\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_BlogPubSub_2 = null;
  private String get_BlogPubSub_2() {
    if (cached_BlogPubSub_2 != null) {
      return cached_BlogPubSub_2;
    }
    cached_BlogPubSub_2 = generateTestOutput(true, "BlogPubSub_2", "./test_code/Demo_BlogPubSub_success.a");
    return cached_BlogPubSub_2;
  }

  @Test
  public void testBlogPubSubEmission() {
    assertEmissionGood(get_BlogPubSub_2());
  }

  @Test
  public void testBlogPubSubSuccess() {
    assertLivePass(get_BlogPubSub_2());
  }

  @Test
  public void testBlogPubSubGoodWillHappy() {
    assertGoodWillHappy(get_BlogPubSub_2());
  }

  @Test
  public void testBlogPubSubExceptionFree() {
    assertExceptionFree(get_BlogPubSub_2());
  }

  @Test
  public void testBlogPubSubTODOFree() {
    assertTODOFree(get_BlogPubSub_2());
  }

  @Test
  public void stable_BlogPubSub_2() {
    String live = get_BlogPubSub_2();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_BlogPubSub_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class BlogPubSub_2 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxPublish> _publishes;");
    gold.append("\n  private final RxLazy<NtList<RTxPublish>> publishes;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += _publishes.__memory();");
    gold.append("\n    __sum += publishes.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public BlogPubSub_2(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    _publishes = new RxTable<>(__self, this, \"_publishes\", (RxParent __parent) -> new RTxPublish(__parent), 0);");
    gold.append("\n    publishes = new RxLazy<NtList<RTxPublish>>(this, () -> (_publishes.iterate(false).orderBy(true, __ORDER_Publish_when_a)));");
    gold.append("\n    _publishes.__subscribe(publishes);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_publishes\":");
    gold.append("\n            _publishes.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_publishes\":");
    gold.append("\n            _publishes.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_publishes\");");
    gold.append("\n    _publishes.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    _publishes.__commit(\"_publishes\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    _publishes.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaBlogPubSub_2 implements DeltaNode {");
    gold.append("\n    private int __gpublishes;");
    gold.append("\n    private DRecordList<DeltaRTxPublish> __dpublishes;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaBlogPubSub_2() {");
    gold.append("\n      __gpublishes = -1;");
    gold.append("\n      __dpublishes = new DRecordList<DeltaRTxPublish>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dpublishes.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(BlogPubSub_2 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gpublishes != __item.publishes.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list1 = __obj.planField(\"publishes\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxPublish> __deltaList2 = __dpublishes;");
    gold.append("\n          DRecordList<DeltaRTxPublish>.Walk __deltaListWalker3 = __deltaList2.begin();");
    gold.append("\n          for (RTxPublish __listElement4 : __item.publishes.get()) {");
    gold.append("\n            DeltaRTxPublish __deltaElement5 = __deltaList2.getPrior(__listElement4.__id(), () -> new DeltaRTxPublish());");
    gold.append("\n            __deltaElement5.show(__listElement4, __list1.planField(__listElement4.__id()));");
    gold.append("\n            __deltaListWalker3.next(__listElement4.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker3.end(__list1);");
    gold.append("\n          __list1.end();");
    gold.append("\n        }");
    gold.append("\n        __gpublishes = __item.publishes.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dpublishes.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    BlogPubSub_2 __self = this;");
    gold.append("\n    DeltaBlogPubSub_2 __state = new DeltaBlogPubSub_2();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Publish = new String[] {\"who\"};");
    gold.append("\n  private class RTxPublish extends RxRecordBase<RTxPublish> {");
    gold.append("\n    private final RxPrincipal who;");
    gold.append("\n    private final RxInt64 when;");
    gold.append("\n    private final RxString payload;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxPublish(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      who = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      when = new RxInt64(this, 0L);");
    gold.append("\n      payload = new RxString(this, \"\");");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += who.__memory();");
    gold.append("\n      __sum += when.__memory();");
    gold.append("\n      __sum += payload.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Publish;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {who.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"payload\":");
    gold.append("\n              payload.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"payload\":");
    gold.append("\n              payload.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      who.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      when.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"payload\");");
    gold.append("\n      payload.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        who.__commit(\"who\", __forward, __reverse);");
    gold.append("\n        when.__commit(\"when\", __forward, __reverse);");
    gold.append("\n        payload.__commit(\"payload\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        who.__revert();");
    gold.append("\n        when.__revert();");
    gold.append("\n        payload.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Publish\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPublish implements DeltaNode {");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private DString __dpayload;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPublish() {");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __dpayload = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      __sum += __dpayload.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPublish __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwho.show(__item.who.get(), __obj.planField(\"who\"));");
    gold.append("\n      __dwhen.show(__item.when.get(), __obj.planField(\"when\"));");
    gold.append("\n      __dpayload.show(__item.payload.get(), __obj.planField(\"payload\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __dpayload.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxPublishMessage extends NtMessageBase {");
    gold.append("\n    private String payload = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"payload\");");
    gold.append("\n      __hash.hashString(this.payload);");
    gold.append("\n      __hash.hashString(\"PublishMessage\");");
    gold.append("\n    }");
    gold.append("\n    private RTxPublishMessage(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"payload\":");
    gold.append("\n              this.payload = __reader.readString();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"payload\");");
    gold.append("\n      __writer.writeString(payload);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxPublishMessage() {}");
    gold.append("\n    private RTxPublishMessage(String payload) {");
    gold.append("\n      this.payload = payload;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPublishMessage implements DeltaNode {");
    gold.append("\n    private DString __dpayload;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPublishMessage() {");
    gold.append("\n      __dpayload = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dpayload.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPublishMessage __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dpayload.show(__item.payload, __obj.planField(\"payload\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dpayload.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private String payload = \"\";");
    gold.append("\n    private long when = 0L;");
    gold.append("\n    private NtPrincipal who = NtPrincipal.NO_ONE;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"payload\");");
    gold.append("\n      __hash.hashString(this.payload);");
    gold.append("\n      __hash.hashString(\"when\");");
    gold.append("\n      __hash.hashLong(this.when);");
    gold.append("\n      __hash.hashString(\"who\");");
    gold.append("\n      __hash.hashNtPrincipal(this.who);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"payload\":");
    gold.append("\n              this.payload = __reader.readString();");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              this.when = __reader.readLong();");
    gold.append("\n              break;");
    gold.append("\n            case \"who\":");
    gold.append("\n              this.who = __reader.readNtPrincipal();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"payload\");");
    gold.append("\n      __writer.writeString(payload);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      __writer.writeLong(when);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      __writer.writeNtPrincipal(who);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() {}");
    gold.append("\n    private RTx_AnonObjConvert_0(String payload, long when, NtPrincipal who) {");
    gold.append("\n      this.payload = payload;");
    gold.append("\n      this.when = when;");
    gold.append("\n      this.who = who;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DString __dpayload;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dpayload = new DString();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dpayload.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dpayload.show(__item.payload, __obj.planField(\"payload\"));");
    gold.append("\n      __dwhen.show(__item.when, __obj.planField(\"when\"));");
    gold.append("\n      __dwho.show(__item.who, __obj.planField(\"who\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dpayload.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  private void handleChannelMessage_publish(CoreRequestContext __context, NtPrincipal __who, RTxPublishMessage message) throws AbortMessageException {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxPublish> _AutoRef6 = _publishes;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr8 = new RTx_AnonObjConvert_0(message.payload, __timeNow(), __who);");
    gold.append("\n      RTxPublish _CreateRef7 = _AutoRef6.make();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      _CreateRef7.payload.set(_AutoExpr8.payload);");
    gold.append("\n      _CreateRef7.when.set(_AutoExpr8.when);");
    gold.append("\n      _CreateRef7.who.set(_AutoExpr8.who);");
    gold.append("\n    }");
    gold.append("\n    __track(1);");
    gold.append("\n    (_publishes.iterate(false).where(true, new __CLOSURE_WhereClause0())).map((__item) -> { __item.__delete(); });");
    gold.append("\n    __track(2);");
    gold.append("\n    (_publishes.iterate(false).orderBy(false, __ORDER_Publish_when_d).skip(true, 100)).map((__item) -> { __item.__delete(); });");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"publish\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"publish\":");
    gold.append("\n        handleChannelMessage_publish(__context, __context.who, (RTxPublishMessage) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"publish\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_publish(__task.context(__getKey()), __task.who, (RTxPublishMessage)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"publish\":");
    gold.append("\n        return new RTxPublishMessage(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(3);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxPublish> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPublish __obj) {");
    gold.append("\n      long when = __obj.when.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return when < __timeNow() - 60000;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxPublish> __ORDER_Publish_when_a = new Comparator<RTxPublish>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxPublish __a, RTxPublish __b) {");
    gold.append("\n      return __a.when.compareTo(__b.when);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxPublish> __ORDER_Publish_when_d = new Comparator<RTxPublish>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxPublish __a, RTxPublish __b) {");
    gold.append("\n      return -__a.when.compareTo(__b.when);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"_publishes\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Publish\"}},\"publishes\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_record\",\"name\":\"Publish\",\"fields\":{\"who\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"when\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"payload\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}}}},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"Publish\":{\"nature\":\"reactive_record\",\"name\":\"Publish\",\"fields\":{\"who\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"when\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"payload\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}}},\"PublishMessage\":{\"nature\":\"native_message\",\"name\":\"PublishMessage\",\"anonymous\":false,\"fields\":{\"payload\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"payload\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"}},\"when\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"}},\"who\":{\"type\":{\"nature\":\"native_value\",\"type\":\"secure<principal>\"}}}}},\"channels\":{\"publish\":\"PublishMessage\"},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:548");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:666");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"_publishes\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"_publishes\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"_publishes\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Bomb_3 = null;
  private String get_Bomb_3() {
    if (cached_Bomb_3 != null) {
      return cached_Bomb_3;
    }
    cached_Bomb_3 = generateTestOutput(true, "Bomb_3", "./test_code/Demo_Bomb_success.a");
    return cached_Bomb_3;
  }

  @Test
  public void testBombEmission() {
    assertEmissionGood(get_Bomb_3());
  }

  @Test
  public void testBombSuccess() {
    assertLivePass(get_Bomb_3());
  }

  @Test
  public void testBombGoodWillHappy() {
    assertGoodWillHappy(get_Bomb_3());
  }

  @Test
  public void testBombExceptionFree() {
    assertExceptionFree(get_Bomb_3());
  }

  @Test
  public void testBombTODOFree() {
    assertTODOFree(get_Bomb_3());
  }

  @Test
  public void stable_Bomb_3() {
    String live = get_Bomb_3();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_Bomb_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class Bomb_3 extends LivingDocument {");
    gold.append("\n  private final RxString x;");
    gold.append("\n  private final RxInt32 k;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += x.__memory();");
    gold.append("\n    __sum += k.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Bomb_3(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x = new RxString(this, \"\");");
    gold.append("\n    k = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"k\":");
    gold.append("\n            k.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"k\":");
    gold.append("\n            k.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"k\");");
    gold.append("\n    k.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n    k.__commit(\"k\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    k.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaBomb_3 implements DeltaNode {");
    gold.append("\n    private DString __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaBomb_3() {");
    gold.append("\n      __dx = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(Bomb_3 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    Bomb_3 __self = this;");
    gold.append("\n    DeltaBomb_3 __state = new DeltaBomb_3();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private void __step_game_setup() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(0);");
    gold.append("\n    x.set(\"Initializing Device\");");
    gold.append("\n    __track(1);");
    gold.append("\n    k.set(0);");
    gold.append("\n    __track(2);");
    gold.append("\n    __transitionStateMachine(\"tick\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_tick() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(3);");
    gold.append("\n    x.set(\"Tick\");");
    gold.append("\n    __track(4);");
    gold.append("\n    __transitionStateMachine(\"tock\", 0.5);");
    gold.append("\n  }");
    gold.append("\n  private void __step_tock() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(5);");
    gold.append("\n    x.set(\"Tock\");");
    gold.append("\n    __track(6);");
    gold.append("\n    k.bumpUpPost();");
    gold.append("\n    __track(7);");
    gold.append("\n    __transitionStateMachine((k.get() < 10 ? \"tick\" : \"end\"), 0.5);");
    gold.append("\n  }");
    gold.append("\n  private void __step_end() {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(8);");
    gold.append("\n    x.set(\"Boom!!!!\");");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"game_setup\":");
    gold.append("\n        __step_game_setup();");
    gold.append("\n        return;");
    gold.append("\n      case \"tick\":");
    gold.append("\n        __step_tick();");
    gold.append("\n        return;");
    gold.append("\n      case \"tock\":");
    gold.append("\n        __step_tock();");
    gold.append("\n        return;");
    gold.append("\n      case \"end\":");
    gold.append("\n        __step_end();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(9);");
    gold.append("\n    return (__who).equals(NtPrincipal.NO_ONE);");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(10);");
    gold.append("\n    __transitionStateMachine(\"game_setup\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"k\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[\"game_setup\",\"tick\",\"tock\",\"end\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__state\":\"tick\",\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1,\"x\":\"Initializing Device\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__state\":\"tock\",\"__next_time\":\"525\",\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\",\"x\":\"Tick\"} need:true in:500");
    gold.append("\nCPU:9");
    gold.append("\nMEMORY:504");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"275\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"275\"} need:true in:250");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":\"Tick\"},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"400\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__connection_id\":1,\"__time\":\"400\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null,\"__entropy\":\"7848011421992302230\"} need:true in:125");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"462\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"-8929183248358367000\",\"__time\":\"462\"} need:true in:63");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":\"Tick\"},\"seq\":6}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"493\"}-->{\"__messages\":null,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__time\":\"493\"} need:true in:32");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":7}");
    gold.append("\n+ RANDO DELTA:{\"seq\":7}");
    gold.append("\nMEMORY:718");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"x\":\"Tick\",\"k\":0,\"__state\":\"tock\",\"__constructed\":true,\"__next_time\":\"525\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"493\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x\":\"Tick\",\"k\":0,\"__state\":\"tock\",\"__constructed\":true,\"__next_time\":\"525\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"493\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}}");
    gold.append("\n{\"x\":\"Tick\",\"k\":0,\"__state\":\"tock\",\"__constructed\":true,\"__next_time\":\"525\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"488730542833106255\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"493\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_ChatOrder_4 = null;
  private String get_ChatOrder_4() {
    if (cached_ChatOrder_4 != null) {
      return cached_ChatOrder_4;
    }
    cached_ChatOrder_4 = generateTestOutput(true, "ChatOrder_4", "./test_code/Demo_ChatOrder_success.a");
    return cached_ChatOrder_4;
  }

  @Test
  public void testChatOrderEmission() {
    assertEmissionGood(get_ChatOrder_4());
  }

  @Test
  public void testChatOrderSuccess() {
    assertLivePass(get_ChatOrder_4());
  }

  @Test
  public void testChatOrderGoodWillHappy() {
    assertGoodWillHappy(get_ChatOrder_4());
  }

  @Test
  public void testChatOrderExceptionFree() {
    assertExceptionFree(get_ChatOrder_4());
  }

  @Test
  public void testChatOrderTODOFree() {
    assertTODOFree(get_ChatOrder_4());
  }

  @Test
  public void stable_ChatOrder_4() {
    String live = get_ChatOrder_4();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_ChatOrder_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class ChatOrder_4 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxLine> _chat;");
    gold.append("\n  private final RxGuard ___chat;");
    gold.append("\n  public NtList<RTxLine> __COMPUTE_chat(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return (__viewer.ordering ? (_chat.iterate(false).orderBy(true, __ORDER_Line_id_d)) : (_chat.iterate(false).orderBy(true, __ORDER_Line_id_a)));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += _chat.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public ChatOrder_4(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    _chat = new RxTable<>(__self, this, \"_chat\", (RxParent __parent) -> new RTxLine(__parent), 0);");
    gold.append("\n    ___chat =  new RxGuard();");
    gold.append("\n    _chat.__subscribe(___chat);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_chat\":");
    gold.append("\n            _chat.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_chat\":");
    gold.append("\n            _chat.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_chat\");");
    gold.append("\n    _chat.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    _chat.__commit(\"_chat\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    _chat.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaChatOrder_4 implements DeltaNode {");
    gold.append("\n    private long __gchat;");
    gold.append("\n    private DRecordList<DeltaRTxLine> __dchat;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaChatOrder_4() {");
    gold.append("\n      __gchat = -1;");
    gold.append("\n      __dchat = new DRecordList<DeltaRTxLine>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dchat.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(ChatOrder_4 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      RTx__ViewerType __VIEWER = (RTx__ViewerType) __writer.viewerState;");
    gold.append("\n      long __CHECK = 0;");
    gold.append("\n      __CHECK = __item.___chat.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gchat != __CHECK)  {");
    gold.append("\n        NtList<RTxLine> __local_chat = __item.__COMPUTE_chat(__writer.who, __VIEWER);");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list1 = __obj.planField(\"chat\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxLine> __deltaList2 = __dchat;");
    gold.append("\n          DRecordList<DeltaRTxLine>.Walk __deltaListWalker3 = __deltaList2.begin();");
    gold.append("\n          for (RTxLine __listElement4 : __local_chat) {");
    gold.append("\n            DeltaRTxLine __deltaElement5 = __deltaList2.getPrior(__listElement4.__id(), () -> new DeltaRTxLine());");
    gold.append("\n            __deltaElement5.show(__listElement4, __list1.planField(__listElement4.__id()));");
    gold.append("\n            __deltaListWalker3.next(__listElement4.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker3.end(__list1);");
    gold.append("\n          __list1.end();");
    gold.append("\n        }");
    gold.append("\n        __gchat = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dchat.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    ChatOrder_4 __self = this;");
    gold.append("\n    DeltaChatOrder_4 __state = new DeltaChatOrder_4();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private boolean ordering = false;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"ordering\");");
    gold.append("\n      __hash.hashBoolean(this.ordering);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      this.__DATA_GENERATION += 2;");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"ordering\":");
    gold.append("\n              this.ordering = __reader.readBoolean();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"ordering\");");
    gold.append("\n      __writer.writeBoolean(ordering);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n    private RTx__ViewerType(boolean ordering) {");
    gold.append("\n      this.ordering = ordering;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private DBoolean __dordering;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __dordering = new DBoolean();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dordering.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dordering.show(__item.ordering, __obj.planField(\"ordering\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dordering.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Line = new String[] {\"who\"};");
    gold.append("\n  private class RTxLine extends RxRecordBase<RTxLine> {");
    gold.append("\n    private final RxPrincipal who;");
    gold.append("\n    private final RxString what;");
    gold.append("\n    private final RxInt64 when;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxLine(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      who = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      what = new RxString(this, \"\");");
    gold.append("\n      when = new RxInt64(this, 0L);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += who.__memory();");
    gold.append("\n      __sum += what.__memory();");
    gold.append("\n      __sum += when.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Line;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {who.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"what\":");
    gold.append("\n              what.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"what\":");
    gold.append("\n              what.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      who.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      what.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      when.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        who.__commit(\"who\", __forward, __reverse);");
    gold.append("\n        what.__commit(\"what\", __forward, __reverse);");
    gold.append("\n        when.__commit(\"when\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        who.__revert();");
    gold.append("\n        what.__revert();");
    gold.append("\n        when.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Line\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxLine implements DeltaNode {");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxLine() {");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxLine __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwho.show(__item.who.get(), __obj.planField(\"who\"));");
    gold.append("\n      __dwhat.show(__item.what.get(), __obj.planField(\"what\"));");
    gold.append("\n      __dwhen.show(__item.when.get(), __obj.planField(\"when\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxSay extends NtMessageBase {");
    gold.append("\n    private String what = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"what\");");
    gold.append("\n      __hash.hashString(this.what);");
    gold.append("\n      __hash.hashString(\"Say\");");
    gold.append("\n    }");
    gold.append("\n    private RTxSay(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"what\":");
    gold.append("\n              this.what = __reader.readString();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      __writer.writeString(what);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxSay() {}");
    gold.append("\n    private RTxSay(String what) {");
    gold.append("\n      this.what = what;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxSay implements DeltaNode {");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxSay() {");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxSay __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwhat.show(__item.what, __obj.planField(\"what\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxFlux extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"Flux\");");
    gold.append("\n    }");
    gold.append("\n    private RTxFlux(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxFlux() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxFlux implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxFlux() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxFlux __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private String what = \"\";");
    gold.append("\n    private long when = 0L;");
    gold.append("\n    private NtPrincipal who = NtPrincipal.NO_ONE;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"what\");");
    gold.append("\n      __hash.hashString(this.what);");
    gold.append("\n      __hash.hashString(\"when\");");
    gold.append("\n      __hash.hashLong(this.when);");
    gold.append("\n      __hash.hashString(\"who\");");
    gold.append("\n      __hash.hashNtPrincipal(this.who);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"what\":");
    gold.append("\n              this.what = __reader.readString();");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              this.when = __reader.readLong();");
    gold.append("\n              break;");
    gold.append("\n            case \"who\":");
    gold.append("\n              this.who = __reader.readNtPrincipal();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      __writer.writeString(what);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      __writer.writeLong(when);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      __writer.writeNtPrincipal(who);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() {}");
    gold.append("\n    private RTx_AnonObjConvert_0(String what, long when, NtPrincipal who) {");
    gold.append("\n      this.what = what;");
    gold.append("\n      this.when = when;");
    gold.append("\n      this.who = who;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwhat.show(__item.what, __obj.planField(\"what\"));");
    gold.append("\n      __dwhen.show(__item.when, __obj.planField(\"when\"));");
    gold.append("\n      __dwho.show(__item.who, __obj.planField(\"who\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  private void handleChannelMessage_say(CoreRequestContext __context, NtPrincipal __who, RTxSay what) throws AbortMessageException {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxLine> _AutoRef6 = _chat;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr8 = new RTx_AnonObjConvert_0(what.what, __timeNow(), __who);");
    gold.append("\n      RTxLine _CreateRef7 = _AutoRef6.make();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      _CreateRef7.what.set(_AutoExpr8.what);");
    gold.append("\n      _CreateRef7.when.set(_AutoExpr8.when);");
    gold.append("\n      _CreateRef7.who.set(_AutoExpr8.who);");
    gold.append("\n    }");
    gold.append("\n    __track(1);");
    gold.append("\n    (_chat.iterate(false).orderBy(false, __ORDER_Line_when_d).skip(true, 5)).map((__item) -> { __item.__delete(); });");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_flux(CoreRequestContext __context, NtPrincipal __who, RTxFlux f) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    LibArithmetic.ListMath.addToSO((_chat.iterate(false).where(true, new __CLOSURE_WhereClause0(__who))).transform((item) -> item.what), \"x\");");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"flux\":");
    gold.append("\n      case \"say\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"flux\":");
    gold.append("\n        handleChannelMessage_flux(__context, __context.who, (RTxFlux) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"say\":");
    gold.append("\n        handleChannelMessage_say(__context, __context.who, (RTxSay) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_say(__task.context(__getKey()), __task.who, (RTxSay)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"flux\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_flux(__task.context(__getKey()), __task.who, (RTxFlux)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        return new RTxSay(__reader);");
    gold.append("\n      case \"flux\":");
    gold.append("\n        return new RTxFlux(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(3);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanInvent__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    __map.put(\"maximum_history\", 100);");
    gold.append("\n    __map.put(\"delete_on_close\", false);");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxLine> {");
    gold.append("\n    private NtPrincipal __who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, __who.hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause0(NtPrincipal __who) {");
    gold.append("\n      this.__who = __who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxLine __obj) {");
    gold.append("\n      NtPrincipal who = __obj.who.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (who).equals(__who);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxLine> __ORDER_Line_id_a = new Comparator<RTxLine>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxLine __a, RTxLine __b) {");
    gold.append("\n      return __a.id.compareTo(__b.id);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxLine> __ORDER_Line_id_d = new Comparator<RTxLine>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxLine __a, RTxLine __b) {");
    gold.append("\n      return -__a.id.compareTo(__b.id);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxLine> __ORDER_Line_when_d = new Comparator<RTxLine>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxLine __a, RTxLine __b) {");
    gold.append("\n      return -__a.when.compareTo(__b.when);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"_chat\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Line\"}},\"chat\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_record\",\"name\":\"Line\",\"fields\":{\"who\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"what\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"when\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}}}},\"privacy\":\"bubble\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{\"ordering\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"}}}},\"Line\":{\"nature\":\"reactive_record\",\"name\":\"Line\",\"fields\":{\"who\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"what\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"when\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}}},\"Say\":{\"nature\":\"native_message\",\"name\":\"Say\",\"anonymous\":false,\"fields\":{\"what\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"Flux\":{\"nature\":\"native_message\",\"name\":\"Flux\",\"anonymous\":false,\"fields\":{}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"what\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"}},\"when\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"}},\"who\":{\"type\":{\"nature\":\"native_value\",\"type\":\"secure<principal>\"}}}}},\"channels\":{\"flux\":\"Flux\",\"say\":\"Say\"},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:498");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:616");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_GameHearts_5 = null;
  private String get_GameHearts_5() {
    if (cached_GameHearts_5 != null) {
      return cached_GameHearts_5;
    }
    cached_GameHearts_5 = generateTestOutput(true, "GameHearts_5", "./test_code/Demo_GameHearts_success.a");
    return cached_GameHearts_5;
  }

  @Test
  public void testGameHeartsEmission() {
    assertEmissionGood(get_GameHearts_5());
  }

  @Test
  public void testGameHeartsSuccess() {
    assertLivePass(get_GameHearts_5());
  }

  @Test
  public void testGameHeartsGoodWillHappy() {
    assertGoodWillHappy(get_GameHearts_5());
  }

  @Test
  public void testGameHeartsExceptionFree() {
    assertExceptionFree(get_GameHearts_5());
  }

  @Test
  public void testGameHeartsTODOFree() {
    assertTODOFree(get_GameHearts_5());
  }

  @Test
  public void stable_GameHearts_5() {
    String live = get_GameHearts_5();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_GameHearts_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class GameHearts_5 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxCard> deck;");
    gold.append("\n  private final RxLazy<NtList<RTxCard>> hand;");
    gold.append("\n  private final RxPrincipal owner;");
    gold.append("\n  private final RxTable<RTxPlayer> players;");
    gold.append("\n  private final RxLazy<Integer> players_connected;");
    gold.append("\n  private final RxLazy<Integer> observers_connected;");
    gold.append("\n  private final RxLazy<NtList<RTxPlayer>> people;");
    gold.append("\n  private final RxLazy<NtList<RTxPlayer>> players_ordered;");
    gold.append("\n  private final RxLazy<Boolean> ready;");
    gold.append("\n  private final RxBoolean playing;");
    gold.append("\n  private final RxEnumInt32 passing_mode;");
    gold.append("\n  private final RxPrincipal player1;");
    gold.append("\n  private final RxPrincipal player2;");
    gold.append("\n  private final RxPrincipal player3;");
    gold.append("\n  private final RxPrincipal player4;");
    gold.append("\n  private final RxPrincipal current;");
    gold.append("\n  private final RxInt32 played;");
    gold.append("\n  private final RxEnumInt32 suit_in_play;");
    gold.append("\n  private final RxBoolean points_played;");
    gold.append("\n  private final RxLazy<NtList<RTxCard>> in_play;");
    gold.append("\n  private final RxPrincipal last_winner;");
    gold.append("\n  private final RxInt32 points_awarded;");
    gold.append("\n  private final RxGuard ___my_take;");
    gold.append("\n  public NtList<RTxCard> __COMPUTE_my_take(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return deck.iterate(false).where(true, new __CLOSURE_WhereClause1(__who));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += deck.__memory();");
    gold.append("\n    __sum += hand.__memory();");
    gold.append("\n    __sum += owner.__memory();");
    gold.append("\n    __sum += players.__memory();");
    gold.append("\n    __sum += players_connected.__memory();");
    gold.append("\n    __sum += observers_connected.__memory();");
    gold.append("\n    __sum += people.__memory();");
    gold.append("\n    __sum += players_ordered.__memory();");
    gold.append("\n    __sum += ready.__memory();");
    gold.append("\n    __sum += playing.__memory();");
    gold.append("\n    __sum += passing_mode.__memory();");
    gold.append("\n    __sum += player1.__memory();");
    gold.append("\n    __sum += player2.__memory();");
    gold.append("\n    __sum += player3.__memory();");
    gold.append("\n    __sum += player4.__memory();");
    gold.append("\n    __sum += current.__memory();");
    gold.append("\n    __sum += played.__memory();");
    gold.append("\n    __sum += suit_in_play.__memory();");
    gold.append("\n    __sum += points_played.__memory();");
    gold.append("\n    __sum += in_play.__memory();");
    gold.append("\n    __sum += last_winner.__memory();");
    gold.append("\n    __sum += points_awarded.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public GameHearts_5(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    deck = new RxTable<>(__self, this, \"deck\", (RxParent __parent) -> new RTxCard(__parent), 0);");
    gold.append("\n    hand = new RxLazy<NtList<RTxCard>>(this, () -> (deck.iterate(false).where(true, new __CLOSURE_WhereClause0())));");
    gold.append("\n    deck.__subscribe(hand);");
    gold.append("\n    owner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    players = new RxTable<>(__self, this, \"players\", (RxParent __parent) -> new RTxPlayer(__parent), 0);");
    gold.append("\n    players_connected = new RxLazy<Integer>(this, () -> ((players.iterate(false).where(true, new __CLOSURE_WhereClause4())).size()));");
    gold.append("\n    players.__subscribe(players_connected);");
    gold.append("\n    observers_connected = new RxLazy<Integer>(this, () -> ((players.iterate(false).where(true, new __CLOSURE_WhereClause5())).size()));");
    gold.append("\n    players.__subscribe(observers_connected);");
    gold.append("\n    people = new RxLazy<NtList<RTxPlayer>>(this, () -> (players.iterate(false).orderBy(true, __ORDER_Player_play_order_a)));");
    gold.append("\n    players.__subscribe(people);");
    gold.append("\n    players_ordered = new RxLazy<NtList<RTxPlayer>>(this, () -> (players.iterate(false).where(false, new __CLOSURE_WhereClause6()).orderBy(true, __ORDER_Player_play_order_a)));");
    gold.append("\n    players.__subscribe(players_ordered);");
    gold.append("\n    ready = new RxLazy<Boolean>(this, () -> (players_connected.get() == 4));");
    gold.append("\n    players_connected.__subscribe(ready);");
    gold.append("\n    playing = new RxBoolean(this, false);");
    gold.append("\n    passing_mode = new RxEnumInt32(this, 0, (__v) -> __EnumFix_PassingMode(__v));");
    gold.append("\n    player1 = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    player2 = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    player3 = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    player4 = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    current = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    played = new RxInt32(this, 0);");
    gold.append("\n    suit_in_play = new RxEnumInt32(this, 1, (__v) -> __EnumFix_Suit(__v));");
    gold.append("\n    points_played = new RxBoolean(this, false);");
    gold.append("\n    in_play = new RxLazy<NtList<RTxCard>>(this, () -> (deck.iterate(false).where(false, new __CLOSURE_WhereClause33()).orderBy(true, __ORDER_Card_rank_d)));");
    gold.append("\n    deck.__subscribe(in_play);");
    gold.append("\n    last_winner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    points_awarded = new RxInt32(this, 0);");
    gold.append("\n    ___my_take =  new RxGuard();");
    gold.append("\n    deck.__subscribe(___my_take);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"deck\":");
    gold.append("\n            deck.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"players\":");
    gold.append("\n            players.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"playing\":");
    gold.append("\n            playing.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"passing_mode\":");
    gold.append("\n            passing_mode.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player1\":");
    gold.append("\n            player1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player2\":");
    gold.append("\n            player2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player3\":");
    gold.append("\n            player3.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player4\":");
    gold.append("\n            player4.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current\":");
    gold.append("\n            current.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"played\":");
    gold.append("\n            played.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"suit_in_play\":");
    gold.append("\n            suit_in_play.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"points_played\":");
    gold.append("\n            points_played.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"last_winner\":");
    gold.append("\n            last_winner.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"points_awarded\":");
    gold.append("\n            points_awarded.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"deck\":");
    gold.append("\n            deck.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"players\":");
    gold.append("\n            players.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"playing\":");
    gold.append("\n            playing.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"passing_mode\":");
    gold.append("\n            passing_mode.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player1\":");
    gold.append("\n            player1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player2\":");
    gold.append("\n            player2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player3\":");
    gold.append("\n            player3.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"player4\":");
    gold.append("\n            player4.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current\":");
    gold.append("\n            current.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"played\":");
    gold.append("\n            played.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"suit_in_play\":");
    gold.append("\n            suit_in_play.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"points_played\":");
    gold.append("\n            points_played.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"last_winner\":");
    gold.append("\n            last_winner.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"points_awarded\":");
    gold.append("\n            points_awarded.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"deck\");");
    gold.append("\n    deck.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n    owner.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"players\");");
    gold.append("\n    players.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"playing\");");
    gold.append("\n    playing.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"passing_mode\");");
    gold.append("\n    passing_mode.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player1\");");
    gold.append("\n    player1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player2\");");
    gold.append("\n    player2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player3\");");
    gold.append("\n    player3.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"player4\");");
    gold.append("\n    player4.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"current\");");
    gold.append("\n    current.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"played\");");
    gold.append("\n    played.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"suit_in_play\");");
    gold.append("\n    suit_in_play.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"points_played\");");
    gold.append("\n    points_played.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"last_winner\");");
    gold.append("\n    last_winner.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"points_awarded\");");
    gold.append("\n    points_awarded.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    deck.__commit(\"deck\", __forward, __reverse);");
    gold.append("\n    owner.__commit(\"owner\", __forward, __reverse);");
    gold.append("\n    players.__commit(\"players\", __forward, __reverse);");
    gold.append("\n    playing.__commit(\"playing\", __forward, __reverse);");
    gold.append("\n    passing_mode.__commit(\"passing_mode\", __forward, __reverse);");
    gold.append("\n    player1.__commit(\"player1\", __forward, __reverse);");
    gold.append("\n    player2.__commit(\"player2\", __forward, __reverse);");
    gold.append("\n    player3.__commit(\"player3\", __forward, __reverse);");
    gold.append("\n    player4.__commit(\"player4\", __forward, __reverse);");
    gold.append("\n    current.__commit(\"current\", __forward, __reverse);");
    gold.append("\n    played.__commit(\"played\", __forward, __reverse);");
    gold.append("\n    suit_in_play.__commit(\"suit_in_play\", __forward, __reverse);");
    gold.append("\n    points_played.__commit(\"points_played\", __forward, __reverse);");
    gold.append("\n    last_winner.__commit(\"last_winner\", __forward, __reverse);");
    gold.append("\n    points_awarded.__commit(\"points_awarded\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    deck.__revert();");
    gold.append("\n    owner.__revert();");
    gold.append("\n    players.__revert();");
    gold.append("\n    playing.__revert();");
    gold.append("\n    passing_mode.__revert();");
    gold.append("\n    player1.__revert();");
    gold.append("\n    player2.__revert();");
    gold.append("\n    player3.__revert();");
    gold.append("\n    player4.__revert();");
    gold.append("\n    current.__revert();");
    gold.append("\n    played.__revert();");
    gold.append("\n    suit_in_play.__revert();");
    gold.append("\n    points_played.__revert();");
    gold.append("\n    last_winner.__revert();");
    gold.append("\n    points_awarded.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaGameHearts_5 implements DeltaNode {");
    gold.append("\n    private int __ghand;");
    gold.append("\n    private DRecordList<DeltaRTxCard> __dhand;");
    gold.append("\n    private int __gplayers_connected;");
    gold.append("\n    private DInt32 __dplayers_connected;");
    gold.append("\n    private int __gobservers_connected;");
    gold.append("\n    private DInt32 __dobservers_connected;");
    gold.append("\n    private int __gpeople;");
    gold.append("\n    private DRecordList<DeltaRTxPlayer> __dpeople;");
    gold.append("\n    private int __gplayers_ordered;");
    gold.append("\n    private DRecordList<DeltaRTxPlayer> __dplayers_ordered;");
    gold.append("\n    private int __gready;");
    gold.append("\n    private DBoolean __dready;");
    gold.append("\n    private DBoolean __dplaying;");
    gold.append("\n    private DInt32 __dpassing_mode;");
    gold.append("\n    private DInt32 __dplayed;");
    gold.append("\n    private DInt32 __dsuit_in_play;");
    gold.append("\n    private DBoolean __dpoints_played;");
    gold.append("\n    private int __gin_play;");
    gold.append("\n    private DRecordList<DeltaRTxCard> __din_play;");
    gold.append("\n    private DPrincipal __dlast_winner;");
    gold.append("\n    private DInt32 __dpoints_awarded;");
    gold.append("\n    private long __gmy_take;");
    gold.append("\n    private DRecordList<DeltaRTxCard> __dmy_take;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaGameHearts_5() {");
    gold.append("\n      __ghand = -1;");
    gold.append("\n      __dhand = new DRecordList<DeltaRTxCard>();");
    gold.append("\n      __gplayers_connected = -1;");
    gold.append("\n      __dplayers_connected = new DInt32();");
    gold.append("\n      __gobservers_connected = -1;");
    gold.append("\n      __dobservers_connected = new DInt32();");
    gold.append("\n      __gpeople = -1;");
    gold.append("\n      __dpeople = new DRecordList<DeltaRTxPlayer>();");
    gold.append("\n      __gplayers_ordered = -1;");
    gold.append("\n      __dplayers_ordered = new DRecordList<DeltaRTxPlayer>();");
    gold.append("\n      __gready = -1;");
    gold.append("\n      __dready = new DBoolean();");
    gold.append("\n      __dplaying = new DBoolean();");
    gold.append("\n      __dpassing_mode = new DInt32();");
    gold.append("\n      __dplayed = new DInt32();");
    gold.append("\n      __dsuit_in_play = new DInt32();");
    gold.append("\n      __dpoints_played = new DBoolean();");
    gold.append("\n      __gin_play = -1;");
    gold.append("\n      __din_play = new DRecordList<DeltaRTxCard>();");
    gold.append("\n      __dlast_winner = new DPrincipal();");
    gold.append("\n      __dpoints_awarded = new DInt32();");
    gold.append("\n      __gmy_take = -1;");
    gold.append("\n      __dmy_take = new DRecordList<DeltaRTxCard>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dhand.__memory();");
    gold.append("\n      __sum += __dplayers_connected.__memory();");
    gold.append("\n      __sum += __dobservers_connected.__memory();");
    gold.append("\n      __sum += __dpeople.__memory();");
    gold.append("\n      __sum += __dplayers_ordered.__memory();");
    gold.append("\n      __sum += __dready.__memory();");
    gold.append("\n      __sum += __dplaying.__memory();");
    gold.append("\n      __sum += __dpassing_mode.__memory();");
    gold.append("\n      __sum += __dplayed.__memory();");
    gold.append("\n      __sum += __dsuit_in_play.__memory();");
    gold.append("\n      __sum += __dpoints_played.__memory();");
    gold.append("\n      __sum += __din_play.__memory();");
    gold.append("\n      __sum += __dlast_winner.__memory();");
    gold.append("\n      __sum += __dpoints_awarded.__memory();");
    gold.append("\n      __sum += __dmy_take.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(GameHearts_5 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 15;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__ghand != __item.hand.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list3 = __obj.planField(\"hand\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxCard> __deltaList4 = __dhand;");
    gold.append("\n          DRecordList<DeltaRTxCard>.Walk __deltaListWalker5 = __deltaList4.begin();");
    gold.append("\n          for (RTxCard __listElement6 : __item.hand.get()) {");
    gold.append("\n            DeltaRTxCard __deltaElement7 = __deltaList4.getPrior(__listElement6.__id(), () -> new DeltaRTxCard());");
    gold.append("\n            __deltaElement7.show(__listElement6, __list3.planField(__listElement6.__id()));");
    gold.append("\n            __deltaListWalker5.next(__listElement6.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker5.end(__list3);");
    gold.append("\n          __list3.end();");
    gold.append("\n        }");
    gold.append("\n        __ghand = __item.hand.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gplayers_connected != __item.players_connected.getGeneration()) {");
    gold.append("\n        __dplayers_connected.show(__item.players_connected.get(), __obj.planField(\"players_connected\"));");
    gold.append("\n        __gplayers_connected = __item.players_connected.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gobservers_connected != __item.observers_connected.getGeneration()) {");
    gold.append("\n        __dobservers_connected.show(__item.observers_connected.get(), __obj.planField(\"observers_connected\"));");
    gold.append("\n        __gobservers_connected = __item.observers_connected.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gpeople != __item.people.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list8 = __obj.planField(\"people\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxPlayer> __deltaList9 = __dpeople;");
    gold.append("\n          DRecordList<DeltaRTxPlayer>.Walk __deltaListWalker10 = __deltaList9.begin();");
    gold.append("\n          for (RTxPlayer __listElement11 : __item.people.get()) {");
    gold.append("\n            DeltaRTxPlayer __deltaElement12 = __deltaList9.getPrior(__listElement11.__id(), () -> new DeltaRTxPlayer());");
    gold.append("\n            __deltaElement12.show(__listElement11, __list8.planField(__listElement11.__id()));");
    gold.append("\n            __deltaListWalker10.next(__listElement11.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker10.end(__list8);");
    gold.append("\n          __list8.end();");
    gold.append("\n        }");
    gold.append("\n        __gpeople = __item.people.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gplayers_ordered != __item.players_ordered.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list13 = __obj.planField(\"players_ordered\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxPlayer> __deltaList14 = __dplayers_ordered;");
    gold.append("\n          DRecordList<DeltaRTxPlayer>.Walk __deltaListWalker15 = __deltaList14.begin();");
    gold.append("\n          for (RTxPlayer __listElement16 : __item.players_ordered.get()) {");
    gold.append("\n            DeltaRTxPlayer __deltaElement17 = __deltaList14.getPrior(__listElement16.__id(), () -> new DeltaRTxPlayer());");
    gold.append("\n            __deltaElement17.show(__listElement16, __list13.planField(__listElement16.__id()));");
    gold.append("\n            __deltaListWalker15.next(__listElement16.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker15.end(__list13);");
    gold.append("\n          __list13.end();");
    gold.append("\n        }");
    gold.append("\n        __gplayers_ordered = __item.players_ordered.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gready != __item.ready.getGeneration()) {");
    gold.append("\n        __dready.show(__item.ready.get(), __obj.planField(\"ready\"));");
    gold.append("\n        __gready = __item.ready.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      __dplaying.show(__item.playing.get(), __obj.planField(\"playing\"));");
    gold.append("\n      __dpassing_mode.show(__item.passing_mode.get(), __obj.planField(\"passing_mode\"));");
    gold.append("\n      __dplayed.show(__item.played.get(), __obj.planField(\"played\"));");
    gold.append("\n      __dsuit_in_play.show(__item.suit_in_play.get(), __obj.planField(\"suit_in_play\"));");
    gold.append("\n      __dpoints_played.show(__item.points_played.get(), __obj.planField(\"points_played\"));");
    gold.append("\n      if (__gin_play != __item.in_play.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list18 = __obj.planField(\"in_play\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxCard> __deltaList19 = __din_play;");
    gold.append("\n          DRecordList<DeltaRTxCard>.Walk __deltaListWalker20 = __deltaList19.begin();");
    gold.append("\n          for (RTxCard __listElement21 : __item.in_play.get()) {");
    gold.append("\n            DeltaRTxCard __deltaElement22 = __deltaList19.getPrior(__listElement21.__id(), () -> new DeltaRTxCard());");
    gold.append("\n            __deltaElement22.show(__listElement21, __list18.planField(__listElement21.__id()));");
    gold.append("\n            __deltaListWalker20.next(__listElement21.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker20.end(__list18);");
    gold.append("\n          __list18.end();");
    gold.append("\n        }");
    gold.append("\n        __gin_play = __item.in_play.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      __dlast_winner.show(__item.last_winner.get(), __obj.planField(\"last_winner\"));");
    gold.append("\n      __dpoints_awarded.show(__item.points_awarded.get(), __obj.planField(\"points_awarded\"));");
    gold.append("\n      RTx__ViewerType __VIEWER = (RTx__ViewerType) __writer.viewerState;");
    gold.append("\n      long __CHECK = 0;");
    gold.append("\n      __CHECK = __item.___my_take.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gmy_take != __CHECK)  {");
    gold.append("\n        NtList<RTxCard> __local_my_take = __item.__COMPUTE_my_take(__writer.who, __VIEWER);");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list23 = __obj.planField(\"my_take\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxCard> __deltaList24 = __dmy_take;");
    gold.append("\n          DRecordList<DeltaRTxCard>.Walk __deltaListWalker25 = __deltaList24.begin();");
    gold.append("\n          for (RTxCard __listElement26 : __local_my_take) {");
    gold.append("\n            DeltaRTxCard __deltaElement27 = __deltaList24.getPrior(__listElement26.__id(), () -> new DeltaRTxCard());");
    gold.append("\n            __deltaElement27.show(__listElement26, __list23.planField(__listElement26.__id()));");
    gold.append("\n            __deltaListWalker25.next(__listElement26.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker25.end(__list23);");
    gold.append("\n          __list23.end();");
    gold.append("\n        }");
    gold.append("\n        __gmy_take = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dhand.clear();");
    gold.append("\n      __dplayers_connected.clear();");
    gold.append("\n      __dobservers_connected.clear();");
    gold.append("\n      __dpeople.clear();");
    gold.append("\n      __dplayers_ordered.clear();");
    gold.append("\n      __dready.clear();");
    gold.append("\n      __dplaying.clear();");
    gold.append("\n      __dpassing_mode.clear();");
    gold.append("\n      __dplayed.clear();");
    gold.append("\n      __dsuit_in_play.clear();");
    gold.append("\n      __dpoints_played.clear();");
    gold.append("\n      __din_play.clear();");
    gold.append("\n      __dlast_winner.clear();");
    gold.append("\n      __dpoints_awarded.clear();");
    gold.append("\n      __dmy_take.clear();");
    gold.append("\n      __code_cost += 15;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    GameHearts_5 __self = this;");
    gold.append("\n    DeltaGameHearts_5 __state = new DeltaGameHearts_5();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_Suit = new int[] {1, 2, 3, 4};");
    gold.append("\n  private static final int __EnumCycleNext_Suit(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 4:");
    gold.append("\n        return 1;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_Suit(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n        return 4;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_Suit(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n      case 2:");
    gold.append("\n      case 3:");
    gold.append("\n      case 4:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_Rank = new int[] {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};");
    gold.append("\n  private static final int __EnumCycleNext_Rank(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 14:");
    gold.append("\n        return 2;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_Rank(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 2:");
    gold.append("\n        return 14;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_Rank(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 2:");
    gold.append("\n      case 3:");
    gold.append("\n      case 4:");
    gold.append("\n      case 5:");
    gold.append("\n      case 6:");
    gold.append("\n      case 7:");
    gold.append("\n      case 8:");
    gold.append("\n      case 9:");
    gold.append("\n      case 10:");
    gold.append("\n      case 11:");
    gold.append("\n      case 12:");
    gold.append("\n      case 13:");
    gold.append("\n      case 14:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_Place = new int[] {1, 2, 3, 4};");
    gold.append("\n  private static final int __EnumCycleNext_Place(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 4:");
    gold.append("\n        return 1;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_Place(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n        return 4;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_Place(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n      case 2:");
    gold.append("\n      case 3:");
    gold.append("\n      case 4:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Card = new String[] {\"ordering\", \"owner\", \"place\", \"rank\", \"suit\"};");
    gold.append("\n  private class RTxCard extends RxRecordBase<RTxCard> {");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxEnumInt32 suit;");
    gold.append("\n    private final RxEnumInt32 rank;");
    gold.append("\n    private final RxPrincipal owner;");
    gold.append("\n    private final RxInt32 ordering;");
    gold.append("\n    private final RxEnumInt32 place;");
    gold.append("\n    private final RxLazy<Integer> points;");
    gold.append("\n    private RTxCard(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      suit = new RxEnumInt32(this, 1, (__v) -> __EnumFix_Suit(__v));");
    gold.append("\n      rank = new RxEnumInt32(this, 2, (__v) -> __EnumFix_Rank(__v));");
    gold.append("\n      owner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      ordering = new RxInt32(this, 0);");
    gold.append("\n      place = new RxEnumInt32(this, 1, (__v) -> __EnumFix_Place(__v));");
    gold.append("\n      points = new RxLazy<Integer>(this, () -> ((suit.get() == 2 ? 1 : (suit.get() == 3 && rank.get() == 12 ? 13 : 0))));");
    gold.append("\n      suit.__subscribe(points);");
    gold.append("\n      rank.__subscribe(points);");
    gold.append("\n      points.__subscribe(this);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public boolean __POLICY_p(NtPrincipal __who){");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(0);");
    gold.append("\n      if (place.get() == 2 || place.get() == 4) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(1);");
    gold.append("\n        return (__who).equals(owner.get());");
    gold.append("\n      }");
    gold.append("\n      __track(2);");
    gold.append("\n      if (place.get() == 3) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(3);");
    gold.append("\n        return true;");
    gold.append("\n      }");
    gold.append("\n      __track(4);");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += suit.__memory();");
    gold.append("\n      __sum += rank.__memory();");
    gold.append("\n      __sum += owner.__memory();");
    gold.append("\n      __sum += ordering.__memory();");
    gold.append("\n      __sum += place.__memory();");
    gold.append("\n      __sum += points.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Card;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {ordering.getIndexValue(), owner.getIndexValue(), place.getIndexValue(), rank.getIndexValue(), suit.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"suit\":");
    gold.append("\n              suit.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"rank\":");
    gold.append("\n              rank.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"ordering\":");
    gold.append("\n              ordering.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"place\":");
    gold.append("\n              place.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"suit\":");
    gold.append("\n              suit.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"rank\":");
    gold.append("\n              rank.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"owner\":");
    gold.append("\n              owner.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"ordering\":");
    gold.append("\n              ordering.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"place\":");
    gold.append("\n              place.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"suit\");");
    gold.append("\n      suit.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"rank\");");
    gold.append("\n      rank.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n      owner.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"ordering\");");
    gold.append("\n      ordering.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"place\");");
    gold.append("\n      place.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        suit.__commit(\"suit\", __forward, __reverse);");
    gold.append("\n        rank.__commit(\"rank\", __forward, __reverse);");
    gold.append("\n        owner.__commit(\"owner\", __forward, __reverse);");
    gold.append("\n        ordering.__commit(\"ordering\", __forward, __reverse);");
    gold.append("\n        place.__commit(\"place\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        suit.__revert();");
    gold.append("\n        rank.__revert();");
    gold.append("\n        owner.__revert();");
    gold.append("\n        ordering.__revert();");
    gold.append("\n        place.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Card\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxCard implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DInt32 __dsuit;");
    gold.append("\n    private DInt32 __drank;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxCard() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dsuit = new DInt32();");
    gold.append("\n      __drank = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      __sum += __dsuit.__memory();");
    gold.append("\n      __sum += __drank.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxCard __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      if (!__item.__POLICY_p(__writer.who)) {");
    gold.append("\n        hide(__writer);");
    gold.append("\n        return;");
    gold.append("\n      }");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dsuit.show(__item.suit.get(), __obj.planField(\"suit\"));");
    gold.append("\n      __drank.show(__item.rank.get(), __obj.planField(\"rank\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __dsuit.clear();");
    gold.append("\n      __drank.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxEmpty extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"Empty\");");
    gold.append("\n    }");
    gold.append("\n    private RTxEmpty(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxEmpty() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxEmpty implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxEmpty() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxEmpty __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Player = new String[] {\"link\", \"play_order\", \"points\"};");
    gold.append("\n  private class RTxPlayer extends RxRecordBase<RTxPlayer> {");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxPrincipal link;");
    gold.append("\n    private final RxBoolean playing;");
    gold.append("\n    private final RxInt32 points;");
    gold.append("\n    private final RxBoolean leader;");
    gold.append("\n    private final RxInt32 play_order;");
    gold.append("\n    private RTxPlayer(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      link = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      playing = new RxBoolean(this, false);");
    gold.append("\n      points = new RxInt32(this, 0);");
    gold.append("\n      leader = new RxBoolean(this, false);");
    gold.append("\n      play_order = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += link.__memory();");
    gold.append("\n      __sum += playing.__memory();");
    gold.append("\n      __sum += points.__memory();");
    gold.append("\n      __sum += leader.__memory();");
    gold.append("\n      __sum += play_order.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Player;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {link.getIndexValue(), play_order.getIndexValue(), points.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"link\":");
    gold.append("\n              link.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"playing\":");
    gold.append("\n              playing.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"points\":");
    gold.append("\n              points.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"leader\":");
    gold.append("\n              leader.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"play_order\":");
    gold.append("\n              play_order.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"link\":");
    gold.append("\n              link.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"playing\":");
    gold.append("\n              playing.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"points\":");
    gold.append("\n              points.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"leader\":");
    gold.append("\n              leader.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"play_order\":");
    gold.append("\n              play_order.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"link\");");
    gold.append("\n      link.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"playing\");");
    gold.append("\n      playing.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"points\");");
    gold.append("\n      points.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"leader\");");
    gold.append("\n      leader.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"play_order\");");
    gold.append("\n      play_order.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        link.__commit(\"link\", __forward, __reverse);");
    gold.append("\n        playing.__commit(\"playing\", __forward, __reverse);");
    gold.append("\n        points.__commit(\"points\", __forward, __reverse);");
    gold.append("\n        leader.__commit(\"leader\", __forward, __reverse);");
    gold.append("\n        play_order.__commit(\"play_order\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        link.__revert();");
    gold.append("\n        playing.__revert();");
    gold.append("\n        points.__revert();");
    gold.append("\n        leader.__revert();");
    gold.append("\n        play_order.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Player\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPlayer implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DPrincipal __dlink;");
    gold.append("\n    private DInt32 __dpoints;");
    gold.append("\n    private DBoolean __dleader;");
    gold.append("\n    private DInt32 __dplay_order;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPlayer() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dlink = new DPrincipal();");
    gold.append("\n      __dpoints = new DInt32();");
    gold.append("\n      __dleader = new DBoolean();");
    gold.append("\n      __dplay_order = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      __sum += __dlink.__memory();");
    gold.append("\n      __sum += __dpoints.__memory();");
    gold.append("\n      __sum += __dleader.__memory();");
    gold.append("\n      __sum += __dplay_order.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPlayer __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dlink.show(__item.link.get(), __obj.planField(\"link\"));");
    gold.append("\n      __dpoints.show(__item.points.get(), __obj.planField(\"points\"));");
    gold.append("\n      if (__writer.who.equals(__item.link.get())) {");
    gold.append("\n        __dleader.show(__item.leader.get(), __obj.planField(\"leader\"));");
    gold.append("\n        /* privacy check close up */");
    gold.append("\n      } else {");
    gold.append("\n        __dleader.hide(__obj.planField(\"leader\"));");
    gold.append("\n      }");
    gold.append("\n      if (__writer.who.equals(__item.link.get())) {");
    gold.append("\n        __dplay_order.show(__item.play_order.get(), __obj.planField(\"play_order\"));");
    gold.append("\n        /* privacy check close up */");
    gold.append("\n      } else {");
    gold.append("\n        __dplay_order.hide(__obj.planField(\"play_order\"));");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __dlink.clear();");
    gold.append("\n      __dpoints.clear();");
    gold.append("\n      __dleader.clear();");
    gold.append("\n      __dplay_order.clear();");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_LeaderAction = new int[] {1, 2, 3, 10};");
    gold.append("\n  private static final int __EnumCycleNext_LeaderAction(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 3:");
    gold.append("\n        return 10;");
    gold.append("\n      case 10:");
    gold.append("\n        return 1;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_LeaderAction(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n        return 10;");
    gold.append("\n      case 10:");
    gold.append("\n        return 3;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_LeaderAction(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 1:");
    gold.append("\n      case 2:");
    gold.append("\n      case 3:");
    gold.append("\n      case 10:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxLeaderActionMessage extends NtMessageBase {");
    gold.append("\n    private int action = 0;");
    gold.append("\n    private int id = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"action\");");
    gold.append("\n      __hash.hashInteger(this.action);");
    gold.append("\n      __hash.hashString(\"id\");");
    gold.append("\n      __hash.hashInteger(this.id);");
    gold.append("\n      __hash.hashString(\"LeaderActionMessage\");");
    gold.append("\n    }");
    gold.append("\n    private RTxLeaderActionMessage(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"action\":");
    gold.append("\n              this.action = __EnumFix_LeaderAction(__reader.readInteger());");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              this.id = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"action\");");
    gold.append("\n      __writer.writeInteger(action);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      __writer.writeInteger(id);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxLeaderActionMessage() {}");
    gold.append("\n    private RTxLeaderActionMessage(int action, int id) {");
    gold.append("\n      this.action = action;");
    gold.append("\n      this.id = id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxLeaderActionMessage implements DeltaNode {");
    gold.append("\n    private DInt32 __daction;");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxLeaderActionMessage() {");
    gold.append("\n      __daction = new DInt32();");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __daction.__memory();");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxLeaderActionMessage __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __daction.show(__item.action, __obj.planField(\"action\"));");
    gold.append("\n      __did.show(__item.id, __obj.planField(\"id\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __daction.clear();");
    gold.append("\n      __did.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_PassingMode = new int[] {0, 1, 2, 3};");
    gold.append("\n  private static final int __EnumCycleNext_PassingMode(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 3:");
    gold.append("\n        return 0;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_PassingMode(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 0:");
    gold.append("\n        return 3;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_PassingMode(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 0:");
    gold.append("\n      case 1:");
    gold.append("\n      case 2:");
    gold.append("\n      case 3:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 0;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxCardDecision extends NtMessageBase {");
    gold.append("\n    private int id = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"id\");");
    gold.append("\n      __hash.hashInteger(this.id);");
    gold.append("\n      __hash.hashString(\"CardDecision\");");
    gold.append("\n    }");
    gold.append("\n    private RTxCardDecision(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              this.id = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      __writer.writeInteger(id);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxCardDecision() {}");
    gold.append("\n    private RTxCardDecision(int id) {");
    gold.append("\n      this.id = id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxCardDecision implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxCardDecision() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxCardDecision __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id, __obj.planField(\"id\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private boolean leader = false;");
    gold.append("\n    private NtPrincipal link = NtPrincipal.NO_ONE;");
    gold.append("\n    private int play_order = 0;");
    gold.append("\n    private boolean playing = false;");
    gold.append("\n    private int points = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"leader\");");
    gold.append("\n      __hash.hashBoolean(this.leader);");
    gold.append("\n      __hash.hashString(\"link\");");
    gold.append("\n      __hash.hashNtPrincipal(this.link);");
    gold.append("\n      __hash.hashString(\"play_order\");");
    gold.append("\n      __hash.hashInteger(this.play_order);");
    gold.append("\n      __hash.hashString(\"playing\");");
    gold.append("\n      __hash.hashBoolean(this.playing);");
    gold.append("\n      __hash.hashString(\"points\");");
    gold.append("\n      __hash.hashInteger(this.points);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"leader\":");
    gold.append("\n              this.leader = __reader.readBoolean();");
    gold.append("\n              break;");
    gold.append("\n            case \"link\":");
    gold.append("\n              this.link = __reader.readNtPrincipal();");
    gold.append("\n              break;");
    gold.append("\n            case \"play_order\":");
    gold.append("\n              this.play_order = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            case \"playing\":");
    gold.append("\n              this.playing = __reader.readBoolean();");
    gold.append("\n              break;");
    gold.append("\n            case \"points\":");
    gold.append("\n              this.points = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"leader\");");
    gold.append("\n      __writer.writeBoolean(leader);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"link\");");
    gold.append("\n      __writer.writeNtPrincipal(link);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"play_order\");");
    gold.append("\n      __writer.writeInteger(play_order);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"playing\");");
    gold.append("\n      __writer.writeBoolean(playing);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"points\");");
    gold.append("\n      __writer.writeInteger(points);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() {}");
    gold.append("\n    private RTx_AnonObjConvert_0(boolean leader, NtPrincipal link, int play_order, boolean playing, int points) {");
    gold.append("\n      this.leader = leader;");
    gold.append("\n      this.link = link;");
    gold.append("\n      this.play_order = play_order;");
    gold.append("\n      this.playing = playing;");
    gold.append("\n      this.points = points;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DBoolean __dleader;");
    gold.append("\n    private DPrincipal __dlink;");
    gold.append("\n    private DInt32 __dplay_order;");
    gold.append("\n    private DBoolean __dplaying;");
    gold.append("\n    private DInt32 __dpoints;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dleader = new DBoolean();");
    gold.append("\n      __dlink = new DPrincipal();");
    gold.append("\n      __dplay_order = new DInt32();");
    gold.append("\n      __dplaying = new DBoolean();");
    gold.append("\n      __dpoints = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dleader.__memory();");
    gold.append("\n      __sum += __dlink.__memory();");
    gold.append("\n      __sum += __dplay_order.__memory();");
    gold.append("\n      __sum += __dplaying.__memory();");
    gold.append("\n      __sum += __dpoints.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dleader.show(__item.leader, __obj.planField(\"leader\"));");
    gold.append("\n      __dlink.show(__item.link, __obj.planField(\"link\"));");
    gold.append("\n      __dplay_order.show(__item.play_order, __obj.planField(\"play_order\"));");
    gold.append("\n      __dplaying.show(__item.playing, __obj.planField(\"playing\"));");
    gold.append("\n      __dpoints.show(__item.points, __obj.planField(\"points\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dleader.clear();");
    gold.append("\n      __dlink.clear();");
    gold.append("\n      __dplay_order.clear();");
    gold.append("\n      __dplaying.clear();");
    gold.append("\n      __dpoints.clear();");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_2 extends NtMessageBase {");
    gold.append("\n    private int place = 0;");
    gold.append("\n    private int rank = 0;");
    gold.append("\n    private int suit = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"place\");");
    gold.append("\n      __hash.hashInteger(this.place);");
    gold.append("\n      __hash.hashString(\"rank\");");
    gold.append("\n      __hash.hashInteger(this.rank);");
    gold.append("\n      __hash.hashString(\"suit\");");
    gold.append("\n      __hash.hashInteger(this.suit);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_2(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"place\":");
    gold.append("\n              this.place = __EnumFix_Place(__reader.readInteger());");
    gold.append("\n              break;");
    gold.append("\n            case \"rank\":");
    gold.append("\n              this.rank = __EnumFix_Rank(__reader.readInteger());");
    gold.append("\n              break;");
    gold.append("\n            case \"suit\":");
    gold.append("\n              this.suit = __EnumFix_Suit(__reader.readInteger());");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"place\");");
    gold.append("\n      __writer.writeInteger(place);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"rank\");");
    gold.append("\n      __writer.writeInteger(rank);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"suit\");");
    gold.append("\n      __writer.writeInteger(suit);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_2() {}");
    gold.append("\n    private RTx_AnonObjConvert_2(int place, int rank, int suit) {");
    gold.append("\n      this.place = place;");
    gold.append("\n      this.rank = rank;");
    gold.append("\n      this.suit = suit;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_2 implements DeltaNode {");
    gold.append("\n    private DInt32 __dplace;");
    gold.append("\n    private DInt32 __drank;");
    gold.append("\n    private DInt32 __dsuit;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_2() {");
    gold.append("\n      __dplace = new DInt32();");
    gold.append("\n      __drank = new DInt32();");
    gold.append("\n      __dsuit = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dplace.__memory();");
    gold.append("\n      __sum += __drank.__memory();");
    gold.append("\n      __sum += __dsuit.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_2 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dplace.show(__item.place, __obj.planField(\"place\"));");
    gold.append("\n      __drank.show(__item.rank, __obj.planField(\"rank\"));");
    gold.append("\n      __dsuit.show(__item.suit, __obj.planField(\"suit\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dplace.clear();");
    gold.append("\n      __drank.clear();");
    gold.append("\n      __dsuit.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  private final Sink<RTxLeaderActionMessage> __queue_leader = new Sink<>(\"leader\");");
    gold.append("\n  private final NtChannel<RTxLeaderActionMessage> leader = new NtChannel<>(__futures, __queue_leader);");
    gold.append("\n  private final Sink<RTxCardDecision[]> __queue_pass_channel = new Sink<>(\"pass_channel\");");
    gold.append("\n  private final NtChannel<RTxCardDecision[]> pass_channel = new NtChannel<>(__futures, __queue_pass_channel);");
    gold.append("\n  private final Sink<RTxCardDecision[]> __queue_single_play = new Sink<>(\"single_play\");");
    gold.append("\n  private final NtChannel<RTxCardDecision[]> single_play = new NtChannel<>(__futures, __queue_single_play);");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"leader\":");
    gold.append("\n        __queue_leader.enqueue(__task, (RTxLeaderActionMessage) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      case \"pass_channel\":");
    gold.append("\n        __queue_pass_channel.enqueue(__task, (RTxCardDecision[]) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      case \"single_play\":");
    gold.append("\n        __queue_single_play.enqueue(__task, (RTxCardDecision[]) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"leader\":");
    gold.append("\n        return new RTxLeaderActionMessage(__reader);");
    gold.append("\n      case \"pass_channel\":");
    gold.append("\n        {");
    gold.append("\n          ArrayList<RTxCardDecision> __array_pass_channel = new ArrayList<>();");
    gold.append("\n          if (__reader.startArray()) {");
    gold.append("\n            while (__reader.notEndOfArray()) {");
    gold.append("\n              __array_pass_channel.add(new RTxCardDecision(__reader));");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n          return __array_pass_channel.toArray(new RTxCardDecision[__array_pass_channel.size()]);");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n      case \"single_play\":");
    gold.append("\n        {");
    gold.append("\n          ArrayList<RTxCardDecision> __array_single_play = new ArrayList<>();");
    gold.append("\n          if (__reader.startArray()) {");
    gold.append("\n            while (__reader.notEndOfArray()) {");
    gold.append("\n              __array_single_play.add(new RTxCardDecision(__reader));");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n          return __array_single_play.toArray(new RTxCardDecision[__array_single_play.size()]);");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n    __queue_leader.clear();");
    gold.append("\n    __queue_pass_channel.clear();");
    gold.append("\n    __queue_single_play.clear();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private void __step_lobby() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(5);");
    gold.append("\n    final RTxLeaderActionMessage decision = leader.fetchItem(owner.get()).await();");
    gold.append("\n    __track(6);");
    gold.append("\n    if (decision.action == 1 && !ready.get()) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(7);");
    gold.append("\n      NtList<RxBoolean> _auto_28 = (players.iterate(false).where(true, new __CLOSURE_WhereClause7(decision))).transform((item) -> item.playing);");
    gold.append("\n      for (RxBoolean _auto_29 : _auto_28) {");
    gold.append("\n        _auto_29.set(true);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (decision.action == 2) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(8);");
    gold.append("\n      NtList<RxBoolean> _auto_30 = (players.iterate(false).where(true, new __CLOSURE_WhereClause8(decision))).transform((item) -> item.playing);");
    gold.append("\n      for (RxBoolean _auto_31 : _auto_30) {");
    gold.append("\n        _auto_31.set(false);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (decision.action == 3) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(9);");
    gold.append("\n      NtList<RxInt32> _auto_32 = (players.iterate(false).where(true, new __CLOSURE_WhereClause9())).transform((item) -> item.play_order);");
    gold.append("\n      for (RxInt32 _auto_33 : _auto_32) {");
    gold.append("\n        _auto_33.set(__randomInt());");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n    } else if (decision.action == 10) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(10);");
    gold.append("\n      playing.set(true);");
    gold.append("\n      __track(11);");
    gold.append("\n      if ((players.iterate(false).where(true, new __CLOSURE_WhereClause10())).size() == 4) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(12);");
    gold.append("\n        __transitionStateMachine(\"setup\", 0);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(13);");
    gold.append("\n    __transitionStateMachine(\"lobby\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_setup() {");
    gold.append("\n    __code_cost += 6;");
    gold.append("\n    __track(14);");
    gold.append("\n    for(Integer s : __ALL_VALUES_Suit) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(15);");
    gold.append("\n      for(Integer r : __ALL_VALUES_Rank) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(16);");
    gold.append("\n        {");
    gold.append("\n          RxTable<RTxCard> _AutoRef34 = deck;");
    gold.append("\n          RTx_AnonObjConvert_2 _AutoExpr36 = new RTx_AnonObjConvert_2(1, r, s);");
    gold.append("\n          RTxCard _CreateRef35 = _AutoRef34.make();");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          _CreateRef35.place.set(_AutoExpr36.place);");
    gold.append("\n          _CreateRef35.rank.set(_AutoExpr36.rank);");
    gold.append("\n          _CreateRef35.suit.set(_AutoExpr36.suit);");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(17);");
    gold.append("\n    NtList<RxInt32> _auto_37 = (players.iterate(false).where(true, new __CLOSURE_WhereClause11())).transform((item) -> item.play_order);");
    gold.append("\n    for (RxInt32 _auto_38 : _auto_37) {");
    gold.append("\n      _auto_38.set(100);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(18);");
    gold.append("\n    int normativeOrder = 0;");
    gold.append("\n    __track(19);");
    gold.append("\n    NtList<RxInt32> _auto_39 = (players.iterate(false).where(false, new __CLOSURE_WhereClause12()).orderBy(true, __ORDER_Player_play_order_a)).transform((item) -> item.play_order);");
    gold.append("\n    for (RxInt32 _auto_40 : _auto_39) {");
    gold.append("\n      _auto_40.set(normativeOrder++);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(20);");
    gold.append("\n    __transitionStateMachine(\"shuffle_and_distribute\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_shuffle_and_distribute() {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(21);");
    gold.append("\n    NtList<RxInt32> _auto_41 = (deck.iterate(true)).transform((item) -> item.ordering);");
    gold.append("\n    for (RxInt32 _auto_42 : _auto_41) {");
    gold.append("\n      _auto_42.set(__randomInt());");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(22);");
    gold.append("\n    NtList<RxPrincipal> _auto_43 = (deck.iterate(true)).transform((item) -> item.owner);");
    gold.append("\n    for (RxPrincipal _auto_44 : _auto_43) {");
    gold.append("\n      _auto_44.set(NtPrincipal.NO_ONE);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(23);");
    gold.append("\n    NtList<RxEnumInt32> _auto_45 = (deck.iterate(true)).transform((item) -> item.place);");
    gold.append("\n    for (RxEnumInt32 _auto_46 : _auto_45) {");
    gold.append("\n      _auto_46.set(2);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(24);");
    gold.append("\n    RTxPlayer[] op = (players.iterate(false).where(false, new __CLOSURE_WhereClause13()).orderBy(true, __ORDER_Player_play_order_a)).toArray((Integer __n) -> (Object) (new RTxPlayer[__n]));");
    gold.append("\n    __track(25);");
    gold.append("\n    {");
    gold.append("\n      int k = 0;");
    gold.append("\n      for (;__goodwill(225, 18, 225, 23) && (k < 4);k++) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(26);");
    gold.append("\n        NtMaybe<RTxPlayer> _AutoConditionplayer_47;");
    gold.append("\n        if ((_AutoConditionplayer_47 = Utility.lookup(op, k)).has()) {");
    gold.append("\n          RTxPlayer player = _AutoConditionplayer_47.get();");
    gold.append("\n          __code_cost += 2;");
    gold.append("\n          __track(27);");
    gold.append("\n          NtList<RxPrincipal> _auto_48 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause14()).orderBy(false, __ORDER_Card_ordering_a).limit(true, 13)).transform((item) -> item.owner);");
    gold.append("\n          for (RxPrincipal _auto_49 : _auto_48) {");
    gold.append("\n            _auto_49.set(player.link.get());");
    gold.append("\n          }");
    gold.append("\n");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(28);");
    gold.append("\n    __transitionStateMachine(\"pass\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_pass() {");
    gold.append("\n    __code_cost += 13;");
    gold.append("\n    __track(29);");
    gold.append("\n    if (passing_mode.get() == 3) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(30);");
    gold.append("\n      __transitionStateMachine(\"start_play\", 0);");
    gold.append("\n    }");
    gold.append("\n    __track(31);");
    gold.append("\n    RTxPlayer[] op = (players.iterate(false).where(false, new __CLOSURE_WhereClause15()).orderBy(true, __ORDER_Player_play_order_a)).toArray((Integer __n) -> (Object) (new RTxPlayer[__n]));");
    gold.append("\n    __track(32);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_50;");
    gold.append("\n    if ((_AutoConditionplayer_50 = Utility.lookup(op, 0)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_50.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(33);");
    gold.append("\n      player1.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(34);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_51;");
    gold.append("\n    if ((_AutoConditionplayer_51 = Utility.lookup(op, 1)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_51.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(35);");
    gold.append("\n      player2.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(36);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_52;");
    gold.append("\n    if ((_AutoConditionplayer_52 = Utility.lookup(op, 2)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_52.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(37);");
    gold.append("\n      player3.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(38);");
    gold.append("\n    NtMaybe<RTxPlayer> _AutoConditionplayer_53;");
    gold.append("\n    if ((_AutoConditionplayer_53 = Utility.lookup(op, 3)).has()) {");
    gold.append("\n      RTxPlayer player = _AutoConditionplayer_53.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(39);");
    gold.append("\n      player4.set(player.link.get());");
    gold.append("\n    }");
    gold.append("\n    __track(40);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass1 = pass_channel.choose(player1.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause16(player1)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(41);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass2 = pass_channel.choose(player2.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause17(player2)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(42);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass3 = pass_channel.choose(player3.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause18(player3)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(43);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> pass4 = pass_channel.choose(player4.get(), Utility.convertMultiple(deck.iterate(false).where(true, new __CLOSURE_WhereClause19(player4)), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 3);");
    gold.append("\n    __track(44);");
    gold.append("\n    NtMaybe<RTxCardDecision[]> _AutoConditiondecision1_54;");
    gold.append("\n    if ((_AutoConditiondecision1_54 = pass1.await()).has()) {");
    gold.append("\n      RTxCardDecision[] decision1 = _AutoConditiondecision1_54.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(45);");
    gold.append("\n      NtMaybe<RTxCardDecision[]> _AutoConditiondecision2_55;");
    gold.append("\n      if ((_AutoConditiondecision2_55 = pass2.await()).has()) {");
    gold.append("\n        RTxCardDecision[] decision2 = _AutoConditiondecision2_55.get();");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(46);");
    gold.append("\n        NtMaybe<RTxCardDecision[]> _AutoConditiondecision3_56;");
    gold.append("\n        if ((_AutoConditiondecision3_56 = pass3.await()).has()) {");
    gold.append("\n          RTxCardDecision[] decision3 = _AutoConditiondecision3_56.get();");
    gold.append("\n          __code_cost += 2;");
    gold.append("\n          __track(47);");
    gold.append("\n          NtMaybe<RTxCardDecision[]> _AutoConditiondecision4_57;");
    gold.append("\n          if ((_AutoConditiondecision4_57 = pass4.await()).has()) {");
    gold.append("\n            RTxCardDecision[] decision4 = _AutoConditiondecision4_57.get();");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(48);");
    gold.append("\n            if (passing_mode.get() == 2) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(49);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(50);");
    gold.append("\n                NtList<RxPrincipal> _auto_58 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause20(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_59 : _auto_58) {");
    gold.append("\n                  _auto_59.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(51);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(52);");
    gold.append("\n                NtList<RxPrincipal> _auto_60 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause21(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_61 : _auto_60) {");
    gold.append("\n                  _auto_61.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(53);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(54);");
    gold.append("\n                NtList<RxPrincipal> _auto_62 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause22(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_63 : _auto_62) {");
    gold.append("\n                  _auto_63.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(55);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(56);");
    gold.append("\n                NtList<RxPrincipal> _auto_64 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause23(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_65 : _auto_64) {");
    gold.append("\n                  _auto_65.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            } else if (passing_mode.get() == 1) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(57);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(58);");
    gold.append("\n                NtList<RxPrincipal> _auto_66 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause24(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_67 : _auto_66) {");
    gold.append("\n                  _auto_67.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(59);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(60);");
    gold.append("\n                NtList<RxPrincipal> _auto_68 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause25(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_69 : _auto_68) {");
    gold.append("\n                  _auto_69.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(61);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(62);");
    gold.append("\n                NtList<RxPrincipal> _auto_70 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause26(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_71 : _auto_70) {");
    gold.append("\n                  _auto_71.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(63);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(64);");
    gold.append("\n                NtList<RxPrincipal> _auto_72 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause27(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_73 : _auto_72) {");
    gold.append("\n                  _auto_73.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            } else if (passing_mode.get() == 0) {");
    gold.append("\n              __code_cost += 5;");
    gold.append("\n              __track(65);");
    gold.append("\n              for(RTxCardDecision dec : decision1) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(66);");
    gold.append("\n                NtList<RxPrincipal> _auto_74 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause28(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_75 : _auto_74) {");
    gold.append("\n                  _auto_75.set(player3.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(67);");
    gold.append("\n              for(RTxCardDecision dec : decision2) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(68);");
    gold.append("\n                NtList<RxPrincipal> _auto_76 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause29(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_77 : _auto_76) {");
    gold.append("\n                  _auto_77.set(player4.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(69);");
    gold.append("\n              for(RTxCardDecision dec : decision3) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(70);");
    gold.append("\n                NtList<RxPrincipal> _auto_78 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause30(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_79 : _auto_78) {");
    gold.append("\n                  _auto_79.set(player1.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n              __track(71);");
    gold.append("\n              for(RTxCardDecision dec : decision4) {");
    gold.append("\n                __code_cost += 2;");
    gold.append("\n                __track(72);");
    gold.append("\n                NtList<RxPrincipal> _auto_80 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause31(dec))).transform((item) -> item.owner);");
    gold.append("\n                for (RxPrincipal _auto_81 : _auto_80) {");
    gold.append("\n                  _auto_81.set(player2.get());");
    gold.append("\n                }");
    gold.append("\n");
    gold.append("\n              }");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(73);");
    gold.append("\n    __transitionStateMachine(\"start_play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_start_play() {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(74);");
    gold.append("\n    played.set(0);");
    gold.append("\n    __track(75);");
    gold.append("\n    current.set(player1.get());");
    gold.append("\n    __track(76);");
    gold.append("\n    NtMaybe<RTxCard> _AutoConditiontwo_clubs_82;");
    gold.append("\n    if ((_AutoConditiontwo_clubs_82 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause32())).lookup(0)).has()) {");
    gold.append("\n      RTxCard two_clubs = _AutoConditiontwo_clubs_82.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(77);");
    gold.append("\n      current.set(two_clubs.owner.get());");
    gold.append("\n    }");
    gold.append("\n    __track(78);");
    gold.append("\n    __transitionStateMachine(\"play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_play() {");
    gold.append("\n    __code_cost += 8;");
    gold.append("\n    __track(79);");
    gold.append("\n    NtList<RTxCard> choices = deck.iterate(false).where(true, new __CLOSURE_WhereClause34(current, played, points_played, suit_in_play));");
    gold.append("\n    __track(80);");
    gold.append("\n    if (choices.get().size() == 0) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(81);");
    gold.append("\n      choices = deck.iterate(false).where(true, new __CLOSURE_WhereClause35(current));");
    gold.append("\n    }");
    gold.append("\n    __track(82);");
    gold.append("\n    SimpleFuture<NtMaybe<RTxCardDecision[]>> playX = single_play.choose(current.get(), Utility.convertMultiple(choices.get(), (__n) -> new RTxCardDecision[__n], (__obj) -> new RTxCardDecision(__obj.id.get())), 1);");
    gold.append("\n    __track(83);");
    gold.append("\n    NtMaybe<RTxCardDecision[]> _AutoConditionthePlay_83;");
    gold.append("\n    if ((_AutoConditionthePlay_83 = playX.await()).has()) {");
    gold.append("\n      RTxCardDecision[] thePlay = _AutoConditionthePlay_83.get();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(84);");
    gold.append("\n      for(RTxCardDecision dec : thePlay) {");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(85);");
    gold.append("\n        NtList<RxEnumInt32> _auto_84 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause36(dec))).transform((item) -> item.place);");
    gold.append("\n        for (RxEnumInt32 _auto_85 : _auto_84) {");
    gold.append("\n          _auto_85.set(3);");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n        __track(86);");
    gold.append("\n        NtMaybe<RTxCard> _AutoConditioncardPlayed_86;");
    gold.append("\n        if ((_AutoConditioncardPlayed_86 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause37(dec))).lookup(0)).has()) {");
    gold.append("\n          RTxCard cardPlayed = _AutoConditioncardPlayed_86.get();");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          __track(87);");
    gold.append("\n          if (cardPlayed.points.get() > 0) {");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(88);");
    gold.append("\n            points_played.set(true);");
    gold.append("\n          }");
    gold.append("\n          __track(89);");
    gold.append("\n          if (played.get() == 0) {");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(90);");
    gold.append("\n            suit_in_play.set(cardPlayed.suit.get());");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(91);");
    gold.append("\n    if ((current.get()).equals(player1.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(92);");
    gold.append("\n      current.set(player2.get());");
    gold.append("\n    } else if ((current.get()).equals(player2.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(93);");
    gold.append("\n      current.set(player3.get());");
    gold.append("\n    } else if ((current.get()).equals(player3.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(94);");
    gold.append("\n      current.set(player4.get());");
    gold.append("\n    } else if ((current.get()).equals(player4.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(95);");
    gold.append("\n      current.set(player1.get());");
    gold.append("\n    }");
    gold.append("\n    __track(96);");
    gold.append("\n    if (played.get() == 3) {");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n      __track(97);");
    gold.append("\n      NtMaybe<RTxCard> _AutoConditionwinner_87;");
    gold.append("\n      if ((_AutoConditionwinner_87 = (deck.iterate(false).where(false, new __CLOSURE_WhereClause38(suit_in_play)).orderBy(true, __ORDER_Card_rank_d)).lookup(0)).has()) {");
    gold.append("\n        RTxCard winner = _AutoConditionwinner_87.get();");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(98);");
    gold.append("\n        NtList<RxPrincipal> _auto_88 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause39())).transform((item) -> item.owner);");
    gold.append("\n        for (RxPrincipal _auto_89 : _auto_88) {");
    gold.append("\n          _auto_89.set(winner.owner.get());");
    gold.append("\n        }");
    gold.append("\n");
    gold.append("\n        __track(99);");
    gold.append("\n        last_winner.set(winner.owner.get());");
    gold.append("\n      }");
    gold.append("\n      __track(100);");
    gold.append("\n      NtList<RxEnumInt32> _auto_90 = (deck.iterate(false).where(true, new __CLOSURE_WhereClause40())).transform((item) -> item.place);");
    gold.append("\n      for (RxEnumInt32 _auto_91 : _auto_90) {");
    gold.append("\n        _auto_91.set(4);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n      __track(101);");
    gold.append("\n      played.set(0);");
    gold.append("\n      __track(102);");
    gold.append("\n      current.set(last_winner.get());");
    gold.append("\n      __track(103);");
    gold.append("\n      if ((deck.iterate(false).where(true, new __CLOSURE_WhereClause41(current))).size() == 0) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(104);");
    gold.append("\n        __transitionStateMachine(\"score\", 0);");
    gold.append("\n      }");
    gold.append("\n    } else {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(105);");
    gold.append("\n      played.bumpUpPost();");
    gold.append("\n    }");
    gold.append("\n    __track(106);");
    gold.append("\n    __transitionStateMachine(\"play\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_score() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(107);");
    gold.append("\n    for(RTxPlayer p : players.iterate(false).where(true, new __CLOSURE_WhereClause42())) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(108);");
    gold.append("\n      int local_points = 0;");
    gold.append("\n      __track(109);");
    gold.append("\n      for(RTxCard c : deck.iterate(false).where(true, new __CLOSURE_WhereClause43(p))) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(110);");
    gold.append("\n        local_points += c.points.get();");
    gold.append("\n      }");
    gold.append("\n      __track(111);");
    gold.append("\n      if (local_points == 26) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(112);");
    gold.append("\n        for(RTxPlayer p2 : players.iterate(false).where(true, new __CLOSURE_WhereClause44(p))) {");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          __track(113);");
    gold.append("\n          p2.points.opAddTo(26);");
    gold.append("\n          __track(114);");
    gold.append("\n          points_awarded.opAddTo(26);");
    gold.append("\n        }");
    gold.append("\n      } else {");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(115);");
    gold.append("\n        p.points.opAddTo(local_points);");
    gold.append("\n        __track(116);");
    gold.append("\n        points_awarded.opAddTo(local_points);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(117);");
    gold.append("\n    if (passing_mode.get() == 0) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(118);");
    gold.append("\n      passing_mode.set(2);");
    gold.append("\n    } else if (passing_mode.get() == 2) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(119);");
    gold.append("\n      passing_mode.set(1);");
    gold.append("\n    } else if (passing_mode.get() == 1) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(120);");
    gold.append("\n      passing_mode.set(3);");
    gold.append("\n    } else if (passing_mode.get() == 3) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(121);");
    gold.append("\n      passing_mode.set(0);");
    gold.append("\n    }");
    gold.append("\n    __track(122);");
    gold.append("\n    __transitionStateMachine(\"shuffle_and_distribute\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"lobby\":");
    gold.append("\n        __step_lobby();");
    gold.append("\n        return;");
    gold.append("\n      case \"setup\":");
    gold.append("\n        __step_setup();");
    gold.append("\n        return;");
    gold.append("\n      case \"shuffle_and_distribute\":");
    gold.append("\n        __step_shuffle_and_distribute();");
    gold.append("\n        return;");
    gold.append("\n      case \"pass\":");
    gold.append("\n        __step_pass();");
    gold.append("\n        return;");
    gold.append("\n      case \"start_play\":");
    gold.append("\n        __step_start_play();");
    gold.append("\n        return;");
    gold.append("\n      case \"play\":");
    gold.append("\n        __step_play();");
    gold.append("\n        return;");
    gold.append("\n      case \"score\":");
    gold.append("\n        __step_score();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(123);");
    gold.append("\n    if ((owner.get()).equals(NtPrincipal.NO_ONE)) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(124);");
    gold.append("\n      owner.set(__who);");
    gold.append("\n      __track(125);");
    gold.append("\n      {");
    gold.append("\n        RxTable<RTxPlayer> _AutoRef92 = players;");
    gold.append("\n        RTx_AnonObjConvert_0 _AutoExpr94 = new RTx_AnonObjConvert_0(true, __who, 0, true, 0);");
    gold.append("\n        RTxPlayer _CreateRef93 = _AutoRef92.make();");
    gold.append("\n        __code_cost += 5;");
    gold.append("\n        _CreateRef93.leader.set(_AutoExpr94.leader);");
    gold.append("\n        _CreateRef93.link.set(_AutoExpr94.link);");
    gold.append("\n        _CreateRef93.play_order.set(_AutoExpr94.play_order);");
    gold.append("\n        _CreateRef93.playing.set(_AutoExpr94.playing);");
    gold.append("\n        _CreateRef93.points.set(_AutoExpr94.points);");
    gold.append("\n      }");
    gold.append("\n      __track(126);");
    gold.append("\n      __transitionStateMachine(\"lobby\", 0);");
    gold.append("\n    }");
    gold.append("\n    __track(127);");
    gold.append("\n    if ((owner.get()).equals(__who)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(128);");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    __track(129);");
    gold.append("\n    if ((players.iterate(false).where(true, new __CLOSURE_WhereClause2(__who))).size() == 0) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(130);");
    gold.append("\n      {");
    gold.append("\n        RxTable<RTxPlayer> _AutoRef95 = players;");
    gold.append("\n        RTx_AnonObjConvert_0 _AutoExpr97 = new RTx_AnonObjConvert_0(false, __who, players.size(), false, 0);");
    gold.append("\n        RTxPlayer _CreateRef96 = _AutoRef95.make();");
    gold.append("\n        __code_cost += 5;");
    gold.append("\n        _CreateRef96.leader.set(_AutoExpr97.leader);");
    gold.append("\n        _CreateRef96.link.set(_AutoExpr97.link);");
    gold.append("\n        _CreateRef96.play_order.set(_AutoExpr97.play_order);");
    gold.append("\n        _CreateRef96.playing.set(_AutoExpr97.playing);");
    gold.append("\n        _CreateRef96.points.set(_AutoExpr97.points);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(131);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public void __onDisconnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(132);");
    gold.append("\n    (players.iterate(false).where(true, new __CLOSURE_WhereClause3(__who))).map((__item) -> { __item.__delete(); });");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {");
    gold.append("\n    __onDisconnected__0(__cvalue, __cvalue.who);");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause1 implements WhereClause<RTxCard> {");
    gold.append("\n    private NtPrincipal __who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, __who.hashCode(), 2, 4};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause1(NtPrincipal __who) {");
    gold.append("\n      this.__who = __who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 4 && (owner).equals(__who);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause2 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private NtPrincipal __who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, __who.hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause2(NtPrincipal __who) {");
    gold.append("\n      this.__who = __who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      NtPrincipal link = __obj.link.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (link).equals(__who);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause3 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private NtPrincipal __who;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, __who.hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause3(NtPrincipal __who) {");
    gold.append("\n      this.__who = __who;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      NtPrincipal link = __obj.link.get();");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (link).equals(__who) && !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause4 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause5 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause6 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause7 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxLeaderActionMessage decision;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return decision.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause7(RTxLeaderActionMessage decision) {");
    gold.append("\n      this.decision = decision;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == decision.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause8 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxLeaderActionMessage decision;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return decision.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause8(RTxLeaderActionMessage decision) {");
    gold.append("\n      this.decision = decision;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == decision.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause9 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause10 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause11 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return !playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause12 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause13 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause14 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, NtPrincipal.NO_ONE.hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(NtPrincipal.NO_ONE);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause15 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause16 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal player1;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player1.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause16(RxPrincipal player1) {");
    gold.append("\n      this.player1 = player1;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(player1.get());");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause17 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal player2;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player2.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause17(RxPrincipal player2) {");
    gold.append("\n      this.player2 = player2;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(player2.get());");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause18 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal player3;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player3.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause18(RxPrincipal player3) {");
    gold.append("\n      this.player3 = player3;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(player3.get());");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause19 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal player4;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, player4.get().hashCode()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause19(RxPrincipal player4) {");
    gold.append("\n      this.player4 = player4;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(player4.get());");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause20 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause20(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause21 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause21(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause22 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause22(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause23 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause23(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause24 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause24(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause25 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause25(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause26 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause26(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause27 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause27(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause28 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause28(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause29 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause29(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause30 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause30(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause31 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause31(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause32 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {3, 2, 4, 1};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int rank = __obj.rank.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return rank == 2 && suit == 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause33 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause34 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal current;");
    gold.append("\n    private RxInt32 played;");
    gold.append("\n    private RxBoolean points_played;");
    gold.append("\n    private RxEnumInt32 suit_in_play;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, current.get().hashCode(), 2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause34(RxPrincipal current, RxInt32 played, RxBoolean points_played, RxEnumInt32 suit_in_play) {");
    gold.append("\n      this.current = current;");
    gold.append("\n      this.played = played;");
    gold.append("\n      this.points_played = points_played;");
    gold.append("\n      this.suit_in_play = suit_in_play;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      int points = __obj.points.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(current.get()) && place == 2 && (played.get() == 0 && (points_played.get() || points == 0) || played.get() > 0 && suit_in_play.get() == suit);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause35 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal current;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, current.get().hashCode(), 2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause35(RxPrincipal current) {");
    gold.append("\n      this.current = current;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(current.get()) && place == 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause36 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause36(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause37 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxCardDecision dec;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return dec.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause37(RTxCardDecision dec) {");
    gold.append("\n      this.dec = dec;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == dec.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause38 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxEnumInt32 suit_in_play;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3, 4, suit_in_play.get()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause38(RxEnumInt32 suit_in_play) {");
    gold.append("\n      this.suit_in_play = suit_in_play;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      int suit = __obj.suit.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3 && suit == suit_in_play.get();");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause39 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause40 implements WhereClause<RTxCard> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {2, 3};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return place == 3;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause41 implements WhereClause<RTxCard> {");
    gold.append("\n    private RxPrincipal current;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, current.get().hashCode(), 2, 2};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause41(RxPrincipal current) {");
    gold.append("\n      this.current = current;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(current.get()) && place == 2;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause42 implements WhereClause<RTxPlayer> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause43 implements WhereClause<RTxCard> {");
    gold.append("\n    private RTxPlayer p;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {1, p.link.get().hashCode(), 2, 4};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause43(RTxPlayer p) {");
    gold.append("\n      this.p = p;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxCard __obj) {");
    gold.append("\n      NtPrincipal owner = __obj.owner.get();");
    gold.append("\n      int place = __obj.place.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return (owner).equals(p.link.get()) && place == 4;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause44 implements WhereClause<RTxPlayer> {");
    gold.append("\n    private RTxPlayer p;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause44(RTxPlayer p) {");
    gold.append("\n      this.p = p;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxPlayer __obj) {");
    gold.append("\n      boolean playing = __obj.playing.get();");
    gold.append("\n      NtPrincipal link = __obj.link.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return playing && !(link).equals(p.link.get());");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxCard> __ORDER_Card_ordering_a = new Comparator<RTxCard>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxCard __a, RTxCard __b) {");
    gold.append("\n      return __a.ordering.compareTo(__b.ordering);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxCard> __ORDER_Card_rank_d = new Comparator<RTxCard>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxCard __a, RTxCard __b) {");
    gold.append("\n      return -__a.rank.compareTo(__b.rank);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  private final static Comparator<RTxPlayer> __ORDER_Player_play_order_a = new Comparator<RTxPlayer>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxPlayer __a, RTxPlayer __b) {");
    gold.append("\n      return __a.play_order.compareTo(__b.play_order);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"deck\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Card\"}},\"hand\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_record\",\"name\":\"Card\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"suit\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}},\"privacy\":\"public\"},\"rank\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Rank\",\"options\":{\"values\":{\"Two\":2,\"Three\":3,\"Four\":4,\"Five\":5,\"Six\":6,\"Seven\":7,\"Eight\":8,\"Nine\":9,\"Ten\":10,\"Jack\":11,\"Queen\":12,\"King\":13,\"Ace\":14},\"names\":{\"2\":\"Two\",\"3\":\"Three\",\"4\":\"Four\",\"5\":\"Five\",\"6\":\"Six\",\"7\":\"Seven\",\"8\":\"Eight\",\"9\":\"Nine\",\"10\":\"Ten\",\"11\":\"Jack\",\"12\":\"Queen\",\"13\":\"King\",\"14\":\"Ace\"},\"default\":\"Two\"}},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"ordering\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"place\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Place\",\"options\":{\"values\":{\"Deck\":1,\"Hand\":2,\"InPlay\":3,\"Taken\":4},\"names\":{\"1\":\"Deck\",\"2\":\"Hand\",\"3\":\"InPlay\",\"4\":\"Taken\"},\"default\":\"Deck\"}},\"privacy\":\"private\"},\"points\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"}}}},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"}},\"players\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Player\"}},\"players_connected\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"observers_connected\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"people\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_record\",\"name\":\"Player\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"link\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"playing\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"private\"},\"points\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"leader\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"viewer_is\"},\"play_order\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"viewer_is\"}}}},\"privacy\":\"public\"},\"players_ordered\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_record\",\"name\":\"Player\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"link\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"playing\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"private\"},\"points\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"leader\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"viewer_is\"},\"play_order\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"viewer_is\"}}}},\"privacy\":\"public\"},\"ready\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"playing\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"passing_mode\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"PassingMode\",\"options\":{\"values\":{\"Across\":0,\"ToLeft\":1,\"ToRight\":2,\"None\":3},\"names\":{\"0\":\"Across\",\"1\":\"ToLeft\",\"2\":\"ToRight\",\"3\":\"None\"},\"default\":\"Across\"}},\"privacy\":\"public\"},\"player1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"}},\"player2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"}},\"player3\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"}},\"player4\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"}},\"current\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"}},\"played\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"suit_in_play\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}},\"privacy\":\"public\"},\"points_played\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"public\"},\"in_play\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_record\",\"name\":\"Card\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"suit\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}},\"privacy\":\"public\"},\"rank\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Rank\",\"options\":{\"values\":{\"Two\":2,\"Three\":3,\"Four\":4,\"Five\":5,\"Six\":6,\"Seven\":7,\"Eight\":8,\"Nine\":9,\"Ten\":10,\"Jack\":11,\"Queen\":12,\"King\":13,\"Ace\":14},\"names\":{\"2\":\"Two\",\"3\":\"Three\",\"4\":\"Four\",\"5\":\"Five\",\"6\":\"Six\",\"7\":\"Seven\",\"8\":\"Eight\",\"9\":\"Nine\",\"10\":\"Ten\",\"11\":\"Jack\",\"12\":\"Queen\",\"13\":\"King\",\"14\":\"Ace\"},\"default\":\"Two\"}},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"ordering\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"place\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Place\",\"options\":{\"values\":{\"Deck\":1,\"Hand\":2,\"InPlay\":3,\"Taken\":4},\"names\":{\"1\":\"Deck\",\"2\":\"Hand\",\"3\":\"InPlay\",\"4\":\"Taken\"},\"default\":\"Deck\"}},\"privacy\":\"private\"},\"points\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"}}}},\"privacy\":\"public\"},\"last_winner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"points_awarded\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"my_take\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_record\",\"name\":\"Card\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"suit\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}},\"privacy\":\"public\"},\"rank\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Rank\",\"options\":{\"values\":{\"Two\":2,\"Three\":3,\"Four\":4,\"Five\":5,\"Six\":6,\"Seven\":7,\"Eight\":8,\"Nine\":9,\"Ten\":10,\"Jack\":11,\"Queen\":12,\"King\":13,\"Ace\":14},\"names\":{\"2\":\"Two\",\"3\":\"Three\",\"4\":\"Four\",\"5\":\"Five\",\"6\":\"Six\",\"7\":\"Seven\",\"8\":\"Eight\",\"9\":\"Nine\",\"10\":\"Ten\",\"11\":\"Jack\",\"12\":\"Queen\",\"13\":\"King\",\"14\":\"Ace\"},\"default\":\"Two\"}},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"ordering\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"place\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Place\",\"options\":{\"values\":{\"Deck\":1,\"Hand\":2,\"InPlay\":3,\"Taken\":4},\"names\":{\"1\":\"Deck\",\"2\":\"Hand\",\"3\":\"InPlay\",\"4\":\"Taken\"},\"default\":\"Deck\"}},\"privacy\":\"private\"},\"points\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"}}}},\"privacy\":\"bubble\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"Suit\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}},\"Rank\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Rank\",\"options\":{\"values\":{\"Two\":2,\"Three\":3,\"Four\":4,\"Five\":5,\"Six\":6,\"Seven\":7,\"Eight\":8,\"Nine\":9,\"Ten\":10,\"Jack\":11,\"Queen\":12,\"King\":13,\"Ace\":14},\"names\":{\"2\":\"Two\",\"3\":\"Three\",\"4\":\"Four\",\"5\":\"Five\",\"6\":\"Six\",\"7\":\"Seven\",\"8\":\"Eight\",\"9\":\"Nine\",\"10\":\"Ten\",\"11\":\"Jack\",\"12\":\"Queen\",\"13\":\"King\",\"14\":\"Ace\"},\"default\":\"Two\"}},\"Place\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Place\",\"options\":{\"values\":{\"Deck\":1,\"Hand\":2,\"InPlay\":3,\"Taken\":4},\"names\":{\"1\":\"Deck\",\"2\":\"Hand\",\"3\":\"InPlay\",\"4\":\"Taken\"},\"default\":\"Deck\"}},\"Card\":{\"nature\":\"reactive_record\",\"name\":\"Card\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"suit\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}},\"privacy\":\"public\"},\"rank\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Rank\",\"options\":{\"values\":{\"Two\":2,\"Three\":3,\"Four\":4,\"Five\":5,\"Six\":6,\"Seven\":7,\"Eight\":8,\"Nine\":9,\"Ten\":10,\"Jack\":11,\"Queen\":12,\"King\":13,\"Ace\":14},\"names\":{\"2\":\"Two\",\"3\":\"Three\",\"4\":\"Four\",\"5\":\"Five\",\"6\":\"Six\",\"7\":\"Seven\",\"8\":\"Eight\",\"9\":\"Nine\",\"10\":\"Ten\",\"11\":\"Jack\",\"12\":\"Queen\",\"13\":\"King\",\"14\":\"Ace\"},\"default\":\"Two\"}},\"privacy\":\"public\"},\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"private\"},\"ordering\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"private\"},\"place\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"Place\",\"options\":{\"values\":{\"Deck\":1,\"Hand\":2,\"InPlay\":3,\"Taken\":4},\"names\":{\"1\":\"Deck\",\"2\":\"Hand\",\"3\":\"InPlay\",\"4\":\"Taken\"},\"default\":\"Deck\"}},\"privacy\":\"private\"},\"points\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"private\"}}},\"Empty\":{\"nature\":\"native_message\",\"name\":\"Empty\",\"anonymous\":false,\"fields\":{}},\"Player\":{\"nature\":\"reactive_record\",\"name\":\"Player\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"link\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"playing\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"private\"},\"points\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"leader\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"},\"privacy\":\"viewer_is\"},\"play_order\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"viewer_is\"}}},\"LeaderAction\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"LeaderAction\",\"options\":{\"values\":{\"PromoteObserver\":1,\"DemotePlayer\":2,\"ShufflePlayers\":3,\"Begin\":10},\"names\":{\"1\":\"PromoteObserver\",\"2\":\"DemotePlayer\",\"3\":\"ShufflePlayers\",\"10\":\"Begin\"},\"default\":\"PromoteObserver\"}},\"LeaderActionMessage\":{\"nature\":\"native_message\",\"name\":\"LeaderActionMessage\",\"anonymous\":false,\"fields\":{\"action\":{\"type\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"LeaderAction\",\"options\":{\"values\":{\"PromoteObserver\":1,\"DemotePlayer\":2,\"ShufflePlayers\":3,\"Begin\":10},\"names\":{\"1\":\"PromoteObserver\",\"2\":\"DemotePlayer\",\"3\":\"ShufflePlayers\",\"10\":\"Begin\"},\"default\":\"PromoteObserver\"}},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"PassingMode\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"PassingMode\",\"options\":{\"values\":{\"Across\":0,\"ToLeft\":1,\"ToRight\":2,\"None\":3},\"names\":{\"0\":\"Across\",\"1\":\"ToLeft\",\"2\":\"ToRight\",\"3\":\"None\"},\"default\":\"Across\"}},\"CardDecision\":{\"nature\":\"native_message\",\"name\":\"CardDecision\",\"anonymous\":false,\"fields\":{\"id\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"leader\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"}},\"link\":{\"type\":{\"nature\":\"native_value\",\"type\":\"secure<principal>\"}},\"play_order\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"playing\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"}},\"points\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}}}},\"_AnonObjConvert_2\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_2\",\"anonymous\":true,\"fields\":{\"place\":{\"type\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Place\",\"options\":{\"values\":{\"Deck\":1,\"Hand\":2,\"InPlay\":3,\"Taken\":4},\"names\":{\"1\":\"Deck\",\"2\":\"Hand\",\"3\":\"InPlay\",\"4\":\"Taken\"},\"default\":\"Deck\"}}},\"rank\":{\"type\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Rank\",\"options\":{\"values\":{\"Two\":2,\"Three\":3,\"Four\":4,\"Five\":5,\"Six\":6,\"Seven\":7,\"Eight\":8,\"Nine\":9,\"Ten\":10,\"Jack\":11,\"Queen\":12,\"King\":13,\"Ace\":14},\"names\":{\"2\":\"Two\",\"3\":\"Three\",\"4\":\"Four\",\"5\":\"Five\",\"6\":\"Six\",\"7\":\"Seven\",\"8\":\"Eight\",\"9\":\"Nine\",\"10\":\"Ten\",\"11\":\"Jack\",\"12\":\"Queen\",\"13\":\"King\",\"14\":\"Ace\"},\"default\":\"Two\"}}},\"suit\":{\"type\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"Suit\",\"options\":{\"values\":{\"Clubs\":1,\"Hearts\":2,\"Spades\":3,\"Diamonds\":4},\"names\":{\"1\":\"Clubs\",\"2\":\"Hearts\",\"3\":\"Spades\",\"4\":\"Diamonds\"},\"default\":\"Clubs\"}}}}}},\"channels\":{\"leader\":\"LeaderActionMessage\",\"pass_channel\":\"CardDecision\",\"single_play\":\"CardDecision\"},\"constructors\":[],\"labels\":[\"lobby\",\"setup\",\"shuffle_and_distribute\",\"pass\",\"start_play\",\"play\",\"score\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:1618");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"players_connected\":0,\"observers_connected\":0,\"ready\":false,\"playing\":false,\"passing_mode\":0,\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__state\":\"lobby\",\"__next_time\":\"75\",\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__connection_id\":1,\"__time\":\"75\",\"__auto_table_row_id\":1,\"players\":{\"1\":{\"id\":1,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__blocked_on\":\"leader\",\"__blocked\":true,\"__seq\":5} need:false in:0");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"players_connected\":1,\"people\":{\"1\":{\"id\":1,\"link\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points\":0,\"leader\":true,\"play_order\":0},\"@o\":[1]},\"players_ordered\":{\"1\":{\"id\":1,\"link\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points\":0,\"leader\":true,\"play_order\":0},\"@o\":[1]}},\"outstanding\":[{\"id\":1,\"channel\":\"leader\",\"array\":false}],\"blockers\":[{\"agent\":\"?\",\"authority\":\"?\"}],\"seq\":4}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"125\"}-->{\"__blocked_on\":\"leader\",\"__seq\":6} need:false in:0");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"players_connected\":1,\"observers_connected\":0,\"people\":{\"1\":{\"id\":1,\"link\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points\":0},\"@o\":[1]},\"players_ordered\":{\"1\":{\"id\":1,\"link\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points\":0},\"@o\":[1]},\"ready\":false,\"playing\":false,\"passing_mode\":0,\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0},\"outstanding\":[],\"blockers\":[{\"agent\":\"?\",\"authority\":\"?\"}],\"seq\":5}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"150\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__state\":\"lobby\",\"__next_time\":\"150\",\"__seq\":7,\"__connection_id\":2,\"__time\":\"150\",\"__auto_table_row_id\":2,\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"2\":{\"id\":2,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}},\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__blocked_on\":\"leader\",\"__seq\":8} need:false in:0");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"players_connected\":2,\"people\":{\"2\":{\"id\":2,\"link\":{\"@t\":1,\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0},\"@o\":[1,2]},\"players_ordered\":{\"2\":{\"id\":2,\"link\":{\"@t\":1,\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0},\"@o\":[1,2]}},\"outstanding\":[],\"blockers\":[{\"agent\":\"rando\",\"authority\":\"random-place\"}],\"seq\":7}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"players_connected\":2,\"people\":{\"2\":{\"id\":2,\"link\":{\"@t\":1,\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0,\"leader\":true,\"play_order\":0},\"@o\":[1,2]},\"players_ordered\":{\"2\":{\"id\":2,\"link\":{\"@t\":1,\"agent\":\"rando\",\"authority\":\"random-place\"},\"points\":0,\"leader\":true,\"play_order\":0},\"@o\":[1,2]}},\"outstanding\":[{\"id\":2,\"channel\":\"leader\",\"array\":false}],\"blockers\":[{\"agent\":\"rando\",\"authority\":\"random-place\"}],\"seq\":7}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"200\"}-->{\"__blocked_on\":\"leader\",\"__seq\":9} need:false in:0");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\nMEMORY:5940");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"deck\":{},\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"1\":{\"id\":1,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0},\"2\":{\"id\":2,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}},\"playing\":false,\"passing_mode\":0,\"player1\":{\"agent\":\"?\",\"authority\":\"?\"},\"player2\":{\"agent\":\"?\",\"authority\":\"?\"},\"player3\":{\"agent\":\"?\",\"authority\":\"?\"},\"player4\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0,\"__state\":\"lobby\",\"__constructed\":true,\"__next_time\":\"150\",\"__last_expire_time\":\"0\",\"__blocked\":true,\"__seq\":9,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":2,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"deck\":{},\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"1\":{\"id\":1,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0},\"2\":{\"id\":2,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}},\"playing\":false,\"passing_mode\":0,\"player1\":{\"agent\":\"?\",\"authority\":\"?\"},\"player2\":{\"agent\":\"?\",\"authority\":\"?\"},\"player3\":{\"agent\":\"?\",\"authority\":\"?\"},\"player4\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0,\"__state\":\"lobby\",\"__constructed\":true,\"__next_time\":\"150\",\"__last_expire_time\":\"0\",\"__blocked\":true,\"__seq\":9,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":2,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"deck\":{},\"owner\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"players\":{\"1\":{\"id\":1,\"link\":{\"agent\":\"?\",\"authority\":\"?\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0},\"2\":{\"id\":2,\"link\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playing\":true,\"points\":0,\"leader\":true,\"play_order\":0}},\"playing\":false,\"passing_mode\":0,\"player1\":{\"agent\":\"?\",\"authority\":\"?\"},\"player2\":{\"agent\":\"?\",\"authority\":\"?\"},\"player3\":{\"agent\":\"?\",\"authority\":\"?\"},\"player4\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"played\":0,\"suit_in_play\":1,\"points_played\":false,\"last_winner\":{\"agent\":\"?\",\"authority\":\"?\"},\"points_awarded\":0,\"__state\":\"lobby\",\"__constructed\":true,\"__next_time\":\"150\",\"__last_expire_time\":\"0\",\"__blocked\":true,\"__seq\":9,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":2,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_RefSilly_6 = null;
  private String get_RefSilly_6() {
    if (cached_RefSilly_6 != null) {
      return cached_RefSilly_6;
    }
    cached_RefSilly_6 = generateTestOutput(true, "RefSilly_6", "./test_code/Demo_RefSilly_success.a");
    return cached_RefSilly_6;
  }

  @Test
  public void testRefSillyEmission() {
    assertEmissionGood(get_RefSilly_6());
  }

  @Test
  public void testRefSillySuccess() {
    assertLivePass(get_RefSilly_6());
  }

  @Test
  public void testRefSillyGoodWillHappy() {
    assertGoodWillHappy(get_RefSilly_6());
  }

  @Test
  public void testRefSillyExceptionFree() {
    assertExceptionFree(get_RefSilly_6());
  }

  @Test
  public void testRefSillyTODOFree() {
    assertTODOFree(get_RefSilly_6());
  }

  @Test
  public void stable_RefSilly_6() {
    String live = get_RefSilly_6();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_RefSilly_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class RefSilly_6 extends LivingDocument {");
    gold.append("\n  private final RxPrincipal owner;");
    gold.append("\n  private final RxString name;");
    gold.append("\n  private final RxString description;");
    gold.append("\n  private final RxInt32 viewers;");
    gold.append("\n  private final RxTable<RTxAddOn> _addons;");
    gold.append("\n  private final RxLazy<NtList<RTxAddOn>> addons;");
    gold.append("\n  private final RxLazy<String> name_uppercase;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += owner.__memory();");
    gold.append("\n    __sum += name.__memory();");
    gold.append("\n    __sum += description.__memory();");
    gold.append("\n    __sum += viewers.__memory();");
    gold.append("\n    __sum += _addons.__memory();");
    gold.append("\n    __sum += addons.__memory();");
    gold.append("\n    __sum += name_uppercase.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public RefSilly_6(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    owner = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    name = new RxString(this, \"\");");
    gold.append("\n    description = new RxString(this, \"\");");
    gold.append("\n    viewers = new RxInt32(this, 0);");
    gold.append("\n    _addons = new RxTable<>(__self, this, \"_addons\", (RxParent __parent) -> new RTxAddOn(__parent), 0);");
    gold.append("\n    addons = new RxLazy<NtList<RTxAddOn>>(this, () -> (_addons.iterate(false).orderBy(true, __ORDER_AddOn_name_a)));");
    gold.append("\n    _addons.__subscribe(addons);");
    gold.append("\n    name_uppercase = new RxLazy<String>(this, () -> (LibString.upper(name.get())));");
    gold.append("\n    name.__subscribe(name_uppercase);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"description\":");
    gold.append("\n            description.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"viewers\":");
    gold.append("\n            viewers.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_addons\":");
    gold.append("\n            _addons.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"owner\":");
    gold.append("\n            owner.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"description\":");
    gold.append("\n            description.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"viewers\":");
    gold.append("\n            viewers.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_addons\":");
    gold.append("\n            _addons.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"owner\");");
    gold.append("\n    owner.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n    name.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"description\");");
    gold.append("\n    description.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"viewers\");");
    gold.append("\n    viewers.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_addons\");");
    gold.append("\n    _addons.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    owner.__commit(\"owner\", __forward, __reverse);");
    gold.append("\n    name.__commit(\"name\", __forward, __reverse);");
    gold.append("\n    description.__commit(\"description\", __forward, __reverse);");
    gold.append("\n    viewers.__commit(\"viewers\", __forward, __reverse);");
    gold.append("\n    _addons.__commit(\"_addons\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    owner.__revert();");
    gold.append("\n    name.__revert();");
    gold.append("\n    description.__revert();");
    gold.append("\n    viewers.__revert();");
    gold.append("\n    _addons.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRefSilly_6 implements DeltaNode {");
    gold.append("\n    private DPrincipal __downer;");
    gold.append("\n    private DString __dname;");
    gold.append("\n    private DString __ddescription;");
    gold.append("\n    private DInt32 __dviewers;");
    gold.append("\n    private int __gaddons;");
    gold.append("\n    private DRecordList<DeltaRTxAddOn> __daddons;");
    gold.append("\n    private int __gname_uppercase;");
    gold.append("\n    private DString __dname_uppercase;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRefSilly_6() {");
    gold.append("\n      __downer = new DPrincipal();");
    gold.append("\n      __dname = new DString();");
    gold.append("\n      __ddescription = new DString();");
    gold.append("\n      __dviewers = new DInt32();");
    gold.append("\n      __gaddons = -1;");
    gold.append("\n      __daddons = new DRecordList<DeltaRTxAddOn>();");
    gold.append("\n      __gname_uppercase = -1;");
    gold.append("\n      __dname_uppercase = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __downer.__memory();");
    gold.append("\n      __sum += __dname.__memory();");
    gold.append("\n      __sum += __ddescription.__memory();");
    gold.append("\n      __sum += __dviewers.__memory();");
    gold.append("\n      __sum += __daddons.__memory();");
    gold.append("\n      __sum += __dname_uppercase.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RefSilly_6 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __downer.show(__item.owner.get(), __obj.planField(\"owner\"));");
    gold.append("\n      __dname.show(__item.name.get(), __obj.planField(\"name\"));");
    gold.append("\n      __ddescription.show(__item.description.get(), __obj.planField(\"description\"));");
    gold.append("\n      __dviewers.show(__item.viewers.get(), __obj.planField(\"viewers\"));");
    gold.append("\n      if (__gaddons != __item.addons.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list0 = __obj.planField(\"addons\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxAddOn> __deltaList1 = __daddons;");
    gold.append("\n          DRecordList<DeltaRTxAddOn>.Walk __deltaListWalker2 = __deltaList1.begin();");
    gold.append("\n          for (RTxAddOn __listElement3 : __item.addons.get()) {");
    gold.append("\n            DeltaRTxAddOn __deltaElement4 = __deltaList1.getPrior(__listElement3.__id(), () -> new DeltaRTxAddOn());");
    gold.append("\n            __deltaElement4.show(__listElement3, __list0.planField(__listElement3.__id()));");
    gold.append("\n            __deltaListWalker2.next(__listElement3.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker2.end(__list0);");
    gold.append("\n          __list0.end();");
    gold.append("\n        }");
    gold.append("\n        __gaddons = __item.addons.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gname_uppercase != __item.name_uppercase.getGeneration()) {");
    gold.append("\n        __dname_uppercase.show(__item.name_uppercase.get(), __obj.planField(\"name_uppercase\"));");
    gold.append("\n        __gname_uppercase = __item.name_uppercase.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __downer.clear();");
    gold.append("\n      __dname.clear();");
    gold.append("\n      __ddescription.clear();");
    gold.append("\n      __dviewers.clear();");
    gold.append("\n      __daddons.clear();");
    gold.append("\n      __dname_uppercase.clear();");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    RefSilly_6 __self = this;");
    gold.append("\n    DeltaRefSilly_6 __state = new DeltaRefSilly_6();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_AddOn = new String[] {};");
    gold.append("\n  private class RTxAddOn extends RxRecordBase<RTxAddOn> {");
    gold.append("\n    private final RxString name;");
    gold.append("\n    private final RxString description;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxAddOn(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      name = new RxString(this, \"\");");
    gold.append("\n      description = new RxString(this, \"\");");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += name.__memory();");
    gold.append("\n      __sum += description.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_AddOn;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"name\":");
    gold.append("\n              name.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"description\":");
    gold.append("\n              description.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"name\":");
    gold.append("\n              name.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"description\":");
    gold.append("\n              description.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n      name.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"description\");");
    gold.append("\n      description.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        name.__commit(\"name\", __forward, __reverse);");
    gold.append("\n        description.__commit(\"description\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        name.__revert();");
    gold.append("\n        description.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"AddOn\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxAddOn implements DeltaNode {");
    gold.append("\n    private DString __dname;");
    gold.append("\n    private DString __ddescription;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxAddOn() {");
    gold.append("\n      __dname = new DString();");
    gold.append("\n      __ddescription = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dname.__memory();");
    gold.append("\n      __sum += __ddescription.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxAddOn __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dname.show(__item.name.get(), __obj.planField(\"name\"));");
    gold.append("\n      __ddescription.show(__item.description.get(), __obj.planField(\"description\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dname.clear();");
    gold.append("\n      __ddescription.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxArg extends NtMessageBase {");
    gold.append("\n    private String description = \"\";");
    gold.append("\n    private String name = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"description\");");
    gold.append("\n      __hash.hashString(this.description);");
    gold.append("\n      __hash.hashString(\"name\");");
    gold.append("\n      __hash.hashString(this.name);");
    gold.append("\n      __hash.hashString(\"Arg\");");
    gold.append("\n    }");
    gold.append("\n    private RTxArg(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"description\":");
    gold.append("\n              this.description = __reader.readString();");
    gold.append("\n              break;");
    gold.append("\n            case \"name\":");
    gold.append("\n              this.name = __reader.readString();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"description\");");
    gold.append("\n      __writer.writeString(description);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n      __writer.writeString(name);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxArg() {}");
    gold.append("\n    private RTxArg(String description, String name) {");
    gold.append("\n      this.description = description;");
    gold.append("\n      this.name = name;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxArg implements DeltaNode {");
    gold.append("\n    private DString __dname;");
    gold.append("\n    private DString __ddescription;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxArg() {");
    gold.append("\n      __dname = new DString();");
    gold.append("\n      __ddescription = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dname.__memory();");
    gold.append("\n      __sum += __ddescription.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxArg __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dname.show(__item.name, __obj.planField(\"name\"));");
    gold.append("\n      __ddescription.show(__item.description, __obj.planField(\"description\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dname.clear();");
    gold.append("\n      __ddescription.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxAddAddOn extends NtMessageBase {");
    gold.append("\n    private String description = \"\";");
    gold.append("\n    private String name = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"description\");");
    gold.append("\n      __hash.hashString(this.description);");
    gold.append("\n      __hash.hashString(\"name\");");
    gold.append("\n      __hash.hashString(this.name);");
    gold.append("\n      __hash.hashString(\"AddAddOn\");");
    gold.append("\n    }");
    gold.append("\n    private RTxAddAddOn(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"description\":");
    gold.append("\n              this.description = __reader.readString();");
    gold.append("\n              break;");
    gold.append("\n            case \"name\":");
    gold.append("\n              this.name = __reader.readString();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"description\");");
    gold.append("\n      __writer.writeString(description);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n      __writer.writeString(name);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxAddAddOn() {}");
    gold.append("\n    private RTxAddAddOn(String description, String name) {");
    gold.append("\n      this.description = description;");
    gold.append("\n      this.name = name;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxAddAddOn implements DeltaNode {");
    gold.append("\n    private DString __dname;");
    gold.append("\n    private DString __ddescription;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxAddAddOn() {");
    gold.append("\n      __dname = new DString();");
    gold.append("\n      __ddescription = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dname.__memory();");
    gold.append("\n      __sum += __ddescription.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxAddAddOn __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dname.show(__item.name, __obj.planField(\"name\"));");
    gold.append("\n      __ddescription.show(__item.description, __obj.planField(\"description\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dname.clear();");
    gold.append("\n      __ddescription.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxNothing extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"Nothing\");");
    gold.append("\n    }");
    gold.append("\n    private RTxNothing(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxNothing() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxNothing implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxNothing() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxNothing __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  private void handleChannelMessage_create_new_add_on(CoreRequestContext __context, NtPrincipal __who, RTxAddAddOn arg) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxAddOn> _AutoRef5 = _addons;");
    gold.append("\n      RTxAddAddOn _AutoExpr7 = arg;");
    gold.append("\n      RTxAddOn _CreateRef6 = _AutoRef5.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef6.description.set(_AutoExpr7.description);");
    gold.append("\n      _CreateRef6.name.set(_AutoExpr7.name);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_delete(CoreRequestContext __context, NtPrincipal __who, RTxNothing arg) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(1);");
    gold.append("\n    if ((owner.get()).equals(__who)) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(2);");
    gold.append("\n      __destroyDocument();");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"create_new_add_on\":");
    gold.append("\n      case \"delete\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"create_new_add_on\":");
    gold.append("\n        handleChannelMessage_create_new_add_on(__context, __context.who, (RTxAddAddOn) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"delete\":");
    gold.append("\n        handleChannelMessage_delete(__context, __context.who, (RTxNothing) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"create_new_add_on\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_create_new_add_on(__task.context(__getKey()), __task.who, (RTxAddAddOn)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"delete\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_delete(__task.context(__getKey()), __task.who, (RTxNothing)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"create_new_add_on\":");
    gold.append("\n        return new RTxAddAddOn(__reader);");
    gold.append("\n      case \"delete\":");
    gold.append("\n        return new RTxNothing(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(3);");
    gold.append("\n    viewers.bumpUpPost();");
    gold.append("\n    __track(4);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public void __onDisconnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(5);");
    gold.append("\n    viewers.bumpDownPost();");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {");
    gold.append("\n    __onDisconnected__0(__cvalue, __cvalue.who);");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, RTxArg arg) {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(6);");
    gold.append("\n    owner.set(__who);");
    gold.append("\n    __track(7);");
    gold.append("\n    name.set(arg.name);");
    gold.append("\n    __track(8);");
    gold.append("\n    description.set(arg.description);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    return new RTxArg(__reader);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object_pre_cast) {");
    gold.append("\n    RTxArg __object = (RTxArg) __object_pre_cast;");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxAddOn> __ORDER_AddOn_name_a = new Comparator<RTxAddOn>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxAddOn __a, RTxAddOn __b) {");
    gold.append("\n      return __a.name.compareTo(__b.name);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"owner\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"name\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"description\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"viewers\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"_addons\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"AddOn\"}},\"addons\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_record\",\"name\":\"AddOn\",\"fields\":{\"name\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"description\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}}}},\"privacy\":\"public\"},\"name_uppercase\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"AddOn\":{\"nature\":\"reactive_record\",\"name\":\"AddOn\",\"fields\":{\"name\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"description\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}}},\"Arg\":{\"nature\":\"native_message\",\"name\":\"Arg\",\"anonymous\":false,\"fields\":{\"name\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"description\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"AddAddOn\":{\"nature\":\"native_message\",\"name\":\"AddAddOn\",\"anonymous\":false,\"fields\":{\"name\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"description\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"Nothing\":{\"nature\":\"native_message\",\"name\":\"Nothing\",\"anonymous\":false,\"fields\":{}}},\"channels\":{\"create_new_add_on\":\"AddAddOn\",\"delete\":\"Nothing\"},\"constructors\":[\"arg\"],\"constructor\":\"Arg\",\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"name\":\"\",\"description\":\"\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:4");
    gold.append("\nMEMORY:806");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"name\":\"\",\"description\":\"\",\"viewers\":0,\"name_uppercase\":\"\"},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"viewers\":1,\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"viewers\":1},\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"owner\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"name\":\"\",\"description\":\"\",\"viewers\":1,\"name_uppercase\":\"\"},\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"viewers\":2,\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"viewers\":2},\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"viewers\":2},\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:1316");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"name\":\"\",\"description\":\"\",\"viewers\":2,\"_addons\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"name\":\"\",\"description\":\"\",\"viewers\":2,\"_addons\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"owner\":{\"agent\":\"?\",\"authority\":\"?\"},\"name\":\"\",\"description\":\"\",\"viewers\":2,\"_addons\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_ReferenceIntro_7 = null;
  private String get_ReferenceIntro_7() {
    if (cached_ReferenceIntro_7 != null) {
      return cached_ReferenceIntro_7;
    }
    cached_ReferenceIntro_7 = generateTestOutput(true, "ReferenceIntro_7", "./test_code/Demo_ReferenceIntro_success.a");
    return cached_ReferenceIntro_7;
  }

  @Test
  public void testReferenceIntroEmission() {
    assertEmissionGood(get_ReferenceIntro_7());
  }

  @Test
  public void testReferenceIntroSuccess() {
    assertLivePass(get_ReferenceIntro_7());
  }

  @Test
  public void testReferenceIntroGoodWillHappy() {
    assertGoodWillHappy(get_ReferenceIntro_7());
  }

  @Test
  public void testReferenceIntroExceptionFree() {
    assertExceptionFree(get_ReferenceIntro_7());
  }

  @Test
  public void testReferenceIntroTODOFree() {
    assertTODOFree(get_ReferenceIntro_7());
  }

  @Test
  public void stable_ReferenceIntro_7() {
    String live = get_ReferenceIntro_7();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_ReferenceIntro_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class ReferenceIntro_7 extends LivingDocument {");
    gold.append("\n  private final RxPrincipal creator;");
    gold.append("\n  private final RxInt32 x;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += creator.__memory();");
    gold.append("\n    __sum += x.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public ReferenceIntro_7(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    creator = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    x = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"creator\":");
    gold.append("\n            creator.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"creator\":");
    gold.append("\n            creator.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"creator\");");
    gold.append("\n    creator.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    creator.__commit(\"creator\", __forward, __reverse);");
    gold.append("\n    x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    creator.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaReferenceIntro_7 implements DeltaNode {");
    gold.append("\n    private DPrincipal __dcreator;");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaReferenceIntro_7() {");
    gold.append("\n      __dcreator = new DPrincipal();");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dcreator.__memory();");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(ReferenceIntro_7 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dcreator.show(__item.creator.get(), __obj.planField(\"creator\"));");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dcreator.clear();");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    ReferenceIntro_7 __self = this;");
    gold.append("\n    DeltaReferenceIntro_7 __state = new DeltaReferenceIntro_7();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxConsXYZ extends NtMessageBase {");
    gold.append("\n    private int x = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"x\");");
    gold.append("\n      __hash.hashInteger(this.x);");
    gold.append("\n      __hash.hashString(\"ConsXYZ\");");
    gold.append("\n    }");
    gold.append("\n    private RTxConsXYZ(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"x\":");
    gold.append("\n              this.x = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      __writer.writeInteger(x);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxConsXYZ() {}");
    gold.append("\n    private RTxConsXYZ(int x) {");
    gold.append("\n      this.x = x;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxConsXYZ implements DeltaNode {");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxConsXYZ() {");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxConsXYZ __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dx.show(__item.x, __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxNothing extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"Nothing\");");
    gold.append("\n    }");
    gold.append("\n    private RTxNothing(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxNothing() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxNothing implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxNothing() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxNothing __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxParam extends NtMessageBase {");
    gold.append("\n    private int z = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"z\");");
    gold.append("\n      __hash.hashInteger(this.z);");
    gold.append("\n      __hash.hashString(\"Param\");");
    gold.append("\n    }");
    gold.append("\n    private RTxParam(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"z\":");
    gold.append("\n              this.z = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"z\");");
    gold.append("\n      __writer.writeInteger(z);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxParam() {}");
    gold.append("\n    private RTxParam(int z) {");
    gold.append("\n      this.z = z;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxParam implements DeltaNode {");
    gold.append("\n    private DInt32 __dz;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxParam() {");
    gold.append("\n      __dz = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dz.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxParam __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dz.show(__item.z, __obj.planField(\"z\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dz.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  private void handleChannelMessage_square(CoreRequestContext __context, NtPrincipal __who, RTxNothing n) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    x.set(x.get() * x.get());");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_zero(CoreRequestContext __context, NtPrincipal __who, RTxNothing n) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(1);");
    gold.append("\n    x.set(0);");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_add(CoreRequestContext __context, NtPrincipal __who, RTxParam p) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    x.opAddTo(p.z);");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  private void handleChannelMessage_kill(CoreRequestContext __context, NtPrincipal __who, RTxNothing n) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(3);");
    gold.append("\n    if ((__who).equals(creator.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(4);");
    gold.append("\n      __destroyDocument();");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"zero\":");
    gold.append("\n      case \"add\":");
    gold.append("\n      case \"square\":");
    gold.append("\n      case \"kill\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"zero\":");
    gold.append("\n        handleChannelMessage_zero(__context, __context.who, (RTxNothing) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"add\":");
    gold.append("\n        handleChannelMessage_add(__context, __context.who, (RTxParam) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"square\":");
    gold.append("\n        handleChannelMessage_square(__context, __context.who, (RTxNothing) __message);");
    gold.append("\n        return;");
    gold.append("\n      case \"kill\":");
    gold.append("\n        handleChannelMessage_kill(__context, __context.who, (RTxNothing) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"square\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_square(__task.context(__getKey()), __task.who, (RTxNothing)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"zero\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_zero(__task.context(__getKey()), __task.who, (RTxNothing)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"add\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_add(__task.context(__getKey()), __task.who, (RTxParam)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      case \"kill\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_kill(__task.context(__getKey()), __task.who, (RTxNothing)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"square\":");
    gold.append("\n        return new RTxNothing(__reader);");
    gold.append("\n      case \"zero\":");
    gold.append("\n        return new RTxNothing(__reader);");
    gold.append("\n      case \"add\":");
    gold.append("\n        return new RTxParam(__reader);");
    gold.append("\n      case \"kill\":");
    gold.append("\n        return new RTxNothing(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return LibPrincipal.isAdamaDeveloper(__who);");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(5);");
    gold.append("\n    return (__who).equals(creator.get());");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, RTxConsXYZ c) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(6);");
    gold.append("\n    creator.set(__who);");
    gold.append("\n    __track(7);");
    gold.append("\n    x.set(c.x);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    return new RTxConsXYZ(__reader);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object_pre_cast) {");
    gold.append("\n    RTxConsXYZ __object = (RTxConsXYZ) __object_pre_cast;");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"creator\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"ConsXYZ\":{\"nature\":\"native_message\",\"name\":\"ConsXYZ\",\"anonymous\":false,\"fields\":{\"x\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"Nothing\":{\"nature\":\"native_message\",\"name\":\"Nothing\",\"anonymous\":false,\"fields\":{}},\"Param\":{\"nature\":\"native_message\",\"name\":\"Param\",\"anonymous\":false,\"fields\":{\"z\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}}},\"channels\":{\"zero\":\"Nothing\",\"add\":\"Param\",\"square\":\"Nothing\",\"kill\":\"Nothing\"},\"constructors\":[\"c\"],\"constructor\":\"ConsXYZ\",\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:3");
    gold.append("\nMEMORY:496");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"creator\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"x\":0},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"creator\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"x\":0},\"seq\":6}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"125\"}-->{\"__messages\":null,\"__seq\":7,\"__entropy\":\"5082315122564986995\",\"__time\":\"125\"} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":7}");
    gold.append("\n+ RANDO DELTA:{\"seq\":7}");
    gold.append("\nMEMORY:766");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"creator\":{\"agent\":\"?\",\"authority\":\"?\"},\"x\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"5082315122564986995\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"125\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"creator\":{\"agent\":\"?\",\"authority\":\"?\"},\"x\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"5082315122564986995\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"125\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}}");
    gold.append("\n{\"creator\":{\"agent\":\"?\",\"authority\":\"?\"},\"x\":0,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":7,\"__entropy\":\"5082315122564986995\",\"__auto_future_id\":0,\"__connection_id\":1,\"__message_id\":0,\"__time\":\"125\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_ServiceHandler_8 = null;
  private String get_ServiceHandler_8() {
    if (cached_ServiceHandler_8 != null) {
      return cached_ServiceHandler_8;
    }
    cached_ServiceHandler_8 = generateTestOutput(true, "ServiceHandler_8", "./test_code/Demo_ServiceHandler_success.a");
    return cached_ServiceHandler_8;
  }

  @Test
  public void testServiceHandlerEmission() {
    assertEmissionGood(get_ServiceHandler_8());
  }

  @Test
  public void testServiceHandlerSuccess() {
    assertLivePass(get_ServiceHandler_8());
  }

  @Test
  public void testServiceHandlerGoodWillHappy() {
    assertGoodWillHappy(get_ServiceHandler_8());
  }

  @Test
  public void testServiceHandlerExceptionFree() {
    assertExceptionFree(get_ServiceHandler_8());
  }

  @Test
  public void testServiceHandlerTODOFree() {
    assertTODOFree(get_ServiceHandler_8());
  }

  @Test
  public void stable_ServiceHandler_8() {
    String live = get_ServiceHandler_8();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_ServiceHandler_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class ServiceHandler_8 extends LivingDocument {");
    gold.append("\n  private final RxInt32 x;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += x.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public ServiceHandler_8(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaServiceHandler_8 implements DeltaNode {");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaServiceHandler_8() {");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(ServiceHandler_8 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    ServiceHandler_8 __self = this;");
    gold.append("\n    DeltaServiceHandler_8 __state = new DeltaServiceHandler_8();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxM extends NtMessageBase {");
    gold.append("\n    private int dx = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"dx\");");
    gold.append("\n      __hash.hashInteger(this.dx);");
    gold.append("\n      __hash.hashString(\"M\");");
    gold.append("\n    }");
    gold.append("\n    private RTxM(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"dx\":");
    gold.append("\n              this.dx = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"dx\");");
    gold.append("\n      __writer.writeInteger(dx);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxM() {}");
    gold.append("\n    private RTxM(int dx) {");
    gold.append("\n      this.dx = dx;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxM implements DeltaNode {");
    gold.append("\n    private DInt32 __ddx;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxM() {");
    gold.append("\n      __ddx = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __ddx.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxM __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __ddx.show(__item.dx, __obj.planField(\"dx\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __ddx.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  private void handleChannelMessage_change(CoreRequestContext __context, NtPrincipal __who, RTxM m) throws AbortMessageException {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(0);");
    gold.append("\n    x.opAddTo(m.dx);");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"change\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"change\":");
    gold.append("\n        handleChannelMessage_change(__context, __context.who, (RTxM) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"change\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_change(__task.context(__getKey()), __task.who, (RTxM)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"change\":");
    gold.append("\n        return new RTxM(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(1);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    x.set(123);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"M\":{\"nature\":\"native_message\",\"name\":\"M\",\"anonymous\":false,\"fields\":{\"dx\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}}},\"channels\":{\"change\":\"M\"},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"x\":123,\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:2");
    gold.append("\nMEMORY:432");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"x\":123},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"x\":123},\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:630");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"x\":123,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x\":123,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"x\":123,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_Spreadsheet_9 = null;
  private String get_Spreadsheet_9() {
    if (cached_Spreadsheet_9 != null) {
      return cached_Spreadsheet_9;
    }
    cached_Spreadsheet_9 = generateTestOutput(true, "Spreadsheet_9", "./test_code/Demo_Spreadsheet_success.a");
    return cached_Spreadsheet_9;
  }

  @Test
  public void testSpreadsheetEmission() {
    assertEmissionGood(get_Spreadsheet_9());
  }

  @Test
  public void testSpreadsheetSuccess() {
    assertLivePass(get_Spreadsheet_9());
  }

  @Test
  public void testSpreadsheetGoodWillHappy() {
    assertGoodWillHappy(get_Spreadsheet_9());
  }

  @Test
  public void testSpreadsheetExceptionFree() {
    assertExceptionFree(get_Spreadsheet_9());
  }

  @Test
  public void testSpreadsheetTODOFree() {
    assertTODOFree(get_Spreadsheet_9());
  }

  @Test
  public void stable_Spreadsheet_9() {
    String live = get_Spreadsheet_9();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_Spreadsheet_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class Spreadsheet_9 extends LivingDocument {");
    gold.append("\n  private final RxInt32 x;");
    gold.append("\n  private final RxInt32 y;");
    gold.append("\n  private final RxDouble d;");
    gold.append("\n  private final RxBoolean b;");
    gold.append("\n  private final RxString name;");
    gold.append("\n  private final RxLazy<Integer> z;");
    gold.append("\n  private final RxLazy<Double> z2;");
    gold.append("\n  private final RxLazy<String> namex2;");
    gold.append("\n  private final RxLazy<Integer> name_len;");
    gold.append("\n  private final RxLazy<Boolean> bz;");
    gold.append("\n  private final RxLazy<Boolean> baz;");
    gold.append("\n  private final RxLazy<Boolean> baz2;");
    gold.append("\n  private final RxDouble c1;");
    gold.append("\n  private final RxDouble c2;");
    gold.append("\n  private final RxInt32 s;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += x.__memory();");
    gold.append("\n    __sum += y.__memory();");
    gold.append("\n    __sum += d.__memory();");
    gold.append("\n    __sum += b.__memory();");
    gold.append("\n    __sum += name.__memory();");
    gold.append("\n    __sum += z.__memory();");
    gold.append("\n    __sum += z2.__memory();");
    gold.append("\n    __sum += namex2.__memory();");
    gold.append("\n    __sum += name_len.__memory();");
    gold.append("\n    __sum += bz.__memory();");
    gold.append("\n    __sum += baz.__memory();");
    gold.append("\n    __sum += baz2.__memory();");
    gold.append("\n    __sum += c1.__memory();");
    gold.append("\n    __sum += c2.__memory();");
    gold.append("\n    __sum += s.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public Spreadsheet_9(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    x = new RxInt32(this, 0);");
    gold.append("\n    y = new RxInt32(this, 0);");
    gold.append("\n    d = new RxDouble(this, 0.0);");
    gold.append("\n    b = new RxBoolean(this, false);");
    gold.append("\n    name = new RxString(this, \"\");");
    gold.append("\n    z = new RxLazy<Integer>(this, () -> (x.get() + y.get()));");
    gold.append("\n    x.__subscribe(z);");
    gold.append("\n    y.__subscribe(z);");
    gold.append("\n    z2 = new RxLazy<Double>(this, () -> ((b.get() ? x.get() : y.get()) * d.get()));");
    gold.append("\n    b.__subscribe(z2);");
    gold.append("\n    x.__subscribe(z2);");
    gold.append("\n    y.__subscribe(z2);");
    gold.append("\n    d.__subscribe(z2);");
    gold.append("\n    namex2 = new RxLazy<String>(this, () -> (name.get() + name.get()));");
    gold.append("\n    name.__subscribe(namex2);");
    gold.append("\n    name_len = new RxLazy<Integer>(this, () -> (namex2.get().length()));");
    gold.append("\n    namex2.__subscribe(name_len);");
    gold.append("\n    bz = new RxLazy<Boolean>(this, () -> (name_len.get() > 100));");
    gold.append("\n    name_len.__subscribe(bz);");
    gold.append("\n    baz = new RxLazy<Boolean>(this, () -> (!bz.get()));");
    gold.append("\n    bz.__subscribe(baz);");
    gold.append("\n    baz2 = new RxLazy<Boolean>(this, () -> (!baz.get()));");
    gold.append("\n    baz.__subscribe(baz2);");
    gold.append("\n    c1 = new RxDouble(this, 0.0);");
    gold.append("\n    c2 = new RxDouble(this, 0.0);");
    gold.append("\n    s = new RxInt32(this, 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            y.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"d\":");
    gold.append("\n            d.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"b\":");
    gold.append("\n            b.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"c1\":");
    gold.append("\n            c1.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"c2\":");
    gold.append("\n            c2.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"s\":");
    gold.append("\n            s.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"x\":");
    gold.append("\n            x.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"y\":");
    gold.append("\n            y.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"d\":");
    gold.append("\n            d.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"b\":");
    gold.append("\n            b.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"name\":");
    gold.append("\n            name.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"c1\":");
    gold.append("\n            c1.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"c2\":");
    gold.append("\n            c2.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"s\":");
    gold.append("\n            s.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n    x.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n    y.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"d\");");
    gold.append("\n    d.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"b\");");
    gold.append("\n    b.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"name\");");
    gold.append("\n    name.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"c1\");");
    gold.append("\n    c1.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"c2\");");
    gold.append("\n    c2.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"s\");");
    gold.append("\n    s.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n    y.__commit(\"y\", __forward, __reverse);");
    gold.append("\n    d.__commit(\"d\", __forward, __reverse);");
    gold.append("\n    b.__commit(\"b\", __forward, __reverse);");
    gold.append("\n    name.__commit(\"name\", __forward, __reverse);");
    gold.append("\n    c1.__commit(\"c1\", __forward, __reverse);");
    gold.append("\n    c2.__commit(\"c2\", __forward, __reverse);");
    gold.append("\n    s.__commit(\"s\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    x.__revert();");
    gold.append("\n    y.__revert();");
    gold.append("\n    d.__revert();");
    gold.append("\n    b.__revert();");
    gold.append("\n    name.__revert();");
    gold.append("\n    c1.__revert();");
    gold.append("\n    c2.__revert();");
    gold.append("\n    s.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaSpreadsheet_9 implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaSpreadsheet_9() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(Spreadsheet_9 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    Spreadsheet_9 __self = this;");
    gold.append("\n    DeltaSpreadsheet_9 __state = new DeltaSpreadsheet_9();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private void __step_next() {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(0);");
    gold.append("\n    name.set(\"12345678901234567890123456789012345678901234567890 x \");");
    gold.append("\n    __track(1);");
    gold.append("\n    d.set(3.14);");
    gold.append("\n    __track(2);");
    gold.append("\n    b.set(false);");
    gold.append("\n    __track(3);");
    gold.append("\n    x.set(5);");
    gold.append("\n    __track(4);");
    gold.append("\n    y.set(10);");
    gold.append("\n    __track(5);");
    gold.append("\n    __transitionStateMachine(\"end\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_end() {");
    gold.append("\n    __code_cost += 9;");
    gold.append("\n    __track(6);");
    gold.append("\n    x.set(0);");
    gold.append("\n    __track(7);");
    gold.append("\n    y.set(1);");
    gold.append("\n    __track(8);");
    gold.append("\n    s.set(z.get());");
    gold.append("\n    __track(9);");
    gold.append("\n    d.set(3.14);");
    gold.append("\n    __track(10);");
    gold.append("\n    b.set(true);");
    gold.append("\n    __track(11);");
    gold.append("\n    c1.set(z2.get());");
    gold.append("\n    __track(12);");
    gold.append("\n    b.set(false);");
    gold.append("\n    __track(13);");
    gold.append("\n    c2.set(z2.get());");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"next\":");
    gold.append("\n        __step_next();");
    gold.append("\n        return;");
    gold.append("\n      case \"end\":");
    gold.append("\n        __step_end();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 7;");
    gold.append("\n    __track(14);");
    gold.append("\n    x.set(2);");
    gold.append("\n    __track(15);");
    gold.append("\n    y.set(3);");
    gold.append("\n    __track(16);");
    gold.append("\n    d.set(1.5);");
    gold.append("\n    __track(17);");
    gold.append("\n    b.set(true);");
    gold.append("\n    __track(18);");
    gold.append("\n    name.set(\"Jack Jillian\");");
    gold.append("\n    __track(19);");
    gold.append("\n    __transitionStateMachine(\"next\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}},\"d\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"}},\"b\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"bool\"}},\"name\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"}},\"z\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"z2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"namex2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"}},\"name_len\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"bz\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"}},\"baz\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"}},\"baz2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"}},\"c1\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"}},\"c2\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"}},\"s\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[\"next\",\"end\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__state\":\"end\",\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"x\":5,\"y\":10,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"__messages\":null,\"__seq\":1} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__state\":\"\",\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\",\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"c1\":0.0,\"c2\":3.14,\"s\":1} need:false in:-25");
    gold.append("\nCPU:23");
    gold.append("\nMEMORY:1286");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:1404");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"c1\":0.0,\"c2\":3.14,\"s\":1,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"c1\":0.0,\"c2\":3.14,\"s\":1,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{}}");
    gold.append("\n{\"x\":0,\"y\":1,\"d\":3.14,\"b\":false,\"name\":\"12345678901234567890123456789012345678901234567890 x \",\"c1\":0.0,\"c2\":3.14,\"s\":1,\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_TicTacToe_10 = null;
  private String get_TicTacToe_10() {
    if (cached_TicTacToe_10 != null) {
      return cached_TicTacToe_10;
    }
    cached_TicTacToe_10 = generateTestOutput(true, "TicTacToe_10", "./test_code/Demo_TicTacToe_success.a");
    return cached_TicTacToe_10;
  }

  @Test
  public void testTicTacToeEmission() {
    assertEmissionGood(get_TicTacToe_10());
  }

  @Test
  public void testTicTacToeSuccess() {
    assertLivePass(get_TicTacToe_10());
  }

  @Test
  public void testTicTacToeGoodWillHappy() {
    assertGoodWillHappy(get_TicTacToe_10());
  }

  @Test
  public void testTicTacToeExceptionFree() {
    assertExceptionFree(get_TicTacToe_10());
  }

  @Test
  public void testTicTacToeTODOFree() {
    assertTODOFree(get_TicTacToe_10());
  }

  @Test
  public void stable_TicTacToe_10() {
    String live = get_TicTacToe_10();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_TicTacToe_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class TicTacToe_10 extends LivingDocument {");
    gold.append("\n  private final RxPrincipal playerX;");
    gold.append("\n  private final RxPrincipal playerO;");
    gold.append("\n  private final RxPrincipal current;");
    gold.append("\n  private final RxInt32 wins_X;");
    gold.append("\n  private final RxInt32 wins_O;");
    gold.append("\n  private final RxInt32 stalemates;");
    gold.append("\n  private final RxTable<RTxSquare> _squares;");
    gold.append("\n  private final RxLazy<NtList<RTxSquare>> board;");
    gold.append("\n  private final RxGuard ___your_role;");
    gold.append("\n  private final RxGuard ___your_turn;");
    gold.append("\n  private final RxGuard ___your_wins;");
    gold.append("\n  public String __COMPUTE_your_role(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return ((playerX.get()).equals(__who) ? \"X\" : ((playerO.get()).equals(__who) ? \"O\" : \"Observer\"));");
    gold.append("\n  }");
    gold.append("\n  public boolean __COMPUTE_your_turn(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return (current.get()).equals(__who);");
    gold.append("\n  }");
    gold.append("\n  public int __COMPUTE_your_wins(NtPrincipal __who, RTx__ViewerType __viewer) {");
    gold.append("\n    return ((playerX.get()).equals(__who) ? wins_X.get() : ((playerO.get()).equals(__who) ? wins_O.get() : 0));");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += playerX.__memory();");
    gold.append("\n    __sum += playerO.__memory();");
    gold.append("\n    __sum += current.__memory();");
    gold.append("\n    __sum += wins_X.__memory();");
    gold.append("\n    __sum += wins_O.__memory();");
    gold.append("\n    __sum += stalemates.__memory();");
    gold.append("\n    __sum += _squares.__memory();");
    gold.append("\n    __sum += board.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public TicTacToe_10(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    playerX = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    playerO = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    current = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n    wins_X = new RxInt32(this, 0);");
    gold.append("\n    wins_O = new RxInt32(this, 0);");
    gold.append("\n    stalemates = new RxInt32(this, 0);");
    gold.append("\n    _squares = new RxTable<>(__self, this, \"_squares\", (RxParent __parent) -> new RTxSquare(__parent), 0);");
    gold.append("\n    board = new RxLazy<NtList<RTxSquare>>(this, () -> (_squares.iterate(true)));");
    gold.append("\n    _squares.__subscribe(board);");
    gold.append("\n    ___your_role =  new RxGuard();");
    gold.append("\n    playerX.__subscribe(___your_role);");
    gold.append("\n    playerO.__subscribe(___your_role);");
    gold.append("\n    ___your_turn =  new RxGuard();");
    gold.append("\n    current.__subscribe(___your_turn);");
    gold.append("\n    ___your_wins =  new RxGuard();");
    gold.append("\n    playerX.__subscribe(___your_wins);");
    gold.append("\n    wins_X.__subscribe(___your_wins);");
    gold.append("\n    playerO.__subscribe(___your_wins);");
    gold.append("\n    wins_O.__subscribe(___your_wins);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"playerX\":");
    gold.append("\n            playerX.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"playerO\":");
    gold.append("\n            playerO.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current\":");
    gold.append("\n            current.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"wins_X\":");
    gold.append("\n            wins_X.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"wins_O\":");
    gold.append("\n            wins_O.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"stalemates\":");
    gold.append("\n            stalemates.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_squares\":");
    gold.append("\n            _squares.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"playerX\":");
    gold.append("\n            playerX.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"playerO\":");
    gold.append("\n            playerO.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"current\":");
    gold.append("\n            current.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"wins_X\":");
    gold.append("\n            wins_X.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"wins_O\":");
    gold.append("\n            wins_O.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"stalemates\":");
    gold.append("\n            stalemates.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"_squares\":");
    gold.append("\n            _squares.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"playerX\");");
    gold.append("\n    playerX.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"playerO\");");
    gold.append("\n    playerO.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"current\");");
    gold.append("\n    current.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"wins_X\");");
    gold.append("\n    wins_X.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"wins_O\");");
    gold.append("\n    wins_O.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"stalemates\");");
    gold.append("\n    stalemates.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_squares\");");
    gold.append("\n    _squares.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    playerX.__commit(\"playerX\", __forward, __reverse);");
    gold.append("\n    playerO.__commit(\"playerO\", __forward, __reverse);");
    gold.append("\n    current.__commit(\"current\", __forward, __reverse);");
    gold.append("\n    wins_X.__commit(\"wins_X\", __forward, __reverse);");
    gold.append("\n    wins_O.__commit(\"wins_O\", __forward, __reverse);");
    gold.append("\n    stalemates.__commit(\"stalemates\", __forward, __reverse);");
    gold.append("\n    _squares.__commit(\"_squares\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    playerX.__revert();");
    gold.append("\n    playerO.__revert();");
    gold.append("\n    current.__revert();");
    gold.append("\n    wins_X.__revert();");
    gold.append("\n    wins_O.__revert();");
    gold.append("\n    stalemates.__revert();");
    gold.append("\n    _squares.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaTicTacToe_10 implements DeltaNode {");
    gold.append("\n    private DPrincipal __dcurrent;");
    gold.append("\n    private DInt32 __dwins_X;");
    gold.append("\n    private DInt32 __dwins_O;");
    gold.append("\n    private DInt32 __dstalemates;");
    gold.append("\n    private int __gboard;");
    gold.append("\n    private DRecordList<DeltaRTxSquare> __dboard;");
    gold.append("\n    private long __gyour_role;");
    gold.append("\n    private DString __dyour_role;");
    gold.append("\n    private long __gyour_turn;");
    gold.append("\n    private DBoolean __dyour_turn;");
    gold.append("\n    private long __gyour_wins;");
    gold.append("\n    private DInt32 __dyour_wins;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaTicTacToe_10() {");
    gold.append("\n      __dcurrent = new DPrincipal();");
    gold.append("\n      __dwins_X = new DInt32();");
    gold.append("\n      __dwins_O = new DInt32();");
    gold.append("\n      __dstalemates = new DInt32();");
    gold.append("\n      __gboard = -1;");
    gold.append("\n      __dboard = new DRecordList<DeltaRTxSquare>();");
    gold.append("\n      __gyour_role = -1;");
    gold.append("\n      __dyour_role = new DString();");
    gold.append("\n      __gyour_turn = -1;");
    gold.append("\n      __dyour_turn = new DBoolean();");
    gold.append("\n      __gyour_wins = -1;");
    gold.append("\n      __dyour_wins = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dcurrent.__memory();");
    gold.append("\n      __sum += __dwins_X.__memory();");
    gold.append("\n      __sum += __dwins_O.__memory();");
    gold.append("\n      __sum += __dstalemates.__memory();");
    gold.append("\n      __sum += __dboard.__memory();");
    gold.append("\n      __sum += __dyour_role.__memory();");
    gold.append("\n      __sum += __dyour_turn.__memory();");
    gold.append("\n      __sum += __dyour_wins.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(TicTacToe_10 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 8;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      __dcurrent.show(__item.current.get(), __obj.planField(\"current\"));");
    gold.append("\n      __dwins_X.show(__item.wins_X.get(), __obj.planField(\"wins_X\"));");
    gold.append("\n      __dwins_O.show(__item.wins_O.get(), __obj.planField(\"wins_O\"));");
    gold.append("\n      __dstalemates.show(__item.stalemates.get(), __obj.planField(\"stalemates\"));");
    gold.append("\n      if (__gboard != __item.board.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list2 = __obj.planField(\"board\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxSquare> __deltaList3 = __dboard;");
    gold.append("\n          DRecordList<DeltaRTxSquare>.Walk __deltaListWalker4 = __deltaList3.begin();");
    gold.append("\n          for (RTxSquare __listElement5 : __item.board.get()) {");
    gold.append("\n            DeltaRTxSquare __deltaElement6 = __deltaList3.getPrior(__listElement5.__id(), () -> new DeltaRTxSquare());");
    gold.append("\n            __deltaElement6.show(__listElement5, __list2.planField(__listElement5.__id()));");
    gold.append("\n            __deltaListWalker4.next(__listElement5.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker4.end(__list2);");
    gold.append("\n          __list2.end();");
    gold.append("\n        }");
    gold.append("\n        __gboard = __item.board.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      RTx__ViewerType __VIEWER = (RTx__ViewerType) __writer.viewerState;");
    gold.append("\n      long __CHECK = 0;");
    gold.append("\n      __CHECK = __item.___your_role.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gyour_role != __CHECK)  {");
    gold.append("\n        String __local_your_role = __item.__COMPUTE_your_role(__writer.who, __VIEWER);");
    gold.append("\n        __dyour_role.show(__local_your_role, __obj.planField(\"your_role\"));");
    gold.append("\n        __gyour_role = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      __CHECK = __item.___your_turn.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gyour_turn != __CHECK)  {");
    gold.append("\n        Boolean __local_your_turn = __item.__COMPUTE_your_turn(__writer.who, __VIEWER);");
    gold.append("\n        __dyour_turn.show(__local_your_turn, __obj.planField(\"your_turn\"));");
    gold.append("\n        __gyour_turn = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      __CHECK = __item.___your_wins.getGeneration() * 1662803L + __VIEWER.__DATA_GENERATION;");
    gold.append("\n      if (__gyour_wins != __CHECK)  {");
    gold.append("\n        Integer __local_your_wins = __item.__COMPUTE_your_wins(__writer.who, __VIEWER);");
    gold.append("\n        __dyour_wins.show(__local_your_wins, __obj.planField(\"your_wins\"));");
    gold.append("\n        __gyour_wins = __CHECK;");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dcurrent.clear();");
    gold.append("\n      __dwins_X.clear();");
    gold.append("\n      __dwins_O.clear();");
    gold.append("\n      __dstalemates.clear();");
    gold.append("\n      __dboard.clear();");
    gold.append("\n      __dyour_role.clear();");
    gold.append("\n      __dyour_turn.clear();");
    gold.append("\n      __dyour_wins.clear();");
    gold.append("\n      __code_cost += 8;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    TicTacToe_10 __self = this;");
    gold.append("\n    DeltaTicTacToe_10 __state = new DeltaTicTacToe_10();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int [] __ALL_VALUES_SquareState = new int[] {0, 1, 2};");
    gold.append("\n  private static final int __EnumCycleNext_SquareState(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 2:");
    gold.append("\n        return 0;");
    gold.append("\n      default:");
    gold.append("\n        return value + 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumCyclePrev_SquareState(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 0:");
    gold.append("\n        return 2;");
    gold.append("\n      default:");
    gold.append("\n        return value - 1;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static final int __EnumFix_SquareState(int value) {");
    gold.append("\n    switch (value) {");
    gold.append("\n      case 0:");
    gold.append("\n      case 1:");
    gold.append("\n      case 2:");
    gold.append("\n        return value;");
    gold.append("\n      default:");
    gold.append("\n        return 0;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Square = new String[] {\"state\", \"x\", \"y\"};");
    gold.append("\n  private class RTxSquare extends RxRecordBase<RTxSquare> {");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private final RxInt32 x;");
    gold.append("\n    private final RxInt32 y;");
    gold.append("\n    private final RxEnumInt32 state;");
    gold.append("\n    private RTxSquare(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      x = new RxInt32(this, 0);");
    gold.append("\n      y = new RxInt32(this, 0);");
    gold.append("\n      state = new RxEnumInt32(this, 0, (__v) -> __EnumFix_SquareState(__v));");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      __sum += x.__memory();");
    gold.append("\n      __sum += y.__memory();");
    gold.append("\n      __sum += state.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Square;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {state.getIndexValue(), x.getIndexValue(), y.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"state\":");
    gold.append("\n              state.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              x.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              y.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"state\":");
    gold.append("\n              state.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      x.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      y.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"state\");");
    gold.append("\n      state.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        x.__commit(\"x\", __forward, __reverse);");
    gold.append("\n        y.__commit(\"y\", __forward, __reverse);");
    gold.append("\n        state.__commit(\"state\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        id.__revert();");
    gold.append("\n        x.__revert();");
    gold.append("\n        y.__revert();");
    gold.append("\n        state.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Square\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxSquare implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private DInt32 __dy;");
    gold.append("\n    private DInt32 __dstate;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxSquare() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __dy = new DInt32();");
    gold.append("\n      __dstate = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      __sum += __dy.__memory();");
    gold.append("\n      __sum += __dstate.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxSquare __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id.get(), __obj.planField(\"id\"));");
    gold.append("\n      __dx.show(__item.x.get(), __obj.planField(\"x\"));");
    gold.append("\n      __dy.show(__item.y.get(), __obj.planField(\"y\"));");
    gold.append("\n      __dstate.show(__item.state.get(), __obj.planField(\"state\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __dy.clear();");
    gold.append("\n      __dstate.clear();");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxPlay extends NtMessageBase {");
    gold.append("\n    private int id = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"id\");");
    gold.append("\n      __hash.hashInteger(this.id);");
    gold.append("\n      __hash.hashString(\"Play\");");
    gold.append("\n    }");
    gold.append("\n    private RTxPlay(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"id\":");
    gold.append("\n              this.id = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      __writer.writeInteger(id);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxPlay() {}");
    gold.append("\n    private RTxPlay(int id) {");
    gold.append("\n      this.id = id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxPlay implements DeltaNode {");
    gold.append("\n    private DInt32 __did;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxPlay() {");
    gold.append("\n      __did = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __did.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxPlay __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __did.show(__item.id, __obj.planField(\"id\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __did.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_1 extends NtMessageBase {");
    gold.append("\n    private int state = 0;");
    gold.append("\n    private int x = 0;");
    gold.append("\n    private int y = 0;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"state\");");
    gold.append("\n      __hash.hashInteger(this.state);");
    gold.append("\n      __hash.hashString(\"x\");");
    gold.append("\n      __hash.hashInteger(this.x);");
    gold.append("\n      __hash.hashString(\"y\");");
    gold.append("\n      __hash.hashInteger(this.y);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_1(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"state\":");
    gold.append("\n              this.state = __EnumFix_SquareState(__reader.readInteger());");
    gold.append("\n              break;");
    gold.append("\n            case \"x\":");
    gold.append("\n              this.x = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            case \"y\":");
    gold.append("\n              this.y = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"state\");");
    gold.append("\n      __writer.writeInteger(state);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"x\");");
    gold.append("\n      __writer.writeInteger(x);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"y\");");
    gold.append("\n      __writer.writeInteger(y);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_1() {}");
    gold.append("\n    private RTx_AnonObjConvert_1(int state, int x, int y) {");
    gold.append("\n      this.state = state;");
    gold.append("\n      this.x = x;");
    gold.append("\n      this.y = y;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_1 implements DeltaNode {");
    gold.append("\n    private DInt32 __dstate;");
    gold.append("\n    private DInt32 __dx;");
    gold.append("\n    private DInt32 __dy;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_1() {");
    gold.append("\n      __dstate = new DInt32();");
    gold.append("\n      __dx = new DInt32();");
    gold.append("\n      __dy = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dstate.__memory();");
    gold.append("\n      __sum += __dx.__memory();");
    gold.append("\n      __sum += __dy.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dstate.show(__item.state, __obj.planField(\"state\"));");
    gold.append("\n      __dx.show(__item.x, __obj.planField(\"x\"));");
    gold.append("\n      __dy.show(__item.y, __obj.planField(\"y\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dstate.clear();");
    gold.append("\n      __dx.clear();");
    gold.append("\n      __dy.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private void __FUNC_0_current_wins() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(0);");
    gold.append("\n    if ((playerX.get()).equals(current.get())) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(1);");
    gold.append("\n      wins_X.bumpUpPost();");
    gold.append("\n    } else {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(2);");
    gold.append("\n      wins_O.bumpUpPost();");
    gold.append("\n    }");
    gold.append("\n    __track(3);");
    gold.append("\n    __transitionStateMachine(\"end\", 0);");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  private final Sink<RTxPlay> __queue_play = new Sink<>(\"play\");");
    gold.append("\n  private final NtChannel<RTxPlay> play = new NtChannel<>(__futures, __queue_play);");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"play\":");
    gold.append("\n        __queue_play.enqueue(__task, (RTxPlay) __task.message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"play\":");
    gold.append("\n        return new RTxPlay(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n    __queue_play.clear();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  private void __step_initiate() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(4);");
    gold.append("\n    current.set(playerX.get());");
    gold.append("\n    __track(5);");
    gold.append("\n    __transitionStateMachine(\"turn\", 0);");
    gold.append("\n  }");
    gold.append("\n  private void __step_turn() {");
    gold.append("\n    __code_cost += 4;");
    gold.append("\n    __track(6);");
    gold.append("\n    NtList<RTxSquare> open = _squares.iterate(false).where(true, new __CLOSURE_WhereClause0());");
    gold.append("\n    __track(7);");
    gold.append("\n    if (open.get().size() == 0) {");
    gold.append("\n      __code_cost += 4;");
    gold.append("\n      __track(8);");
    gold.append("\n      stalemates.bumpUpPost();");
    gold.append("\n      __track(9);");
    gold.append("\n      __transitionStateMachine(\"end\", 0);");
    gold.append("\n      __track(10);");
    gold.append("\n      return;");
    gold.append("\n    }");
    gold.append("\n    __track(11);");
    gold.append("\n    NtMaybe<RTxPlay> _AutoConditionpick_7;");
    gold.append("\n    if ((_AutoConditionpick_7 = play.decide(current.get(), Utility.convertMultiple(open.get(), (__n) -> new RTxPlay[__n], (__obj) -> new RTxPlay(__obj.id.get()))).await()).has()) {");
    gold.append("\n      RTxPlay pick = _AutoConditionpick_7.get();");
    gold.append("\n      __code_cost += 8;");
    gold.append("\n      __track(12);");
    gold.append("\n      final int placed = ((playerX.get()).equals(current.get()) ? 1 : 2);");
    gold.append("\n      __track(13);");
    gold.append("\n      ;");
    gold.append("\n");
    gold.append("\n      __track(14);");
    gold.append("\n      NtList<RxEnumInt32> _auto_8 = (_squares.iterate(false).where(true, new __CLOSURE_WhereClause1(pick))).transform((item) -> item.state);");
    gold.append("\n      for (RxEnumInt32 _auto_9 : _auto_8) {");
    gold.append("\n        _auto_9.set(placed);");
    gold.append("\n      }");
    gold.append("\n");
    gold.append("\n      __track(15);");
    gold.append("\n      {");
    gold.append("\n        int k = 0;");
    gold.append("\n        for (;__goodwill(88, 20, 88, 25) && (k < 3);k++) {");
    gold.append("\n          __code_cost += 3;");
    gold.append("\n          __track(16);");
    gold.append("\n          if ((_squares.iterate(false).where(true, new __CLOSURE_WhereClause2(k, placed))).size() == 3) {");
    gold.append("\n            __code_cost += 3;");
    gold.append("\n            __track(17);");
    gold.append("\n            __FUNC_0_current_wins();");
    gold.append("\n            __track(18);");
    gold.append("\n            return;");
    gold.append("\n          }");
    gold.append("\n          __track(19);");
    gold.append("\n          if ((_squares.iterate(false).where(true, new __CLOSURE_WhereClause3(k, placed))).size() == 3) {");
    gold.append("\n            __code_cost += 3;");
    gold.append("\n            __track(20);");
    gold.append("\n            __FUNC_0_current_wins();");
    gold.append("\n            __track(21);");
    gold.append("\n            return;");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n      __track(22);");
    gold.append("\n      if ((_squares.iterate(false).where(true, new __CLOSURE_WhereClause4(placed))).size() == 3 || (_squares.iterate(false).where(true, new __CLOSURE_WhereClause5(placed))).size() == 3) {");
    gold.append("\n        __code_cost += 3;");
    gold.append("\n        __track(23);");
    gold.append("\n        __FUNC_0_current_wins();");
    gold.append("\n        __track(24);");
    gold.append("\n        return;");
    gold.append("\n      }");
    gold.append("\n      __track(25);");
    gold.append("\n      current.set(((playerX.get()).equals(current.get()) ? playerO.get() : playerX.get()));");
    gold.append("\n      __track(26);");
    gold.append("\n      __transitionStateMachine(\"turn\", 0);");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private void __step_end() {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(27);");
    gold.append("\n    NtList<RxEnumInt32> _auto_10 = (_squares.iterate(true)).transform((item) -> item.state);");
    gold.append("\n    for (RxEnumInt32 _auto_11 : _auto_10) {");
    gold.append("\n      _auto_11.set(0);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(28);");
    gold.append("\n    __transitionStateMachine(\"turn\", 0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {");
    gold.append("\n    switch(__new_state) {");
    gold.append("\n      case \"initiate\":");
    gold.append("\n        __step_initiate();");
    gold.append("\n        return;");
    gold.append("\n      case \"turn\":");
    gold.append("\n        __step_turn();");
    gold.append("\n        return;");
    gold.append("\n      case \"end\":");
    gold.append("\n        __step_end();");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(29);");
    gold.append("\n    if ((playerX.get()).equals(NtPrincipal.NO_ONE)) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(30);");
    gold.append("\n      playerX.set(__who);");
    gold.append("\n      __track(31);");
    gold.append("\n      if (!(playerO.get()).equals(NtPrincipal.NO_ONE)) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(32);");
    gold.append("\n        __transitionStateMachine(\"initiate\", 0);");
    gold.append("\n      }");
    gold.append("\n    } else if ((playerO.get()).equals(NtPrincipal.NO_ONE)) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(33);");
    gold.append("\n      playerO.set(__who);");
    gold.append("\n      __track(34);");
    gold.append("\n      if (!(playerX.get()).equals(NtPrincipal.NO_ONE)) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(35);");
    gold.append("\n        __transitionStateMachine(\"initiate\", 0);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(36);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanInvent__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(CoreRequestContext __context, NtPrincipal __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 5;");
    gold.append("\n    __track(37);");
    gold.append("\n    {");
    gold.append("\n      int y = 0;");
    gold.append("\n      for (;__goodwill(30, 18, 30, 23) && (y < 3);y++) {");
    gold.append("\n        __code_cost += 2;");
    gold.append("\n        __track(38);");
    gold.append("\n        {");
    gold.append("\n          int x = 0;");
    gold.append("\n          for (;__goodwill(31, 20, 31, 25) && (x < 3);x++) {");
    gold.append("\n            __code_cost += 2;");
    gold.append("\n            __track(39);");
    gold.append("\n            {");
    gold.append("\n              RxTable<RTxSquare> _AutoRef12 = _squares;");
    gold.append("\n              RTx_AnonObjConvert_1 _AutoExpr14 = new RTx_AnonObjConvert_1(0, x, y);");
    gold.append("\n              RTxSquare _CreateRef13 = _AutoRef12.make();");
    gold.append("\n              __code_cost += 3;");
    gold.append("\n              _CreateRef13.state.set(_AutoExpr14.state);");
    gold.append("\n              _CreateRef13.x.set(_AutoExpr14.x);");
    gold.append("\n              _CreateRef13.y.set(_AutoExpr14.y);");
    gold.append("\n            }");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    __track(40);");
    gold.append("\n    wins_X.set(0);");
    gold.append("\n    __track(41);");
    gold.append("\n    wins_O.set(0);");
    gold.append("\n    __track(42);");
    gold.append("\n    stalemates.set(0);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext __context, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__context, __context.who, __object);");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause0 implements WhereClause<RTxSquare> {");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, 0};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int state = __obj.state.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return state == 0;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause1 implements WhereClause<RTxSquare> {");
    gold.append("\n    private RTxPlay pick;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return pick.id;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause1(RTxPlay pick) {");
    gold.append("\n      this.pick = pick;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int id = __obj.id.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return id == pick.id;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause2 implements WhereClause<RTxSquare> {");
    gold.append("\n    private int k;");
    gold.append("\n    private int placed;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, placed, 1, k};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause2(int k, int placed) {");
    gold.append("\n      this.k = k;");
    gold.append("\n      this.placed = placed;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int x = __obj.x.get();");
    gold.append("\n      int state = __obj.state.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return x == k && state == placed;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause3 implements WhereClause<RTxSquare> {");
    gold.append("\n    private int k;");
    gold.append("\n    private int placed;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, placed, 2, k};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause3(int k, int placed) {");
    gold.append("\n      this.k = k;");
    gold.append("\n      this.placed = placed;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int y = __obj.y.get();");
    gold.append("\n      int state = __obj.state.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return y == k && state == placed;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause4 implements WhereClause<RTxSquare> {");
    gold.append("\n    private int placed;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, placed};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause4(int placed) {");
    gold.append("\n      this.placed = placed;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int y = __obj.y.get();");
    gold.append("\n      int x = __obj.x.get();");
    gold.append("\n      int state = __obj.state.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return y == x && state == placed;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class __CLOSURE_WhereClause5 implements WhereClause<RTxSquare> {");
    gold.append("\n    private int placed;");
    gold.append("\n    @Override");
    gold.append("\n    public int[] getIndices() {");
    gold.append("\n      return new int[] {0, placed};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void scopeByIndicies(IndexQuerySet __set) {}");
    gold.append("\n    @Override");
    gold.append("\n    public Integer getPrimaryKey() {");
    gold.append("\n      return null;");
    gold.append("\n    }");
    gold.append("\n    private __CLOSURE_WhereClause5(int placed) {");
    gold.append("\n      this.placed = placed;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public boolean test(RTxSquare __obj) {");
    gold.append("\n      int y = __obj.y.get();");
    gold.append("\n      int x = __obj.x.get();");
    gold.append("\n      int state = __obj.state.get();");
    gold.append("\n      __code_cost ++;");
    gold.append("\n      return y == 2 - x && state == placed;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"playerX\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"}},\"playerO\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"}},\"current\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"wins_X\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"wins_O\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"stalemates\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"_squares\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Square\"}},\"board\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_record\",\"name\":\"Square\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"state\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"SquareState\",\"options\":{\"values\":{\"Open\":0,\"X\":1,\"O\":2},\"names\":{\"0\":\"Open\",\"1\":\"X\",\"2\":\"O\"},\"default\":\"Open\"}},\"privacy\":\"public\"}}}},\"privacy\":\"public\"},\"your_role\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"bubble\"},\"your_turn\":{\"type\":{\"nature\":\"native_value\",\"type\":\"bool\"},\"privacy\":\"bubble\"},\"your_wins\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"bubble\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"SquareState\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"SquareState\",\"options\":{\"values\":{\"Open\":0,\"X\":1,\"O\":2},\"names\":{\"0\":\"Open\",\"1\":\"X\",\"2\":\"O\"},\"default\":\"Open\"}},\"Square\":{\"nature\":\"reactive_record\",\"name\":\"Square\",\"fields\":{\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"x\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"y\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"state\":{\"type\":{\"nature\":\"reactive_enum\",\"type\":\"SquareState\",\"options\":{\"values\":{\"Open\":0,\"X\":1,\"O\":2},\"names\":{\"0\":\"Open\",\"1\":\"X\",\"2\":\"O\"},\"default\":\"Open\"}},\"privacy\":\"public\"}}},\"Play\":{\"nature\":\"native_message\",\"name\":\"Play\",\"anonymous\":false,\"fields\":{\"id\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_1\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_1\",\"anonymous\":true,\"fields\":{\"state\":{\"type\":{\"nature\":\"native_value\",\"type\":\"enum\",\"enum\":\"SquareState\",\"options\":{\"values\":{\"Open\":0,\"X\":1,\"O\":2},\"names\":{\"0\":\"Open\",\"1\":\"X\",\"2\":\"O\"},\"default\":\"Open\"}}},\"x\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"y\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}}}}},\"channels\":{\"play\":\"Play\"},\"constructors\":[],\"labels\":[\"initiate\",\"turn\",\"end\"]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__auto_table_row_id\":9,\"_squares\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0}},\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:56");
    gold.append("\nMEMORY:3166");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"current\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"wins_X\":0,\"wins_O\":0,\"stalemates\":0,\"board\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0},\"@o\":[1,2,3,4,5,6,7,8,9]},\"your_role\":\"X\",\"your_turn\":true,\"your_wins\":0},\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"current\":{\"@t\":1,\"agent\":\"?\",\"authority\":\"?\"},\"wins_X\":0,\"wins_O\":0,\"stalemates\":0,\"board\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0},\"@o\":[1,2,3,4,5,6,7,8,9]},\"your_role\":\"Observer\",\"your_turn\":false,\"your_wins\":0},\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"playerX\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"your_role\":\"O\"},\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"your_role\":\"X\"},\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:8796");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"playerX\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playerO\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"wins_X\":0,\"wins_O\":0,\"stalemates\":0,\"_squares\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":9,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"playerX\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playerO\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"wins_X\":0,\"wins_O\":0,\"stalemates\":0,\"_squares\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":9,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"playerX\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"playerO\":{\"agent\":\"?\",\"authority\":\"?\"},\"current\":{\"agent\":\"?\",\"authority\":\"?\"},\"wins_X\":0,\"wins_O\":0,\"stalemates\":0,\"_squares\":{\"1\":{\"id\":1,\"x\":0,\"y\":0,\"state\":0},\"2\":{\"id\":2,\"x\":1,\"y\":0,\"state\":0},\"3\":{\"id\":3,\"x\":2,\"y\":0,\"state\":0},\"4\":{\"id\":4,\"x\":0,\"y\":1,\"state\":0},\"5\":{\"id\":5,\"x\":1,\"y\":1,\"state\":0},\"6\":{\"id\":6,\"x\":2,\"y\":1,\"state\":0},\"7\":{\"id\":7,\"x\":0,\"y\":2,\"state\":0},\"8\":{\"id\":8,\"x\":1,\"y\":2,\"state\":0},\"9\":{\"id\":9,\"x\":2,\"y\":2,\"state\":0}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":9,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_chat_11 = null;
  private String get_chat_11() {
    if (cached_chat_11 != null) {
      return cached_chat_11;
    }
    cached_chat_11 = generateTestOutput(true, "chat_11", "./test_code/Demo_chat_success.a");
    return cached_chat_11;
  }

  @Test
  public void testchatEmission() {
    assertEmissionGood(get_chat_11());
  }

  @Test
  public void testchatSuccess() {
    assertLivePass(get_chat_11());
  }

  @Test
  public void testchatGoodWillHappy() {
    assertGoodWillHappy(get_chat_11());
  }

  @Test
  public void testchatExceptionFree() {
    assertExceptionFree(get_chat_11());
  }

  @Test
  public void testchatTODOFree() {
    assertTODOFree(get_chat_11());
  }

  @Test
  public void stable_chat_11() {
    String live = get_chat_11();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:Demo_chat_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class chat_11 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxLine> _chat;");
    gold.append("\n  private final RxLazy<NtList<RTxLine>> chat;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += _chat.__memory();");
    gold.append("\n    __sum += chat.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public chat_11(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    _chat = new RxTable<>(__self, this, \"_chat\", (RxParent __parent) -> new RTxLine(__parent), 0);");
    gold.append("\n    chat = new RxLazy<NtList<RTxLine>>(this, () -> (_chat.iterate(true)));");
    gold.append("\n    _chat.__subscribe(chat);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_chat\":");
    gold.append("\n            _chat.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"_chat\":");
    gold.append("\n            _chat.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"_chat\");");
    gold.append("\n    _chat.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    _chat.__commit(\"_chat\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    _chat.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class Deltachat_11 implements DeltaNode {");
    gold.append("\n    private int __gchat;");
    gold.append("\n    private DRecordList<DeltaRTxLine> __dchat;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private Deltachat_11() {");
    gold.append("\n      __gchat = -1;");
    gold.append("\n      __dchat = new DRecordList<DeltaRTxLine>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dchat.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(chat_11 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gchat != __item.chat.getGeneration()) {");
    gold.append("\n        {");
    gold.append("\n          PrivateLazyDeltaWriter __list1 = __obj.planField(\"chat\").planObject();");
    gold.append("\n          DRecordList<DeltaRTxLine> __deltaList2 = __dchat;");
    gold.append("\n          DRecordList<DeltaRTxLine>.Walk __deltaListWalker3 = __deltaList2.begin();");
    gold.append("\n          for (RTxLine __listElement4 : __item.chat.get()) {");
    gold.append("\n            DeltaRTxLine __deltaElement5 = __deltaList2.getPrior(__listElement4.__id(), () -> new DeltaRTxLine());");
    gold.append("\n            __deltaElement5.show(__listElement4, __list1.planField(__listElement4.__id()));");
    gold.append("\n            __deltaListWalker3.next(__listElement4.__id());");
    gold.append("\n          }");
    gold.append("\n          __deltaListWalker3.end(__list1);");
    gold.append("\n          __list1.end();");
    gold.append("\n        }");
    gold.append("\n        __gchat = __item.chat.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dchat.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    chat_11 __self = this;");
    gold.append("\n    Deltachat_11 __state = new Deltachat_11();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_Line = new String[] {\"who\"};");
    gold.append("\n  private class RTxLine extends RxRecordBase<RTxLine> {");
    gold.append("\n    private final RxPrincipal who;");
    gold.append("\n    private final RxString what;");
    gold.append("\n    private final RxInt64 when;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxLine(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      who = new RxPrincipal(this, NtPrincipal.NO_ONE);");
    gold.append("\n      what = new RxString(this, \"\");");
    gold.append("\n      when = new RxInt64(this, 0L);");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += who.__memory();");
    gold.append("\n      __sum += what.__memory();");
    gold.append("\n      __sum += when.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_Line;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {who.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"what\":");
    gold.append("\n              what.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"who\":");
    gold.append("\n              who.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"what\":");
    gold.append("\n              what.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              when.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      who.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      what.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      when.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        who.__commit(\"who\", __forward, __reverse);");
    gold.append("\n        what.__commit(\"what\", __forward, __reverse);");
    gold.append("\n        when.__commit(\"when\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        who.__revert();");
    gold.append("\n        what.__revert();");
    gold.append("\n        when.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __killFields() {}");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"Line\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxLine implements DeltaNode {");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxLine() {");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxLine __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwho.show(__item.who.get(), __obj.planField(\"who\"));");
    gold.append("\n      __dwhat.show(__item.what.get(), __obj.planField(\"what\"));");
    gold.append("\n      __dwhen.show(__item.when.get(), __obj.planField(\"when\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTxSay extends NtMessageBase {");
    gold.append("\n    private String what = \"\";");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"what\");");
    gold.append("\n      __hash.hashString(this.what);");
    gold.append("\n      __hash.hashString(\"Say\");");
    gold.append("\n    }");
    gold.append("\n    private RTxSay(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"what\":");
    gold.append("\n              this.what = __reader.readString();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      __writer.writeString(what);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTxSay() {}");
    gold.append("\n    private RTxSay(String what) {");
    gold.append("\n      this.what = what;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxSay implements DeltaNode {");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxSay() {");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxSay __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwhat.show(__item.what, __obj.planField(\"what\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __code_cost += 1;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 extends NtMessageBase {");
    gold.append("\n    private String what = \"\";");
    gold.append("\n    private long when = 0L;");
    gold.append("\n    private NtPrincipal who = NtPrincipal.NO_ONE;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"what\");");
    gold.append("\n      __hash.hashString(this.what);");
    gold.append("\n      __hash.hashString(\"when\");");
    gold.append("\n      __hash.hashLong(this.when);");
    gold.append("\n      __hash.hashString(\"who\");");
    gold.append("\n      __hash.hashNtPrincipal(this.who);");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"what\":");
    gold.append("\n              this.what = __reader.readString();");
    gold.append("\n              break;");
    gold.append("\n            case \"when\":");
    gold.append("\n              this.when = __reader.readLong();");
    gold.append("\n              break;");
    gold.append("\n            case \"who\":");
    gold.append("\n              this.who = __reader.readNtPrincipal();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"what\");");
    gold.append("\n      __writer.writeString(what);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"when\");");
    gold.append("\n      __writer.writeLong(when);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"who\");");
    gold.append("\n      __writer.writeNtPrincipal(who);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() {}");
    gold.append("\n    private RTx_AnonObjConvert_0(String what, long when, NtPrincipal who) {");
    gold.append("\n      this.what = what;");
    gold.append("\n      this.when = when;");
    gold.append("\n      this.who = who;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DString __dwhat;");
    gold.append("\n    private DInt64 __dwhen;");
    gold.append("\n    private DPrincipal __dwho;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dwhat = new DString();");
    gold.append("\n      __dwhen = new DInt64();");
    gold.append("\n      __dwho = new DPrincipal();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dwhat.__memory();");
    gold.append("\n      __sum += __dwhen.__memory();");
    gold.append("\n      __sum += __dwho.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dwhat.show(__item.what, __obj.planField(\"what\"));");
    gold.append("\n      __dwhen.show(__item.when, __obj.planField(\"when\"));");
    gold.append("\n      __dwho.show(__item.who, __obj.planField(\"who\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __dwhat.clear();");
    gold.append("\n      __dwhen.clear();");
    gold.append("\n      __dwho.clear();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  private void handleChannelMessage_say(CoreRequestContext __context, NtPrincipal __who, RTxSay what) throws AbortMessageException {");
    gold.append("\n    __code_cost += 3;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxLine> _AutoRef6 = _chat;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr8 = new RTx_AnonObjConvert_0(what.what, __timeNow(), __who);");
    gold.append("\n      RTxLine _CreateRef7 = _AutoRef6.make();");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      _CreateRef7.what.set(_AutoExpr8.what);");
    gold.append("\n      _CreateRef7.when.set(_AutoExpr8.when);");
    gold.append("\n      _CreateRef7.who.set(_AutoExpr8.who);");
    gold.append("\n    }");
    gold.append("\n    __track(1);");
    gold.append("\n    (_chat.iterate(false).orderBy(false, __ORDER_Line_when_d).skip(true, 50)).map((__item) -> { __item.__delete(); });");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    switch (channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        return true;");
    gold.append("\n    default:");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext __context, String __channel, Object __message) throws AbortMessageException {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        handleChannelMessage_say(__context, __context.who, (RTxSay) __message);");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask __task) {");
    gold.append("\n    switch (__task.channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        __task.setAction(() -> handleChannelMessage_say(__task.context(__getKey()), __task.who, (RTxSay)(__task.message)));");
    gold.append("\n        return;");
    gold.append("\n      default:");
    gold.append("\n        return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String __channel, JsonStreamReader __reader) {");
    gold.append("\n    switch (__channel) {");
    gold.append("\n      case \"say\":");
    gold.append("\n        return new RTxSay(__reader);");
    gold.append("\n      default:");
    gold.append("\n        __reader.skipValue();");
    gold.append("\n        return NtMessageBase.NULL;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __get(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(WebPut __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(WebGet __request) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent__0(StaticState __static_state, NtPrincipal __who, CoreRequestContext __context) {");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public boolean __onConnected__0(CoreRequestContext __context, NtPrincipal __who) {");
    gold.append("\n    __code_cost += 2;");
    gold.append("\n    __track(2);");
    gold.append("\n    return true;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanCreate__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    StaticState __static_state = new StaticState();");
    gold.append("\n    if (__onCanInvent__0(__static_state, __context.who, __context)) {");
    gold.append("\n      __result = true;");
    gold.append("\n    } else {");
    gold.append("\n      return false;");
    gold.append("\n    }");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    if (__onConnected__0(__cvalue, __cvalue.who)) __result = true;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    __map.put(\"maximum_history\", 250);");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  private final static Comparator<RTxLine> __ORDER_Line_when_d = new Comparator<RTxLine>() {");
    gold.append("\n    @Override");
    gold.append("\n    public int compare(RTxLine __a, RTxLine __b) {");
    gold.append("\n      return -__a.when.compareTo(__b.when);");
    gold.append("\n    }");
    gold.append("\n  };");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"_chat\":{\"type\":{\"nature\":\"reactive_table\",\"record_name\":\"Line\"}},\"chat\":{\"type\":{\"nature\":\"native_list\",\"type\":{\"nature\":\"reactive_record\",\"name\":\"Line\",\"fields\":{\"who\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"what\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"when\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}}}},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"Line\":{\"nature\":\"reactive_record\",\"name\":\"Line\",\"fields\":{\"who\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"principal\"},\"privacy\":\"public\"},\"what\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"when\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"id\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"}}}},\"Say\":{\"nature\":\"native_message\",\"name\":\"Say\",\"anonymous\":false,\"fields\":{\"what\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"what\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"}},\"when\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"}},\"who\":{\"type\":{\"nature\":\"native_value\",\"type\":\"secure<principal>\"}}}}},\"channels\":{\"say\":\"Say\"},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:538");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"75\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__connection_id\":1,\"__time\":\"75\",\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"}},\"__messages\":null} need:false in:-75");
    gold.append("\nNO_ONE|SUCCESS:4");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":6,\"__entropy\":\"488730542833106255\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":6}");
    gold.append("\n+ RANDO DELTA:{\"seq\":6}");
    gold.append("\n{\"command\":\"connect\",\"timestamp\":\"125\",\"who\":{\"agent\":\"rando\",\"authority\":\"random-place\"},\"key\":\"key\",\"origin\":\"phase\",\"ip\":\"ip\"}-->{\"__seq\":8,\"__entropy\":\"-4023469995120514721\",\"__connection_id\":2,\"__time\":\"125\",\"__clients\":{\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}},\"__messages\":null} need:false in:-125");
    gold.append("\nRANDO|SUCCESS:7");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":8}");
    gold.append("\n+ RANDO DELTA:{\"seq\":8}");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"150\"}-->{\"__messages\":null,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__time\":\"150\"} need:false in:-150");
    gold.append("\nRANDO|SUCCESS:9");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":9}");
    gold.append("\n+ RANDO DELTA:{\"seq\":9}");
    gold.append("\nMEMORY:656");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n{\"_chat\":{},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":9,\"__entropy\":\"-652523483647487500\",\"__auto_future_id\":0,\"__connection_id\":2,\"__message_id\":0,\"__time\":\"150\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__clients\":{\"0\":{\"agent\":\"?\",\"authority\":\"?\"},\"1\":{\"agent\":\"rando\",\"authority\":\"random-place\"}}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
}
