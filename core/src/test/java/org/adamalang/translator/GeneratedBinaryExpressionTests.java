/*
 * This file is subject to the terms and conditions outlined in the file 'LICENSE' (hint: it's MIT); this file is located in the root directory near the README.md which you should also read.
 *
 * This file is part of the 'Adama' project which is a programming language and document store for board games; however, it can be so much more.
 *
 * See http://www.adama-lang.org/ for more information.
 *
 * (c) 2020 - 2022 by Jeffrey M. Barber (http://jeffrey.io)
 */
package org.adamalang.translator;

import org.junit.Test;

public class GeneratedBinaryExpressionTests extends GeneratedBase {
  private String cached_AggregateMath_1 = null;
  private String get_AggregateMath_1() {
    if (cached_AggregateMath_1 != null) {
      return cached_AggregateMath_1;
    }
    cached_AggregateMath_1 = generateTestOutput(true, "AggregateMath_1", "./test_code/BinaryExpression_AggregateMath_success.a");
    return cached_AggregateMath_1;
  }

  @Test
  public void testAggregateMathEmission() {
    assertEmissionGood(get_AggregateMath_1());
  }

  @Test
  public void testAggregateMathSuccess() {
    assertLivePass(get_AggregateMath_1());
  }

  @Test
  public void testAggregateMathGoodWillHappy() {
    assertGoodWillHappy(get_AggregateMath_1());
  }

  @Test
  public void testAggregateMathExceptionFree() {
    assertExceptionFree(get_AggregateMath_1());
  }

  @Test
  public void testAggregateMathTODOFree() {
    assertTODOFree(get_AggregateMath_1());
  }

  @Test
  public void stable_AggregateMath_1() {
    String live = get_AggregateMath_1();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_AggregateMath_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class AggregateMath_1 extends LivingDocument {");
    gold.append("\n  private final RxTable<RTxX> t;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += t.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public AggregateMath_1(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    t = new RxTable<>(__self, this, \"t\", (RxParent __parent) -> new RTxX(__parent), 0);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"t\":");
    gold.append("\n            t.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"t\":");
    gold.append("\n            t.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"t\");");
    gold.append("\n    t.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    t.__commit(\"t\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    t.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaAggregateMath_1 implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaAggregateMath_1() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(AggregateMath_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    AggregateMath_1 __self = this;");
    gold.append("\n    DeltaAggregateMath_1 __state = new DeltaAggregateMath_1();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static String[] __INDEX_COLUMNS_X = new String[] {\"i\"};");
    gold.append("\n  private class RTxX extends RxRecordBase<RTxX> {");
    gold.append("\n    private final RxInt32 i;");
    gold.append("\n    private final RxDouble d;");
    gold.append("\n    private final RxString s;");
    gold.append("\n    private final RxInt32 id;");
    gold.append("\n    private RTxX(RxParent __owner) {");
    gold.append("\n      super(__owner);");
    gold.append("\n      i = new RxInt32(this, 1);");
    gold.append("\n      d = new RxDouble(this, 1);");
    gold.append("\n      s = new RxString(this, \"x\");");
    gold.append("\n      id = new RxInt32(this, 0);");
    gold.append("\n      if (__owner instanceof RxTable) {");
    gold.append("\n        /* ok */");
    gold.append("\n      } else {");
    gold.append("\n        /* ok */");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = super.__memory();");
    gold.append("\n      __sum += i.__memory();");
    gold.append("\n      __sum += d.__memory();");
    gold.append("\n      __sum += s.__memory();");
    gold.append("\n      __sum += id.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS_X;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {i.getIndexValue()};");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __insert(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"i\":");
    gold.append("\n              i.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"d\":");
    gold.append("\n              d.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"s\":");
    gold.append("\n              s.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__insert(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __patch(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while(__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"i\":");
    gold.append("\n              i.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"d\":");
    gold.append("\n              d.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"s\":");
    gold.append("\n              s.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            case \"id\":");
    gold.append("\n              id.__patch(__reader);");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"i\");");
    gold.append("\n      i.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"d\");");
    gold.append("\n      d.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"s\");");
    gold.append("\n      s.__dump(__writer);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"id\");");
    gold.append("\n      id.__dump(__writer);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __forward.writeObjectFieldIntro(__name);");
    gold.append("\n        __forward.beginObject();");
    gold.append("\n        __reverse.writeObjectFieldIntro(__name);");
    gold.append("\n        __reverse.beginObject();");
    gold.append("\n        i.__commit(\"i\", __forward, __reverse);");
    gold.append("\n        d.__commit(\"d\", __forward, __reverse);");
    gold.append("\n        s.__commit(\"s\", __forward, __reverse);");
    gold.append("\n        id.__commit(\"id\", __forward, __reverse);");
    gold.append("\n        __forward.endObject();");
    gold.append("\n        __reverse.endObject();");
    gold.append("\n        __lowerDirtyCommit();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __revert() {");
    gold.append("\n      if (__isDirty()) {");
    gold.append("\n        __isDying = false;");
    gold.append("\n        i.__revert();");
    gold.append("\n        d.__revert();");
    gold.append("\n        s.__revert();");
    gold.append("\n        id.__revert();");
    gold.append("\n        __lowerDirtyRevert();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public String __name() {");
    gold.append("\n      return \"X\";");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __deindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    public void __reindex() {");
    gold.append("\n      /* ok */");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int __id() {");
    gold.append("\n      return id.get();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __setId(int __id, boolean __force) {");
    gold.append("\n      if (__force) {");
    gold.append("\n        id.forceSet(__id);");
    gold.append("\n      } else {");
    gold.append("\n        id.set(__id);");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTxX implements DeltaNode {");
    gold.append("\n    private DInt32 __di;");
    gold.append("\n    private DDouble __dd;");
    gold.append("\n    private DString __ds;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTxX() {");
    gold.append("\n      __di = new DInt32();");
    gold.append("\n      __dd = new DDouble();");
    gold.append("\n      __ds = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __di.__memory();");
    gold.append("\n      __sum += __dd.__memory();");
    gold.append("\n      __sum += __ds.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTxX __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __di.show(__item.i.get(), __obj.planField(\"i\"));");
    gold.append("\n      __dd.show(__item.d.get(), __obj.planField(\"d\"));");
    gold.append("\n      __ds.show(__item.s.get(), __obj.planField(\"s\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private static class RTx_AnonObjConvert_0 implements NtMessageBase {");
    gold.append("\n    private int d = 0;");
    gold.append("\n    private int i = 0;");
    gold.append("\n    private RTx_AnonObjConvert_0(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      if (__reader.startObject()) {");
    gold.append("\n        while (__reader.notEndOfObject()) {");
    gold.append("\n          String __fieldName = __reader.fieldName();");
    gold.append("\n          switch (__fieldName) {");
    gold.append("\n            case \"d\":");
    gold.append("\n              this.d = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            case \"i\":");
    gold.append("\n              this.i = __reader.readInteger();");
    gold.append("\n              break;");
    gold.append("\n            default:");
    gold.append("\n              __reader.skipValue();");
    gold.append("\n          }");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.writeObjectFieldIntro(\"d\");");
    gold.append("\n      __writer.writeInteger(d);");
    gold.append("\n      __writer.writeObjectFieldIntro(\"i\");");
    gold.append("\n      __writer.writeInteger(i);");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx_AnonObjConvert_0() {}");
    gold.append("\n    private RTx_AnonObjConvert_0(int d, int i) {");
    gold.append("\n      this.d = d;");
    gold.append("\n      this.i = i;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx_AnonObjConvert_0 implements DeltaNode {");
    gold.append("\n    private DInt32 __dd;");
    gold.append("\n    private DInt32 __di;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx_AnonObjConvert_0() {");
    gold.append("\n      __dd = new DInt32();");
    gold.append("\n      __di = new DInt32();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __dd.__memory();");
    gold.append("\n      __sum += __di.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx_AnonObjConvert_0 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __dd.show(__item.d, __obj.planField(\"d\"));");
    gold.append("\n      __di.show(__item.i, __obj.planField(\"i\"));");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  private void __construct_0(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __code_cost += 9;");
    gold.append("\n    __track(0);");
    gold.append("\n    {");
    gold.append("\n      RxTable<RTxX> _AutoRef1 = t;");
    gold.append("\n      RTx_AnonObjConvert_0 _AutoExpr3 = new RTx_AnonObjConvert_0(3, 1);");
    gold.append("\n      RTxX _CreateRef2 = _AutoRef1.make();");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      _CreateRef2.d.set(_AutoExpr3.d);");
    gold.append("\n      _CreateRef2.i.set(_AutoExpr3.i);");
    gold.append("\n    }");
    gold.append("\n    __track(1);");
    gold.append("\n    NtList<RxInt32> _auto_4 = (t.iterate(true)).transform((item) -> item.i);");
    gold.append("\n    for (RxInt32 _auto_5 : _auto_4) {");
    gold.append("\n      _auto_5.opAddTo(2);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(2);");
    gold.append("\n    NtList<RxInt32> _auto_6 = (t.iterate(true)).transform((item) -> item.i);");
    gold.append("\n    for (RxInt32 _auto_7 : _auto_6) {");
    gold.append("\n      _auto_7.opMultBy(5);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(3);");
    gold.append("\n    NtList<RxInt32> _auto_8 = (t.iterate(true)).transform((item) -> item.i);");
    gold.append("\n    for (RxInt32 _auto_9 : _auto_8) {");
    gold.append("\n      _auto_9.opSubFrom(3);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(4);");
    gold.append("\n    NtList<RxDouble> _auto_10 = (t.iterate(true)).transform((item) -> item.d);");
    gold.append("\n    for (RxDouble _auto_11 : _auto_10) {");
    gold.append("\n      _auto_11.opAddTo(2);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(5);");
    gold.append("\n    NtList<RxDouble> _auto_12 = (t.iterate(true)).transform((item) -> item.d);");
    gold.append("\n    for (RxDouble _auto_13 : _auto_12) {");
    gold.append("\n      _auto_13.opMultBy(5);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(6);");
    gold.append("\n    NtList<RxDouble> _auto_14 = (t.iterate(true)).transform((item) -> item.d);");
    gold.append("\n    for (RxDouble _auto_15 : _auto_14) {");
    gold.append("\n      _auto_15.opSubFrom(3);");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n    __track(7);");
    gold.append("\n    NtList<RxString> _auto_16 = (t.iterate(true)).transform((item) -> item.s);");
    gold.append("\n    for (RxString _auto_17 : _auto_16) {");
    gold.append("\n      _auto_17.opAddTo(\"yz\");");
    gold.append("\n    }");
    gold.append("\n");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient __who, NtMessageBase __object) {");
    gold.append("\n    __construct_0(__who, __object);");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}},\"X\":{\"nature\":\"reactive_record\",\"name\":\"X\",\"fields\":{\"i\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"d\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"s\":{\"type\":{\"nature\":\"reactive_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"_AnonObjConvert_0\":{\"nature\":\"native_message\",\"name\":\"_AnonObjConvert_0\",\"anonymous\":true,\"fields\":{\"d\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"i\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}}}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\",\"__auto_table_row_id\":1,\"t\":{\"1\":{\"i\":12,\"d\":22.0,\"s\":\"xyz\",\"id\":1}}} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:11");
    gold.append("\nMEMORY:772");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":2}");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"seq\":3}");
    gold.append("\nRANDO was DENIED:");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nMEMORY:890");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"t\":{\"1\":{\"i\":12,\"d\":22.0,\"s\":\"xyz\",\"id\":1}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":1}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"t\":{\"1\":{\"i\":12,\"d\":22.0,\"s\":\"xyz\",\"id\":1}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":1}");
    gold.append("\n{\"t\":{\"1\":{\"i\":12,\"d\":22.0,\"s\":\"xyz\",\"id\":1}},\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":1}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_NumberCompare_2 = null;
  private String get_NumberCompare_2() {
    if (cached_NumberCompare_2 != null) {
      return cached_NumberCompare_2;
    }
    cached_NumberCompare_2 = generateTestOutput(true, "NumberCompare_2", "./test_code/BinaryExpression_NumberCompare_success.a");
    return cached_NumberCompare_2;
  }

  @Test
  public void testNumberCompareEmission() {
    assertEmissionGood(get_NumberCompare_2());
  }

  @Test
  public void testNumberCompareSuccess() {
    assertLivePass(get_NumberCompare_2());
  }

  @Test
  public void testNumberCompareGoodWillHappy() {
    assertGoodWillHappy(get_NumberCompare_2());
  }

  @Test
  public void testNumberCompareExceptionFree() {
    assertExceptionFree(get_NumberCompare_2());
  }

  @Test
  public void testNumberCompareTODOFree() {
    assertTODOFree(get_NumberCompare_2());
  }

  @Test
  public void stable_NumberCompare_2() {
    String live = get_NumberCompare_2();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_NumberCompare_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class NumberCompare_2 extends LivingDocument {");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public NumberCompare_2(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaNumberCompare_2 implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaNumberCompare_2() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(NumberCompare_2 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    NumberCompare_2 __self = this;");
    gold.append("\n    DeltaNumberCompare_2 __state = new DeltaNumberCompare_2();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  public void __test_PrimaryTest(TestReportBuilder report) {");
    gold.append("\n    report.begin(\"PrimaryTest\");");
    gold.append("\n    {");
    gold.append("\n      __code_cost += 28;");
    gold.append("\n      __track(0);");
    gold.append("\n      __assert_truth(1 == 1, 1, 2, 1, 16);");
    gold.append("\n      __track(1);");
    gold.append("\n      __assert_truth((1 != 2), 2, 2, 2, 18);");
    gold.append("\n      __track(2);");
    gold.append("\n      __assert_truth(!(1 == 2), 3, 2, 3, 19);");
    gold.append("\n      __track(3);");
    gold.append("\n      __assert_truth(1 < 2, 4, 2, 4, 15);");
    gold.append("\n      __track(4);");
    gold.append("\n      __assert_truth(1 <= 2, 5, 2, 5, 16);");
    gold.append("\n      __track(5);");
    gold.append("\n      __assert_truth(!(1 > 2), 6, 2, 6, 18);");
    gold.append("\n      __track(6);");
    gold.append("\n      __assert_truth(!(1 >= 2), 7, 2, 7, 19);");
    gold.append("\n      __track(7);");
    gold.append("\n      __assert_truth(2 > 1, 8, 2, 8, 15);");
    gold.append("\n      __track(8);");
    gold.append("\n      __assert_truth(2 >= 1, 9, 2, 9, 16);");
    gold.append("\n      __track(9);");
    gold.append("\n      __assert_truth(!(2 < 1), 10, 2, 10, 18);");
    gold.append("\n      __track(10);");
    gold.append("\n      __assert_truth(!(2 <= 1), 11, 2, 11, 19);");
    gold.append("\n      __track(11);");
    gold.append("\n      __assert_truth(1 < 3.14, 12, 2, 12, 18);");
    gold.append("\n      __track(12);");
    gold.append("\n      __assert_truth(1 <= 3.14, 13, 2, 13, 19);");
    gold.append("\n      __track(13);");
    gold.append("\n      __assert_truth(!(1 > 3.14), 14, 2, 14, 21);");
    gold.append("\n      __track(14);");
    gold.append("\n      __assert_truth(!(1 >= 3.14), 15, 2, 15, 22);");
    gold.append("\n      __track(15);");
    gold.append("\n      __assert_truth(3.14 > 1, 16, 2, 16, 18);");
    gold.append("\n      __track(16);");
    gold.append("\n      __assert_truth(3.14 >= 1, 17, 2, 17, 19);");
    gold.append("\n      __track(17);");
    gold.append("\n      __assert_truth(!(3.14 < 1), 18, 2, 18, 21);");
    gold.append("\n      __track(18);");
    gold.append("\n      __assert_truth(!(3.14 <= 1), 19, 2, 19, 22);");
    gold.append("\n      __track(19);");
    gold.append("\n      __assert_truth(2.71 < 3.14, 20, 2, 20, 21);");
    gold.append("\n      __track(20);");
    gold.append("\n      __assert_truth(2.71 <= 3.14, 21, 2, 21, 22);");
    gold.append("\n      __track(21);");
    gold.append("\n      __assert_truth(!(2.71 > 3.14), 22, 2, 22, 24);");
    gold.append("\n      __track(22);");
    gold.append("\n      __assert_truth(!(2.71 >= 3.14), 23, 2, 23, 25);");
    gold.append("\n      __track(23);");
    gold.append("\n      __assert_truth(3.14 > 2.71, 24, 2, 24, 21);");
    gold.append("\n      __track(24);");
    gold.append("\n      __assert_truth(3.14 >= 2.71, 25, 2, 25, 22);");
    gold.append("\n      __track(25);");
    gold.append("\n      __assert_truth(!(3.14 < 2.71), 26, 2, 26, 24);");
    gold.append("\n      __track(26);");
    gold.append("\n      __assert_truth(!(3.14 <= 2.71), 27, 2, 27, 25);");
    gold.append("\n    }");
    gold.append("\n    report.end(getAndResetAssertions());");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {\"PrimaryTest\"};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {");
    gold.append("\n    switch(testName) {");
    gold.append("\n      case \"PrimaryTest\":");
    gold.append("\n          __test_PrimaryTest(report);");
    gold.append("\n          return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, NtMessageBase message) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:384");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":2}");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"seq\":3}");
    gold.append("\nRANDO was DENIED:");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nMEMORY:502");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\nTEST[PrimaryTest] = 100.0%");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_OperationsAdditionCases_3 = null;
  private String get_OperationsAdditionCases_3() {
    if (cached_OperationsAdditionCases_3 != null) {
      return cached_OperationsAdditionCases_3;
    }
    cached_OperationsAdditionCases_3 = generateTestOutput(true, "OperationsAdditionCases_3", "./test_code/BinaryExpression_OperationsAdditionCases_success.a");
    return cached_OperationsAdditionCases_3;
  }

  @Test
  public void testOperationsAdditionCasesEmission() {
    assertEmissionGood(get_OperationsAdditionCases_3());
  }

  @Test
  public void testOperationsAdditionCasesSuccess() {
    assertLivePass(get_OperationsAdditionCases_3());
  }

  @Test
  public void testOperationsAdditionCasesGoodWillHappy() {
    assertGoodWillHappy(get_OperationsAdditionCases_3());
  }

  @Test
  public void testOperationsAdditionCasesExceptionFree() {
    assertExceptionFree(get_OperationsAdditionCases_3());
  }

  @Test
  public void testOperationsAdditionCasesTODOFree() {
    assertTODOFree(get_OperationsAdditionCases_3());
  }

  @Test
  public void stable_OperationsAdditionCases_3() {
    String live = get_OperationsAdditionCases_3();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_OperationsAdditionCases_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class OperationsAdditionCases_3 extends LivingDocument {");
    gold.append("\n  private final RxLazy<Integer> f0;");
    gold.append("\n  private final RxLazy<Long> f1;");
    gold.append("\n  private final RxLazy<Double> f2;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f3;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f4;");
    gold.append("\n  private final RxLazy<NtComplex> f5;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f6;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f7;");
    gold.append("\n  private final RxLazy<Integer> f8;");
    gold.append("\n  private final RxLazy<Long> f9;");
    gold.append("\n  private final RxLazy<Double> f10;");
    gold.append("\n  private final RxLazy<NtComplex> f11;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f12;");
    gold.append("\n  private final RxLazy<String> f13;");
    gold.append("\n  private final RxLazy<String> f14;");
    gold.append("\n  private final RxLazy<String> f15;");
    gold.append("\n  private final RxLazy<Long> f16;");
    gold.append("\n  private final RxLazy<Long> f17;");
    gold.append("\n  private final RxLazy<Double> f18;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f19;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f20;");
    gold.append("\n  private final RxLazy<NtComplex> f21;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f22;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f23;");
    gold.append("\n  private final RxLazy<Long> f24;");
    gold.append("\n  private final RxLazy<Long> f25;");
    gold.append("\n  private final RxLazy<Double> f26;");
    gold.append("\n  private final RxLazy<NtComplex> f27;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f28;");
    gold.append("\n  private final RxLazy<String> f29;");
    gold.append("\n  private final RxLazy<String> f30;");
    gold.append("\n  private final RxLazy<String> f31;");
    gold.append("\n  private final RxLazy<Double> f32;");
    gold.append("\n  private final RxLazy<Double> f33;");
    gold.append("\n  private final RxLazy<Double> f34;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f35;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f36;");
    gold.append("\n  private final RxLazy<NtComplex> f37;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f38;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f39;");
    gold.append("\n  private final RxLazy<Double> f40;");
    gold.append("\n  private final RxLazy<Double> f41;");
    gold.append("\n  private final RxLazy<Double> f42;");
    gold.append("\n  private final RxLazy<NtComplex> f43;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f44;");
    gold.append("\n  private final RxLazy<String> f45;");
    gold.append("\n  private final RxLazy<String> f46;");
    gold.append("\n  private final RxLazy<String> f47;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f48;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f49;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f50;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f51;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f52;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f53;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f54;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f55;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f56;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f57;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f58;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f59;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f60;");
    gold.append("\n  private final RxLazy<String> f61;");
    gold.append("\n  private final RxLazy<String> f62;");
    gold.append("\n  private final RxLazy<String> f63;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f64;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f65;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f66;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f67;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f68;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f69;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f70;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f71;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f72;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f73;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f74;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f75;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f76;");
    gold.append("\n  private final RxLazy<String> f77;");
    gold.append("\n  private final RxLazy<String> f78;");
    gold.append("\n  private final RxLazy<String> f79;");
    gold.append("\n  private final RxLazy<NtComplex> f80;");
    gold.append("\n  private final RxLazy<NtComplex> f81;");
    gold.append("\n  private final RxLazy<NtComplex> f82;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f83;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f84;");
    gold.append("\n  private final RxLazy<NtComplex> f85;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f86;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f87;");
    gold.append("\n  private final RxLazy<NtComplex> f88;");
    gold.append("\n  private final RxLazy<NtComplex> f89;");
    gold.append("\n  private final RxLazy<NtComplex> f90;");
    gold.append("\n  private final RxLazy<NtComplex> f91;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f92;");
    gold.append("\n  private final RxLazy<String> f93;");
    gold.append("\n  private final RxLazy<String> f94;");
    gold.append("\n  private final RxLazy<String> f95;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f96;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f97;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f98;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f99;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f100;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f101;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f102;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f103;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f104;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f105;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f106;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f107;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f108;");
    gold.append("\n  private final RxLazy<String> f109;");
    gold.append("\n  private final RxLazy<String> f110;");
    gold.append("\n  private final RxLazy<String> f111;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f112;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f113;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f114;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f115;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f116;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f117;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f118;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f119;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f120;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f121;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f122;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f123;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f124;");
    gold.append("\n  private final RxLazy<String> f125;");
    gold.append("\n  private final RxLazy<String> f126;");
    gold.append("\n  private final RxLazy<String> f127;");
    gold.append("\n  private final RxLazy<Integer> f128;");
    gold.append("\n  private final RxLazy<Long> f129;");
    gold.append("\n  private final RxLazy<Double> f130;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f131;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f132;");
    gold.append("\n  private final RxLazy<NtComplex> f133;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f134;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f135;");
    gold.append("\n  private final RxLazy<Integer> f136;");
    gold.append("\n  private final RxLazy<Long> f137;");
    gold.append("\n  private final RxLazy<Double> f138;");
    gold.append("\n  private final RxLazy<NtComplex> f139;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f140;");
    gold.append("\n  private final RxLazy<String> f141;");
    gold.append("\n  private final RxLazy<String> f142;");
    gold.append("\n  private final RxLazy<String> f143;");
    gold.append("\n  private final RxLazy<Long> f144;");
    gold.append("\n  private final RxLazy<Long> f145;");
    gold.append("\n  private final RxLazy<Double> f146;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f147;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f148;");
    gold.append("\n  private final RxLazy<NtComplex> f149;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f150;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f151;");
    gold.append("\n  private final RxLazy<Long> f152;");
    gold.append("\n  private final RxLazy<Long> f153;");
    gold.append("\n  private final RxLazy<Double> f154;");
    gold.append("\n  private final RxLazy<NtComplex> f155;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f156;");
    gold.append("\n  private final RxLazy<String> f157;");
    gold.append("\n  private final RxLazy<String> f158;");
    gold.append("\n  private final RxLazy<String> f159;");
    gold.append("\n  private final RxLazy<Double> f160;");
    gold.append("\n  private final RxLazy<Double> f161;");
    gold.append("\n  private final RxLazy<Double> f162;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f163;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f164;");
    gold.append("\n  private final RxLazy<NtComplex> f165;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f166;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f167;");
    gold.append("\n  private final RxLazy<Double> f168;");
    gold.append("\n  private final RxLazy<Double> f169;");
    gold.append("\n  private final RxLazy<Double> f170;");
    gold.append("\n  private final RxLazy<NtComplex> f171;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f172;");
    gold.append("\n  private final RxLazy<String> f173;");
    gold.append("\n  private final RxLazy<String> f174;");
    gold.append("\n  private final RxLazy<String> f175;");
    gold.append("\n  private final RxLazy<NtComplex> f176;");
    gold.append("\n  private final RxLazy<NtComplex> f177;");
    gold.append("\n  private final RxLazy<NtComplex> f178;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f179;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f180;");
    gold.append("\n  private final RxLazy<NtComplex> f181;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f182;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f183;");
    gold.append("\n  private final RxLazy<NtComplex> f184;");
    gold.append("\n  private final RxLazy<NtComplex> f185;");
    gold.append("\n  private final RxLazy<NtComplex> f186;");
    gold.append("\n  private final RxLazy<NtComplex> f187;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f188;");
    gold.append("\n  private final RxLazy<String> f189;");
    gold.append("\n  private final RxLazy<String> f190;");
    gold.append("\n  private final RxLazy<String> f191;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f192;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f193;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f194;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f195;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f196;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f197;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f198;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f199;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f200;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f201;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f202;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f203;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f204;");
    gold.append("\n  private final RxLazy<String> f205;");
    gold.append("\n  private final RxLazy<String> f206;");
    gold.append("\n  private final RxLazy<String> f207;");
    gold.append("\n  private final RxLazy<String> f208;");
    gold.append("\n  private final RxLazy<String> f209;");
    gold.append("\n  private final RxLazy<String> f210;");
    gold.append("\n  private final RxLazy<String> f211;");
    gold.append("\n  private final RxLazy<String> f212;");
    gold.append("\n  private final RxLazy<String> f213;");
    gold.append("\n  private final RxLazy<String> f214;");
    gold.append("\n  private final RxLazy<String> f215;");
    gold.append("\n  private final RxLazy<String> f216;");
    gold.append("\n  private final RxLazy<String> f217;");
    gold.append("\n  private final RxLazy<String> f218;");
    gold.append("\n  private final RxLazy<String> f219;");
    gold.append("\n  private final RxLazy<String> f220;");
    gold.append("\n  private final RxLazy<String> f221;");
    gold.append("\n  private final RxLazy<String> f222;");
    gold.append("\n  private final RxLazy<String> f223;");
    gold.append("\n  private final RxLazy<String> f224;");
    gold.append("\n  private final RxLazy<String> f225;");
    gold.append("\n  private final RxLazy<String> f226;");
    gold.append("\n  private final RxLazy<String> f227;");
    gold.append("\n  private final RxLazy<String> f228;");
    gold.append("\n  private final RxLazy<String> f229;");
    gold.append("\n  private final RxLazy<String> f230;");
    gold.append("\n  private final RxLazy<String> f231;");
    gold.append("\n  private final RxLazy<String> f232;");
    gold.append("\n  private final RxLazy<String> f233;");
    gold.append("\n  private final RxLazy<String> f234;");
    gold.append("\n  private final RxLazy<String> f235;");
    gold.append("\n  private final RxLazy<String> f236;");
    gold.append("\n  private final RxLazy<String> f237;");
    gold.append("\n  private final RxLazy<String> f238;");
    gold.append("\n  private final RxLazy<String> f239;");
    gold.append("\n  private final RxLazy<String> f240;");
    gold.append("\n  private final RxLazy<String> f241;");
    gold.append("\n  private final RxLazy<String> f242;");
    gold.append("\n  private final RxLazy<String> f243;");
    gold.append("\n  private final RxLazy<String> f244;");
    gold.append("\n  private final RxLazy<String> f245;");
    gold.append("\n  private final RxLazy<String> f246;");
    gold.append("\n  private final RxLazy<String> f247;");
    gold.append("\n  private final RxLazy<String> f248;");
    gold.append("\n  private final RxLazy<String> f249;");
    gold.append("\n  private final RxLazy<String> f250;");
    gold.append("\n  private final RxLazy<String> f251;");
    gold.append("\n  private final RxLazy<String> f252;");
    gold.append("\n  private final RxLazy<String> f253;");
    gold.append("\n  private final RxLazy<String> f254;");
    gold.append("\n  private final RxLazy<String> f255;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += f0.__memory();");
    gold.append("\n    __sum += f1.__memory();");
    gold.append("\n    __sum += f2.__memory();");
    gold.append("\n    __sum += f3.__memory();");
    gold.append("\n    __sum += f4.__memory();");
    gold.append("\n    __sum += f5.__memory();");
    gold.append("\n    __sum += f6.__memory();");
    gold.append("\n    __sum += f7.__memory();");
    gold.append("\n    __sum += f8.__memory();");
    gold.append("\n    __sum += f9.__memory();");
    gold.append("\n    __sum += f10.__memory();");
    gold.append("\n    __sum += f11.__memory();");
    gold.append("\n    __sum += f12.__memory();");
    gold.append("\n    __sum += f13.__memory();");
    gold.append("\n    __sum += f14.__memory();");
    gold.append("\n    __sum += f15.__memory();");
    gold.append("\n    __sum += f16.__memory();");
    gold.append("\n    __sum += f17.__memory();");
    gold.append("\n    __sum += f18.__memory();");
    gold.append("\n    __sum += f19.__memory();");
    gold.append("\n    __sum += f20.__memory();");
    gold.append("\n    __sum += f21.__memory();");
    gold.append("\n    __sum += f22.__memory();");
    gold.append("\n    __sum += f23.__memory();");
    gold.append("\n    __sum += f24.__memory();");
    gold.append("\n    __sum += f25.__memory();");
    gold.append("\n    __sum += f26.__memory();");
    gold.append("\n    __sum += f27.__memory();");
    gold.append("\n    __sum += f28.__memory();");
    gold.append("\n    __sum += f29.__memory();");
    gold.append("\n    __sum += f30.__memory();");
    gold.append("\n    __sum += f31.__memory();");
    gold.append("\n    __sum += f32.__memory();");
    gold.append("\n    __sum += f33.__memory();");
    gold.append("\n    __sum += f34.__memory();");
    gold.append("\n    __sum += f35.__memory();");
    gold.append("\n    __sum += f36.__memory();");
    gold.append("\n    __sum += f37.__memory();");
    gold.append("\n    __sum += f38.__memory();");
    gold.append("\n    __sum += f39.__memory();");
    gold.append("\n    __sum += f40.__memory();");
    gold.append("\n    __sum += f41.__memory();");
    gold.append("\n    __sum += f42.__memory();");
    gold.append("\n    __sum += f43.__memory();");
    gold.append("\n    __sum += f44.__memory();");
    gold.append("\n    __sum += f45.__memory();");
    gold.append("\n    __sum += f46.__memory();");
    gold.append("\n    __sum += f47.__memory();");
    gold.append("\n    __sum += f48.__memory();");
    gold.append("\n    __sum += f49.__memory();");
    gold.append("\n    __sum += f50.__memory();");
    gold.append("\n    __sum += f51.__memory();");
    gold.append("\n    __sum += f52.__memory();");
    gold.append("\n    __sum += f53.__memory();");
    gold.append("\n    __sum += f54.__memory();");
    gold.append("\n    __sum += f55.__memory();");
    gold.append("\n    __sum += f56.__memory();");
    gold.append("\n    __sum += f57.__memory();");
    gold.append("\n    __sum += f58.__memory();");
    gold.append("\n    __sum += f59.__memory();");
    gold.append("\n    __sum += f60.__memory();");
    gold.append("\n    __sum += f61.__memory();");
    gold.append("\n    __sum += f62.__memory();");
    gold.append("\n    __sum += f63.__memory();");
    gold.append("\n    __sum += f64.__memory();");
    gold.append("\n    __sum += f65.__memory();");
    gold.append("\n    __sum += f66.__memory();");
    gold.append("\n    __sum += f67.__memory();");
    gold.append("\n    __sum += f68.__memory();");
    gold.append("\n    __sum += f69.__memory();");
    gold.append("\n    __sum += f70.__memory();");
    gold.append("\n    __sum += f71.__memory();");
    gold.append("\n    __sum += f72.__memory();");
    gold.append("\n    __sum += f73.__memory();");
    gold.append("\n    __sum += f74.__memory();");
    gold.append("\n    __sum += f75.__memory();");
    gold.append("\n    __sum += f76.__memory();");
    gold.append("\n    __sum += f77.__memory();");
    gold.append("\n    __sum += f78.__memory();");
    gold.append("\n    __sum += f79.__memory();");
    gold.append("\n    __sum += f80.__memory();");
    gold.append("\n    __sum += f81.__memory();");
    gold.append("\n    __sum += f82.__memory();");
    gold.append("\n    __sum += f83.__memory();");
    gold.append("\n    __sum += f84.__memory();");
    gold.append("\n    __sum += f85.__memory();");
    gold.append("\n    __sum += f86.__memory();");
    gold.append("\n    __sum += f87.__memory();");
    gold.append("\n    __sum += f88.__memory();");
    gold.append("\n    __sum += f89.__memory();");
    gold.append("\n    __sum += f90.__memory();");
    gold.append("\n    __sum += f91.__memory();");
    gold.append("\n    __sum += f92.__memory();");
    gold.append("\n    __sum += f93.__memory();");
    gold.append("\n    __sum += f94.__memory();");
    gold.append("\n    __sum += f95.__memory();");
    gold.append("\n    __sum += f96.__memory();");
    gold.append("\n    __sum += f97.__memory();");
    gold.append("\n    __sum += f98.__memory();");
    gold.append("\n    __sum += f99.__memory();");
    gold.append("\n    __sum += f100.__memory();");
    gold.append("\n    __sum += f101.__memory();");
    gold.append("\n    __sum += f102.__memory();");
    gold.append("\n    __sum += f103.__memory();");
    gold.append("\n    __sum += f104.__memory();");
    gold.append("\n    __sum += f105.__memory();");
    gold.append("\n    __sum += f106.__memory();");
    gold.append("\n    __sum += f107.__memory();");
    gold.append("\n    __sum += f108.__memory();");
    gold.append("\n    __sum += f109.__memory();");
    gold.append("\n    __sum += f110.__memory();");
    gold.append("\n    __sum += f111.__memory();");
    gold.append("\n    __sum += f112.__memory();");
    gold.append("\n    __sum += f113.__memory();");
    gold.append("\n    __sum += f114.__memory();");
    gold.append("\n    __sum += f115.__memory();");
    gold.append("\n    __sum += f116.__memory();");
    gold.append("\n    __sum += f117.__memory();");
    gold.append("\n    __sum += f118.__memory();");
    gold.append("\n    __sum += f119.__memory();");
    gold.append("\n    __sum += f120.__memory();");
    gold.append("\n    __sum += f121.__memory();");
    gold.append("\n    __sum += f122.__memory();");
    gold.append("\n    __sum += f123.__memory();");
    gold.append("\n    __sum += f124.__memory();");
    gold.append("\n    __sum += f125.__memory();");
    gold.append("\n    __sum += f126.__memory();");
    gold.append("\n    __sum += f127.__memory();");
    gold.append("\n    __sum += f128.__memory();");
    gold.append("\n    __sum += f129.__memory();");
    gold.append("\n    __sum += f130.__memory();");
    gold.append("\n    __sum += f131.__memory();");
    gold.append("\n    __sum += f132.__memory();");
    gold.append("\n    __sum += f133.__memory();");
    gold.append("\n    __sum += f134.__memory();");
    gold.append("\n    __sum += f135.__memory();");
    gold.append("\n    __sum += f136.__memory();");
    gold.append("\n    __sum += f137.__memory();");
    gold.append("\n    __sum += f138.__memory();");
    gold.append("\n    __sum += f139.__memory();");
    gold.append("\n    __sum += f140.__memory();");
    gold.append("\n    __sum += f141.__memory();");
    gold.append("\n    __sum += f142.__memory();");
    gold.append("\n    __sum += f143.__memory();");
    gold.append("\n    __sum += f144.__memory();");
    gold.append("\n    __sum += f145.__memory();");
    gold.append("\n    __sum += f146.__memory();");
    gold.append("\n    __sum += f147.__memory();");
    gold.append("\n    __sum += f148.__memory();");
    gold.append("\n    __sum += f149.__memory();");
    gold.append("\n    __sum += f150.__memory();");
    gold.append("\n    __sum += f151.__memory();");
    gold.append("\n    __sum += f152.__memory();");
    gold.append("\n    __sum += f153.__memory();");
    gold.append("\n    __sum += f154.__memory();");
    gold.append("\n    __sum += f155.__memory();");
    gold.append("\n    __sum += f156.__memory();");
    gold.append("\n    __sum += f157.__memory();");
    gold.append("\n    __sum += f158.__memory();");
    gold.append("\n    __sum += f159.__memory();");
    gold.append("\n    __sum += f160.__memory();");
    gold.append("\n    __sum += f161.__memory();");
    gold.append("\n    __sum += f162.__memory();");
    gold.append("\n    __sum += f163.__memory();");
    gold.append("\n    __sum += f164.__memory();");
    gold.append("\n    __sum += f165.__memory();");
    gold.append("\n    __sum += f166.__memory();");
    gold.append("\n    __sum += f167.__memory();");
    gold.append("\n    __sum += f168.__memory();");
    gold.append("\n    __sum += f169.__memory();");
    gold.append("\n    __sum += f170.__memory();");
    gold.append("\n    __sum += f171.__memory();");
    gold.append("\n    __sum += f172.__memory();");
    gold.append("\n    __sum += f173.__memory();");
    gold.append("\n    __sum += f174.__memory();");
    gold.append("\n    __sum += f175.__memory();");
    gold.append("\n    __sum += f176.__memory();");
    gold.append("\n    __sum += f177.__memory();");
    gold.append("\n    __sum += f178.__memory();");
    gold.append("\n    __sum += f179.__memory();");
    gold.append("\n    __sum += f180.__memory();");
    gold.append("\n    __sum += f181.__memory();");
    gold.append("\n    __sum += f182.__memory();");
    gold.append("\n    __sum += f183.__memory();");
    gold.append("\n    __sum += f184.__memory();");
    gold.append("\n    __sum += f185.__memory();");
    gold.append("\n    __sum += f186.__memory();");
    gold.append("\n    __sum += f187.__memory();");
    gold.append("\n    __sum += f188.__memory();");
    gold.append("\n    __sum += f189.__memory();");
    gold.append("\n    __sum += f190.__memory();");
    gold.append("\n    __sum += f191.__memory();");
    gold.append("\n    __sum += f192.__memory();");
    gold.append("\n    __sum += f193.__memory();");
    gold.append("\n    __sum += f194.__memory();");
    gold.append("\n    __sum += f195.__memory();");
    gold.append("\n    __sum += f196.__memory();");
    gold.append("\n    __sum += f197.__memory();");
    gold.append("\n    __sum += f198.__memory();");
    gold.append("\n    __sum += f199.__memory();");
    gold.append("\n    __sum += f200.__memory();");
    gold.append("\n    __sum += f201.__memory();");
    gold.append("\n    __sum += f202.__memory();");
    gold.append("\n    __sum += f203.__memory();");
    gold.append("\n    __sum += f204.__memory();");
    gold.append("\n    __sum += f205.__memory();");
    gold.append("\n    __sum += f206.__memory();");
    gold.append("\n    __sum += f207.__memory();");
    gold.append("\n    __sum += f208.__memory();");
    gold.append("\n    __sum += f209.__memory();");
    gold.append("\n    __sum += f210.__memory();");
    gold.append("\n    __sum += f211.__memory();");
    gold.append("\n    __sum += f212.__memory();");
    gold.append("\n    __sum += f213.__memory();");
    gold.append("\n    __sum += f214.__memory();");
    gold.append("\n    __sum += f215.__memory();");
    gold.append("\n    __sum += f216.__memory();");
    gold.append("\n    __sum += f217.__memory();");
    gold.append("\n    __sum += f218.__memory();");
    gold.append("\n    __sum += f219.__memory();");
    gold.append("\n    __sum += f220.__memory();");
    gold.append("\n    __sum += f221.__memory();");
    gold.append("\n    __sum += f222.__memory();");
    gold.append("\n    __sum += f223.__memory();");
    gold.append("\n    __sum += f224.__memory();");
    gold.append("\n    __sum += f225.__memory();");
    gold.append("\n    __sum += f226.__memory();");
    gold.append("\n    __sum += f227.__memory();");
    gold.append("\n    __sum += f228.__memory();");
    gold.append("\n    __sum += f229.__memory();");
    gold.append("\n    __sum += f230.__memory();");
    gold.append("\n    __sum += f231.__memory();");
    gold.append("\n    __sum += f232.__memory();");
    gold.append("\n    __sum += f233.__memory();");
    gold.append("\n    __sum += f234.__memory();");
    gold.append("\n    __sum += f235.__memory();");
    gold.append("\n    __sum += f236.__memory();");
    gold.append("\n    __sum += f237.__memory();");
    gold.append("\n    __sum += f238.__memory();");
    gold.append("\n    __sum += f239.__memory();");
    gold.append("\n    __sum += f240.__memory();");
    gold.append("\n    __sum += f241.__memory();");
    gold.append("\n    __sum += f242.__memory();");
    gold.append("\n    __sum += f243.__memory();");
    gold.append("\n    __sum += f244.__memory();");
    gold.append("\n    __sum += f245.__memory();");
    gold.append("\n    __sum += f246.__memory();");
    gold.append("\n    __sum += f247.__memory();");
    gold.append("\n    __sum += f248.__memory();");
    gold.append("\n    __sum += f249.__memory();");
    gold.append("\n    __sum += f250.__memory();");
    gold.append("\n    __sum += f251.__memory();");
    gold.append("\n    __sum += f252.__memory();");
    gold.append("\n    __sum += f253.__memory();");
    gold.append("\n    __sum += f254.__memory();");
    gold.append("\n    __sum += f255.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public OperationsAdditionCases_3(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    f0 = new RxLazy<Integer>(this, () -> (1 + 1));");
    gold.append("\n    f1 = new RxLazy<Long>(this, () -> (1 + 1L));");
    gold.append("\n    f2 = new RxLazy<Double>(this, () -> (1 + 0.5));");
    gold.append("\n    f3 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDI((LibArithmetic.Divide.II(1, 2)), 1)));");
    gold.append("\n    f4 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDI((LibArithmetic.Divide.II(1, 0)), 1)));");
    gold.append("\n    f5 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CI(new NtComplex(0.0, 1.0), 1)));");
    gold.append("\n    f6 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1)));");
    gold.append("\n    f7 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f8 = new RxLazy<Integer>(this, () -> (1 + 0));");
    gold.append("\n    f9 = new RxLazy<Long>(this, () -> (1 + 0L));");
    gold.append("\n    f10 = new RxLazy<Double>(this, () -> (1 + 0.0));");
    gold.append("\n    f11 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f12 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1)));");
    gold.append("\n    f13 = new RxLazy<String>(this, () -> (1 + \"x\"));");
    gold.append("\n    f14 = new RxLazy<String>(this, () -> (1 + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f15 = new RxLazy<String>(this, () -> (1 + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f16 = new RxLazy<Long>(this, () -> (1L + 1));");
    gold.append("\n    f17 = new RxLazy<Long>(this, () -> (1L + 1L));");
    gold.append("\n    f18 = new RxLazy<Double>(this, () -> (1L + 0.5));");
    gold.append("\n    f19 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDL((LibArithmetic.Divide.II(1, 2)), 1L)));");
    gold.append("\n    f20 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDL((LibArithmetic.Divide.II(1, 0)), 1L)));");
    gold.append("\n    f21 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CL(new NtComplex(0.0, 1.0), 1L)));");
    gold.append("\n    f22 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1L)));");
    gold.append("\n    f23 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f24 = new RxLazy<Long>(this, () -> (1L + 0));");
    gold.append("\n    f25 = new RxLazy<Long>(this, () -> (1L + 0L));");
    gold.append("\n    f26 = new RxLazy<Double>(this, () -> (1L + 0.0));");
    gold.append("\n    f27 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f28 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1L)));");
    gold.append("\n    f29 = new RxLazy<String>(this, () -> (1L + \"x\"));");
    gold.append("\n    f30 = new RxLazy<String>(this, () -> (1L + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f31 = new RxLazy<String>(this, () -> (1L + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f32 = new RxLazy<Double>(this, () -> (0.5 + 1));");
    gold.append("\n    f33 = new RxLazy<Double>(this, () -> (0.5 + 1L));");
    gold.append("\n    f34 = new RxLazy<Double>(this, () -> (0.5 + 0.5));");
    gold.append("\n    f35 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDD((LibArithmetic.Divide.II(1, 2)), 0.5)));");
    gold.append("\n    f36 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDD((LibArithmetic.Divide.II(1, 0)), 0.5)));");
    gold.append("\n    f37 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CD(new NtComplex(0.0, 1.0), 0.5)));");
    gold.append("\n    f38 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.5)));");
    gold.append("\n    f39 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f40 = new RxLazy<Double>(this, () -> (0.5 + 0));");
    gold.append("\n    f41 = new RxLazy<Double>(this, () -> (0.5 + 0L));");
    gold.append("\n    f42 = new RxLazy<Double>(this, () -> (0.5 + 0.0));");
    gold.append("\n    f43 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f44 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.5)));");
    gold.append("\n    f45 = new RxLazy<String>(this, () -> (0.5 + \"x\"));");
    gold.append("\n    f46 = new RxLazy<String>(this, () -> (0.5 + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f47 = new RxLazy<String>(this, () -> (0.5 + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f48 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDI((LibArithmetic.Divide.II(1, 2)), 1)));");
    gold.append("\n    f49 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDL((LibArithmetic.Divide.II(1, 2)), 1L)));");
    gold.append("\n    f50 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDD((LibArithmetic.Divide.II(1, 2)), 0.5)));");
    gold.append("\n    f51 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDmD((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f52 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDmD((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f53 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f54 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f55 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f56 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDI((LibArithmetic.Divide.II(1, 2)), 0)));");
    gold.append("\n    f57 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDL((LibArithmetic.Divide.II(1, 2)), 0L)));");
    gold.append("\n    f58 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDD((LibArithmetic.Divide.II(1, 2)), 0.0)));");
    gold.append("\n    f59 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f60 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f61 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.II(1, 2)) + \"x\"));");
    gold.append("\n    f62 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.II(1, 2)) + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f63 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.II(1, 2)) + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f64 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDI((LibArithmetic.Divide.II(1, 0)), 1)));");
    gold.append("\n    f65 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDL((LibArithmetic.Divide.II(1, 0)), 1L)));");
    gold.append("\n    f66 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDD((LibArithmetic.Divide.II(1, 0)), 0.5)));");
    gold.append("\n    f67 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDmD((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f68 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDmD((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f69 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f70 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f71 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f72 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDI((LibArithmetic.Divide.II(1, 0)), 0)));");
    gold.append("\n    f73 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDL((LibArithmetic.Divide.II(1, 0)), 0L)));");
    gold.append("\n    f74 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDD((LibArithmetic.Divide.II(1, 0)), 0.0)));");
    gold.append("\n    f75 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f76 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f77 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.II(1, 0)) + \"x\"));");
    gold.append("\n    f78 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.II(1, 0)) + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f79 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.II(1, 0)) + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f80 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CI(new NtComplex(0.0, 1.0), 1)));");
    gold.append("\n    f81 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CL(new NtComplex(0.0, 1.0), 1L)));");
    gold.append("\n    f82 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CD(new NtComplex(0.0, 1.0), 0.5)));");
    gold.append("\n    f83 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f84 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f85 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CC(new NtComplex(0.0, 1.0), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f86 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f87 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f88 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CI(new NtComplex(0.0, 1.0), 0)));");
    gold.append("\n    f89 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CL(new NtComplex(0.0, 1.0), 0L)));");
    gold.append("\n    f90 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CD(new NtComplex(0.0, 1.0), 0.0)));");
    gold.append("\n    f91 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CC(new NtComplex(0.0, 1.0), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f92 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f93 = new RxLazy<String>(this, () -> (new NtComplex(0.0, 1.0) + \"x\"));");
    gold.append("\n    f94 = new RxLazy<String>(this, () -> (new NtComplex(0.0, 1.0) + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f95 = new RxLazy<String>(this, () -> (new NtComplex(0.0, 1.0) + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f96 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1)));");
    gold.append("\n    f97 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1L)));");
    gold.append("\n    f98 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.5)));");
    gold.append("\n    f99 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f100 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f101 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f102 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f103 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f104 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0)));");
    gold.append("\n    f105 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0L)));");
    gold.append("\n    f106 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.0)));");
    gold.append("\n    f107 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f108 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f109 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))) + \"x\"));");
    gold.append("\n    f110 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))) + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f111 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))) + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f112 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f113 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f114 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f115 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f116 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f117 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f118 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f119 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f120 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f121 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f122 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f123 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f124 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f125 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)) + \"x\"));");
    gold.append("\n    f126 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)) + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f127 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)) + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f128 = new RxLazy<Integer>(this, () -> (0 + 1));");
    gold.append("\n    f129 = new RxLazy<Long>(this, () -> (0 + 1L));");
    gold.append("\n    f130 = new RxLazy<Double>(this, () -> (0 + 0.5));");
    gold.append("\n    f131 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDI((LibArithmetic.Divide.II(1, 2)), 0)));");
    gold.append("\n    f132 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDI((LibArithmetic.Divide.II(1, 0)), 0)));");
    gold.append("\n    f133 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CI(new NtComplex(0.0, 1.0), 0)));");
    gold.append("\n    f134 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0)));");
    gold.append("\n    f135 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f136 = new RxLazy<Integer>(this, () -> (0 + 0));");
    gold.append("\n    f137 = new RxLazy<Long>(this, () -> (0 + 0L));");
    gold.append("\n    f138 = new RxLazy<Double>(this, () -> (0 + 0.0));");
    gold.append("\n    f139 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f140 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0)));");
    gold.append("\n    f141 = new RxLazy<String>(this, () -> (0 + \"x\"));");
    gold.append("\n    f142 = new RxLazy<String>(this, () -> (0 + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f143 = new RxLazy<String>(this, () -> (0 + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f144 = new RxLazy<Long>(this, () -> (0L + 1));");
    gold.append("\n    f145 = new RxLazy<Long>(this, () -> (0L + 1L));");
    gold.append("\n    f146 = new RxLazy<Double>(this, () -> (0L + 0.5));");
    gold.append("\n    f147 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDL((LibArithmetic.Divide.II(1, 2)), 0L)));");
    gold.append("\n    f148 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDL((LibArithmetic.Divide.II(1, 0)), 0L)));");
    gold.append("\n    f149 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CL(new NtComplex(0.0, 1.0), 0L)));");
    gold.append("\n    f150 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0L)));");
    gold.append("\n    f151 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f152 = new RxLazy<Long>(this, () -> (0L + 0));");
    gold.append("\n    f153 = new RxLazy<Long>(this, () -> (0L + 0L));");
    gold.append("\n    f154 = new RxLazy<Double>(this, () -> (0L + 0.0));");
    gold.append("\n    f155 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f156 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0L)));");
    gold.append("\n    f157 = new RxLazy<String>(this, () -> (0L + \"x\"));");
    gold.append("\n    f158 = new RxLazy<String>(this, () -> (0L + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f159 = new RxLazy<String>(this, () -> (0L + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f160 = new RxLazy<Double>(this, () -> (0.0 + 1));");
    gold.append("\n    f161 = new RxLazy<Double>(this, () -> (0.0 + 1L));");
    gold.append("\n    f162 = new RxLazy<Double>(this, () -> (0.0 + 0.5));");
    gold.append("\n    f163 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDD((LibArithmetic.Divide.II(1, 2)), 0.0)));");
    gold.append("\n    f164 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Add.mDD((LibArithmetic.Divide.II(1, 0)), 0.0)));");
    gold.append("\n    f165 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CD(new NtComplex(0.0, 1.0), 0.0)));");
    gold.append("\n    f166 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.0)));");
    gold.append("\n    f167 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f168 = new RxLazy<Double>(this, () -> (0.0 + 0));");
    gold.append("\n    f169 = new RxLazy<Double>(this, () -> (0.0 + 0L));");
    gold.append("\n    f170 = new RxLazy<Double>(this, () -> (0.0 + 0.0));");
    gold.append("\n    f171 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f172 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.0)));");
    gold.append("\n    f173 = new RxLazy<String>(this, () -> (0.0 + \"x\"));");
    gold.append("\n    f174 = new RxLazy<String>(this, () -> (0.0 + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f175 = new RxLazy<String>(this, () -> (0.0 + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f176 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f177 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f178 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f179 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f180 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f181 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f182 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f183 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f184 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f185 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f186 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f187 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Add.CC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f188 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f189 = new RxLazy<String>(this, () -> ((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)) + \"x\"));");
    gold.append("\n    f190 = new RxLazy<String>(this, () -> ((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)) + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f191 = new RxLazy<String>(this, () -> ((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)) + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f192 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1)));");
    gold.append("\n    f193 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1L)));");
    gold.append("\n    f194 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.5)));");
    gold.append("\n    f195 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f196 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f197 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f198 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f199 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f200 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0)));");
    gold.append("\n    f201 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0L)));");
    gold.append("\n    f202 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.0)));");
    gold.append("\n    f203 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f204 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Add.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f205 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)) + \"x\"));");
    gold.append("\n    f206 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)) + (new NtMaybe<String>(\"x\")).toString()));");
    gold.append("\n    f207 = new RxLazy<String>(this, () -> ((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)) + (new NtMaybe<String>()).toString()));");
    gold.append("\n    f208 = new RxLazy<String>(this, () -> (\"x\" + 1));");
    gold.append("\n    f209 = new RxLazy<String>(this, () -> (\"x\" + 1L));");
    gold.append("\n    f210 = new RxLazy<String>(this, () -> (\"x\" + 0.5));");
    gold.append("\n    f211 = new RxLazy<String>(this, () -> (\"x\" + (LibArithmetic.Divide.II(1, 2))));");
    gold.append("\n    f212 = new RxLazy<String>(this, () -> (\"x\" + (LibArithmetic.Divide.II(1, 0))));");
    gold.append("\n    f213 = new RxLazy<String>(this, () -> (\"x\" + new NtComplex(0.0, 1.0)));");
    gold.append("\n    f214 = new RxLazy<String>(this, () -> (\"x\" + (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0)))));");
    gold.append("\n    f215 = new RxLazy<String>(this, () -> (\"x\" + (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0))));");
    gold.append("\n    f216 = new RxLazy<String>(this, () -> (\"x\" + 0));");
    gold.append("\n    f217 = new RxLazy<String>(this, () -> (\"x\" + 0L));");
    gold.append("\n    f218 = new RxLazy<String>(this, () -> (\"x\" + 0.0));");
    gold.append("\n    f219 = new RxLazy<String>(this, () -> (\"x\" + (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0))));");
    gold.append("\n    f220 = new RxLazy<String>(this, () -> (\"x\" + (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0))));");
    gold.append("\n    f221 = new RxLazy<String>(this, () -> (\"x\" + \"x\"));");
    gold.append("\n    f222 = new RxLazy<String>(this, () -> (\"x\" + new NtMaybe<String>(\"x\")));");
    gold.append("\n    f223 = new RxLazy<String>(this, () -> (\"x\" + new NtMaybe<String>()));");
    gold.append("\n    f224 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + 1));");
    gold.append("\n    f225 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + 1L));");
    gold.append("\n    f226 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + 0.5));");
    gold.append("\n    f227 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + (LibArithmetic.Divide.II(1, 2))));");
    gold.append("\n    f228 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + (LibArithmetic.Divide.II(1, 0))));");
    gold.append("\n    f229 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + new NtComplex(0.0, 1.0)));");
    gold.append("\n    f230 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0)))));");
    gold.append("\n    f231 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0))));");
    gold.append("\n    f232 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + 0));");
    gold.append("\n    f233 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + 0L));");
    gold.append("\n    f234 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + 0.0));");
    gold.append("\n    f235 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0))));");
    gold.append("\n    f236 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0))));");
    gold.append("\n    f237 = new RxLazy<String>(this, () -> (new NtMaybe<String>(\"x\") + \"x\"));");
    gold.append("\n    f238 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + new NtMaybe<String>(\"x\")));");
    gold.append("\n    f239 = new RxLazy<String>(this, () -> ((new NtMaybe<String>(\"x\")).toString() + new NtMaybe<String>()));");
    gold.append("\n    f240 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + 1));");
    gold.append("\n    f241 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + 1L));");
    gold.append("\n    f242 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + 0.5));");
    gold.append("\n    f243 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + (LibArithmetic.Divide.II(1, 2))));");
    gold.append("\n    f244 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + (LibArithmetic.Divide.II(1, 0))));");
    gold.append("\n    f245 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + new NtComplex(0.0, 1.0)));");
    gold.append("\n    f246 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0)))));");
    gold.append("\n    f247 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0))));");
    gold.append("\n    f248 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + 0));");
    gold.append("\n    f249 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + 0L));");
    gold.append("\n    f250 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + 0.0));");
    gold.append("\n    f251 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0))));");
    gold.append("\n    f252 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0))));");
    gold.append("\n    f253 = new RxLazy<String>(this, () -> (new NtMaybe<String>() + \"x\"));");
    gold.append("\n    f254 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + new NtMaybe<String>(\"x\")));");
    gold.append("\n    f255 = new RxLazy<String>(this, () -> ((new NtMaybe<String>()).toString() + new NtMaybe<String>()));");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaOperationsAdditionCases_3 implements DeltaNode {");
    gold.append("\n    private int __gf0;");
    gold.append("\n    private DInt32 __df0;");
    gold.append("\n    private int __gf1;");
    gold.append("\n    private DInt64 __df1;");
    gold.append("\n    private int __gf2;");
    gold.append("\n    private DDouble __df2;");
    gold.append("\n    private int __gf3;");
    gold.append("\n    private DMaybe<DDouble> __df3;");
    gold.append("\n    private int __gf4;");
    gold.append("\n    private DMaybe<DDouble> __df4;");
    gold.append("\n    private int __gf5;");
    gold.append("\n    private DComplex __df5;");
    gold.append("\n    private int __gf6;");
    gold.append("\n    private DMaybe<DComplex> __df6;");
    gold.append("\n    private int __gf7;");
    gold.append("\n    private DMaybe<DComplex> __df7;");
    gold.append("\n    private int __gf8;");
    gold.append("\n    private DInt32 __df8;");
    gold.append("\n    private int __gf9;");
    gold.append("\n    private DInt64 __df9;");
    gold.append("\n    private int __gf10;");
    gold.append("\n    private DDouble __df10;");
    gold.append("\n    private int __gf11;");
    gold.append("\n    private DComplex __df11;");
    gold.append("\n    private int __gf12;");
    gold.append("\n    private DMaybe<DComplex> __df12;");
    gold.append("\n    private int __gf13;");
    gold.append("\n    private DString __df13;");
    gold.append("\n    private int __gf14;");
    gold.append("\n    private DString __df14;");
    gold.append("\n    private int __gf15;");
    gold.append("\n    private DString __df15;");
    gold.append("\n    private int __gf16;");
    gold.append("\n    private DInt64 __df16;");
    gold.append("\n    private int __gf17;");
    gold.append("\n    private DInt64 __df17;");
    gold.append("\n    private int __gf18;");
    gold.append("\n    private DDouble __df18;");
    gold.append("\n    private int __gf19;");
    gold.append("\n    private DMaybe<DDouble> __df19;");
    gold.append("\n    private int __gf20;");
    gold.append("\n    private DMaybe<DDouble> __df20;");
    gold.append("\n    private int __gf21;");
    gold.append("\n    private DComplex __df21;");
    gold.append("\n    private int __gf22;");
    gold.append("\n    private DMaybe<DComplex> __df22;");
    gold.append("\n    private int __gf23;");
    gold.append("\n    private DMaybe<DComplex> __df23;");
    gold.append("\n    private int __gf24;");
    gold.append("\n    private DInt64 __df24;");
    gold.append("\n    private int __gf25;");
    gold.append("\n    private DInt64 __df25;");
    gold.append("\n    private int __gf26;");
    gold.append("\n    private DDouble __df26;");
    gold.append("\n    private int __gf27;");
    gold.append("\n    private DComplex __df27;");
    gold.append("\n    private int __gf28;");
    gold.append("\n    private DMaybe<DComplex> __df28;");
    gold.append("\n    private int __gf29;");
    gold.append("\n    private DString __df29;");
    gold.append("\n    private int __gf30;");
    gold.append("\n    private DString __df30;");
    gold.append("\n    private int __gf31;");
    gold.append("\n    private DString __df31;");
    gold.append("\n    private int __gf32;");
    gold.append("\n    private DDouble __df32;");
    gold.append("\n    private int __gf33;");
    gold.append("\n    private DDouble __df33;");
    gold.append("\n    private int __gf34;");
    gold.append("\n    private DDouble __df34;");
    gold.append("\n    private int __gf35;");
    gold.append("\n    private DMaybe<DDouble> __df35;");
    gold.append("\n    private int __gf36;");
    gold.append("\n    private DMaybe<DDouble> __df36;");
    gold.append("\n    private int __gf37;");
    gold.append("\n    private DComplex __df37;");
    gold.append("\n    private int __gf38;");
    gold.append("\n    private DMaybe<DComplex> __df38;");
    gold.append("\n    private int __gf39;");
    gold.append("\n    private DMaybe<DComplex> __df39;");
    gold.append("\n    private int __gf40;");
    gold.append("\n    private DDouble __df40;");
    gold.append("\n    private int __gf41;");
    gold.append("\n    private DDouble __df41;");
    gold.append("\n    private int __gf42;");
    gold.append("\n    private DDouble __df42;");
    gold.append("\n    private int __gf43;");
    gold.append("\n    private DComplex __df43;");
    gold.append("\n    private int __gf44;");
    gold.append("\n    private DMaybe<DComplex> __df44;");
    gold.append("\n    private int __gf45;");
    gold.append("\n    private DString __df45;");
    gold.append("\n    private int __gf46;");
    gold.append("\n    private DString __df46;");
    gold.append("\n    private int __gf47;");
    gold.append("\n    private DString __df47;");
    gold.append("\n    private int __gf48;");
    gold.append("\n    private DMaybe<DDouble> __df48;");
    gold.append("\n    private int __gf49;");
    gold.append("\n    private DMaybe<DDouble> __df49;");
    gold.append("\n    private int __gf50;");
    gold.append("\n    private DMaybe<DDouble> __df50;");
    gold.append("\n    private int __gf51;");
    gold.append("\n    private DMaybe<DDouble> __df51;");
    gold.append("\n    private int __gf52;");
    gold.append("\n    private DMaybe<DDouble> __df52;");
    gold.append("\n    private int __gf53;");
    gold.append("\n    private DMaybe<DComplex> __df53;");
    gold.append("\n    private int __gf54;");
    gold.append("\n    private DMaybe<DComplex> __df54;");
    gold.append("\n    private int __gf55;");
    gold.append("\n    private DMaybe<DComplex> __df55;");
    gold.append("\n    private int __gf56;");
    gold.append("\n    private DMaybe<DDouble> __df56;");
    gold.append("\n    private int __gf57;");
    gold.append("\n    private DMaybe<DDouble> __df57;");
    gold.append("\n    private int __gf58;");
    gold.append("\n    private DMaybe<DDouble> __df58;");
    gold.append("\n    private int __gf59;");
    gold.append("\n    private DMaybe<DComplex> __df59;");
    gold.append("\n    private int __gf60;");
    gold.append("\n    private DMaybe<DComplex> __df60;");
    gold.append("\n    private int __gf61;");
    gold.append("\n    private DString __df61;");
    gold.append("\n    private int __gf62;");
    gold.append("\n    private DString __df62;");
    gold.append("\n    private int __gf63;");
    gold.append("\n    private DString __df63;");
    gold.append("\n    private int __gf64;");
    gold.append("\n    private DMaybe<DDouble> __df64;");
    gold.append("\n    private int __gf65;");
    gold.append("\n    private DMaybe<DDouble> __df65;");
    gold.append("\n    private int __gf66;");
    gold.append("\n    private DMaybe<DDouble> __df66;");
    gold.append("\n    private int __gf67;");
    gold.append("\n    private DMaybe<DDouble> __df67;");
    gold.append("\n    private int __gf68;");
    gold.append("\n    private DMaybe<DDouble> __df68;");
    gold.append("\n    private int __gf69;");
    gold.append("\n    private DMaybe<DComplex> __df69;");
    gold.append("\n    private int __gf70;");
    gold.append("\n    private DMaybe<DComplex> __df70;");
    gold.append("\n    private int __gf71;");
    gold.append("\n    private DMaybe<DComplex> __df71;");
    gold.append("\n    private int __gf72;");
    gold.append("\n    private DMaybe<DDouble> __df72;");
    gold.append("\n    private int __gf73;");
    gold.append("\n    private DMaybe<DDouble> __df73;");
    gold.append("\n    private int __gf74;");
    gold.append("\n    private DMaybe<DDouble> __df74;");
    gold.append("\n    private int __gf75;");
    gold.append("\n    private DMaybe<DComplex> __df75;");
    gold.append("\n    private int __gf76;");
    gold.append("\n    private DMaybe<DComplex> __df76;");
    gold.append("\n    private int __gf77;");
    gold.append("\n    private DString __df77;");
    gold.append("\n    private int __gf78;");
    gold.append("\n    private DString __df78;");
    gold.append("\n    private int __gf79;");
    gold.append("\n    private DString __df79;");
    gold.append("\n    private int __gf80;");
    gold.append("\n    private DComplex __df80;");
    gold.append("\n    private int __gf81;");
    gold.append("\n    private DComplex __df81;");
    gold.append("\n    private int __gf82;");
    gold.append("\n    private DComplex __df82;");
    gold.append("\n    private int __gf83;");
    gold.append("\n    private DMaybe<DComplex> __df83;");
    gold.append("\n    private int __gf84;");
    gold.append("\n    private DMaybe<DComplex> __df84;");
    gold.append("\n    private int __gf85;");
    gold.append("\n    private DComplex __df85;");
    gold.append("\n    private int __gf86;");
    gold.append("\n    private DMaybe<DComplex> __df86;");
    gold.append("\n    private int __gf87;");
    gold.append("\n    private DMaybe<DComplex> __df87;");
    gold.append("\n    private int __gf88;");
    gold.append("\n    private DComplex __df88;");
    gold.append("\n    private int __gf89;");
    gold.append("\n    private DComplex __df89;");
    gold.append("\n    private int __gf90;");
    gold.append("\n    private DComplex __df90;");
    gold.append("\n    private int __gf91;");
    gold.append("\n    private DComplex __df91;");
    gold.append("\n    private int __gf92;");
    gold.append("\n    private DMaybe<DComplex> __df92;");
    gold.append("\n    private int __gf93;");
    gold.append("\n    private DString __df93;");
    gold.append("\n    private int __gf94;");
    gold.append("\n    private DString __df94;");
    gold.append("\n    private int __gf95;");
    gold.append("\n    private DString __df95;");
    gold.append("\n    private int __gf96;");
    gold.append("\n    private DMaybe<DComplex> __df96;");
    gold.append("\n    private int __gf97;");
    gold.append("\n    private DMaybe<DComplex> __df97;");
    gold.append("\n    private int __gf98;");
    gold.append("\n    private DMaybe<DComplex> __df98;");
    gold.append("\n    private int __gf99;");
    gold.append("\n    private DMaybe<DComplex> __df99;");
    gold.append("\n    private int __gf100;");
    gold.append("\n    private DMaybe<DComplex> __df100;");
    gold.append("\n    private int __gf101;");
    gold.append("\n    private DMaybe<DComplex> __df101;");
    gold.append("\n    private int __gf102;");
    gold.append("\n    private DMaybe<DComplex> __df102;");
    gold.append("\n    private int __gf103;");
    gold.append("\n    private DMaybe<DComplex> __df103;");
    gold.append("\n    private int __gf104;");
    gold.append("\n    private DMaybe<DComplex> __df104;");
    gold.append("\n    private int __gf105;");
    gold.append("\n    private DMaybe<DComplex> __df105;");
    gold.append("\n    private int __gf106;");
    gold.append("\n    private DMaybe<DComplex> __df106;");
    gold.append("\n    private int __gf107;");
    gold.append("\n    private DMaybe<DComplex> __df107;");
    gold.append("\n    private int __gf108;");
    gold.append("\n    private DMaybe<DComplex> __df108;");
    gold.append("\n    private int __gf109;");
    gold.append("\n    private DString __df109;");
    gold.append("\n    private int __gf110;");
    gold.append("\n    private DString __df110;");
    gold.append("\n    private int __gf111;");
    gold.append("\n    private DString __df111;");
    gold.append("\n    private int __gf112;");
    gold.append("\n    private DMaybe<DComplex> __df112;");
    gold.append("\n    private int __gf113;");
    gold.append("\n    private DMaybe<DComplex> __df113;");
    gold.append("\n    private int __gf114;");
    gold.append("\n    private DMaybe<DComplex> __df114;");
    gold.append("\n    private int __gf115;");
    gold.append("\n    private DMaybe<DComplex> __df115;");
    gold.append("\n    private int __gf116;");
    gold.append("\n    private DMaybe<DComplex> __df116;");
    gold.append("\n    private int __gf117;");
    gold.append("\n    private DMaybe<DComplex> __df117;");
    gold.append("\n    private int __gf118;");
    gold.append("\n    private DMaybe<DComplex> __df118;");
    gold.append("\n    private int __gf119;");
    gold.append("\n    private DMaybe<DComplex> __df119;");
    gold.append("\n    private int __gf120;");
    gold.append("\n    private DMaybe<DComplex> __df120;");
    gold.append("\n    private int __gf121;");
    gold.append("\n    private DMaybe<DComplex> __df121;");
    gold.append("\n    private int __gf122;");
    gold.append("\n    private DMaybe<DComplex> __df122;");
    gold.append("\n    private int __gf123;");
    gold.append("\n    private DMaybe<DComplex> __df123;");
    gold.append("\n    private int __gf124;");
    gold.append("\n    private DMaybe<DComplex> __df124;");
    gold.append("\n    private int __gf125;");
    gold.append("\n    private DString __df125;");
    gold.append("\n    private int __gf126;");
    gold.append("\n    private DString __df126;");
    gold.append("\n    private int __gf127;");
    gold.append("\n    private DString __df127;");
    gold.append("\n    private int __gf128;");
    gold.append("\n    private DInt32 __df128;");
    gold.append("\n    private int __gf129;");
    gold.append("\n    private DInt64 __df129;");
    gold.append("\n    private int __gf130;");
    gold.append("\n    private DDouble __df130;");
    gold.append("\n    private int __gf131;");
    gold.append("\n    private DMaybe<DDouble> __df131;");
    gold.append("\n    private int __gf132;");
    gold.append("\n    private DMaybe<DDouble> __df132;");
    gold.append("\n    private int __gf133;");
    gold.append("\n    private DComplex __df133;");
    gold.append("\n    private int __gf134;");
    gold.append("\n    private DMaybe<DComplex> __df134;");
    gold.append("\n    private int __gf135;");
    gold.append("\n    private DMaybe<DComplex> __df135;");
    gold.append("\n    private int __gf136;");
    gold.append("\n    private DInt32 __df136;");
    gold.append("\n    private int __gf137;");
    gold.append("\n    private DInt64 __df137;");
    gold.append("\n    private int __gf138;");
    gold.append("\n    private DDouble __df138;");
    gold.append("\n    private int __gf139;");
    gold.append("\n    private DComplex __df139;");
    gold.append("\n    private int __gf140;");
    gold.append("\n    private DMaybe<DComplex> __df140;");
    gold.append("\n    private int __gf141;");
    gold.append("\n    private DString __df141;");
    gold.append("\n    private int __gf142;");
    gold.append("\n    private DString __df142;");
    gold.append("\n    private int __gf143;");
    gold.append("\n    private DString __df143;");
    gold.append("\n    private int __gf144;");
    gold.append("\n    private DInt64 __df144;");
    gold.append("\n    private int __gf145;");
    gold.append("\n    private DInt64 __df145;");
    gold.append("\n    private int __gf146;");
    gold.append("\n    private DDouble __df146;");
    gold.append("\n    private int __gf147;");
    gold.append("\n    private DMaybe<DDouble> __df147;");
    gold.append("\n    private int __gf148;");
    gold.append("\n    private DMaybe<DDouble> __df148;");
    gold.append("\n    private int __gf149;");
    gold.append("\n    private DComplex __df149;");
    gold.append("\n    private int __gf150;");
    gold.append("\n    private DMaybe<DComplex> __df150;");
    gold.append("\n    private int __gf151;");
    gold.append("\n    private DMaybe<DComplex> __df151;");
    gold.append("\n    private int __gf152;");
    gold.append("\n    private DInt64 __df152;");
    gold.append("\n    private int __gf153;");
    gold.append("\n    private DInt64 __df153;");
    gold.append("\n    private int __gf154;");
    gold.append("\n    private DDouble __df154;");
    gold.append("\n    private int __gf155;");
    gold.append("\n    private DComplex __df155;");
    gold.append("\n    private int __gf156;");
    gold.append("\n    private DMaybe<DComplex> __df156;");
    gold.append("\n    private int __gf157;");
    gold.append("\n    private DString __df157;");
    gold.append("\n    private int __gf158;");
    gold.append("\n    private DString __df158;");
    gold.append("\n    private int __gf159;");
    gold.append("\n    private DString __df159;");
    gold.append("\n    private int __gf160;");
    gold.append("\n    private DDouble __df160;");
    gold.append("\n    private int __gf161;");
    gold.append("\n    private DDouble __df161;");
    gold.append("\n    private int __gf162;");
    gold.append("\n    private DDouble __df162;");
    gold.append("\n    private int __gf163;");
    gold.append("\n    private DMaybe<DDouble> __df163;");
    gold.append("\n    private int __gf164;");
    gold.append("\n    private DMaybe<DDouble> __df164;");
    gold.append("\n    private int __gf165;");
    gold.append("\n    private DComplex __df165;");
    gold.append("\n    private int __gf166;");
    gold.append("\n    private DMaybe<DComplex> __df166;");
    gold.append("\n    private int __gf167;");
    gold.append("\n    private DMaybe<DComplex> __df167;");
    gold.append("\n    private int __gf168;");
    gold.append("\n    private DDouble __df168;");
    gold.append("\n    private int __gf169;");
    gold.append("\n    private DDouble __df169;");
    gold.append("\n    private int __gf170;");
    gold.append("\n    private DDouble __df170;");
    gold.append("\n    private int __gf171;");
    gold.append("\n    private DComplex __df171;");
    gold.append("\n    private int __gf172;");
    gold.append("\n    private DMaybe<DComplex> __df172;");
    gold.append("\n    private int __gf173;");
    gold.append("\n    private DString __df173;");
    gold.append("\n    private int __gf174;");
    gold.append("\n    private DString __df174;");
    gold.append("\n    private int __gf175;");
    gold.append("\n    private DString __df175;");
    gold.append("\n    private int __gf176;");
    gold.append("\n    private DComplex __df176;");
    gold.append("\n    private int __gf177;");
    gold.append("\n    private DComplex __df177;");
    gold.append("\n    private int __gf178;");
    gold.append("\n    private DComplex __df178;");
    gold.append("\n    private int __gf179;");
    gold.append("\n    private DMaybe<DComplex> __df179;");
    gold.append("\n    private int __gf180;");
    gold.append("\n    private DMaybe<DComplex> __df180;");
    gold.append("\n    private int __gf181;");
    gold.append("\n    private DComplex __df181;");
    gold.append("\n    private int __gf182;");
    gold.append("\n    private DMaybe<DComplex> __df182;");
    gold.append("\n    private int __gf183;");
    gold.append("\n    private DMaybe<DComplex> __df183;");
    gold.append("\n    private int __gf184;");
    gold.append("\n    private DComplex __df184;");
    gold.append("\n    private int __gf185;");
    gold.append("\n    private DComplex __df185;");
    gold.append("\n    private int __gf186;");
    gold.append("\n    private DComplex __df186;");
    gold.append("\n    private int __gf187;");
    gold.append("\n    private DComplex __df187;");
    gold.append("\n    private int __gf188;");
    gold.append("\n    private DMaybe<DComplex> __df188;");
    gold.append("\n    private int __gf189;");
    gold.append("\n    private DString __df189;");
    gold.append("\n    private int __gf190;");
    gold.append("\n    private DString __df190;");
    gold.append("\n    private int __gf191;");
    gold.append("\n    private DString __df191;");
    gold.append("\n    private int __gf192;");
    gold.append("\n    private DMaybe<DComplex> __df192;");
    gold.append("\n    private int __gf193;");
    gold.append("\n    private DMaybe<DComplex> __df193;");
    gold.append("\n    private int __gf194;");
    gold.append("\n    private DMaybe<DComplex> __df194;");
    gold.append("\n    private int __gf195;");
    gold.append("\n    private DMaybe<DComplex> __df195;");
    gold.append("\n    private int __gf196;");
    gold.append("\n    private DMaybe<DComplex> __df196;");
    gold.append("\n    private int __gf197;");
    gold.append("\n    private DMaybe<DComplex> __df197;");
    gold.append("\n    private int __gf198;");
    gold.append("\n    private DMaybe<DComplex> __df198;");
    gold.append("\n    private int __gf199;");
    gold.append("\n    private DMaybe<DComplex> __df199;");
    gold.append("\n    private int __gf200;");
    gold.append("\n    private DMaybe<DComplex> __df200;");
    gold.append("\n    private int __gf201;");
    gold.append("\n    private DMaybe<DComplex> __df201;");
    gold.append("\n    private int __gf202;");
    gold.append("\n    private DMaybe<DComplex> __df202;");
    gold.append("\n    private int __gf203;");
    gold.append("\n    private DMaybe<DComplex> __df203;");
    gold.append("\n    private int __gf204;");
    gold.append("\n    private DMaybe<DComplex> __df204;");
    gold.append("\n    private int __gf205;");
    gold.append("\n    private DString __df205;");
    gold.append("\n    private int __gf206;");
    gold.append("\n    private DString __df206;");
    gold.append("\n    private int __gf207;");
    gold.append("\n    private DString __df207;");
    gold.append("\n    private int __gf208;");
    gold.append("\n    private DString __df208;");
    gold.append("\n    private int __gf209;");
    gold.append("\n    private DString __df209;");
    gold.append("\n    private int __gf210;");
    gold.append("\n    private DString __df210;");
    gold.append("\n    private int __gf211;");
    gold.append("\n    private DString __df211;");
    gold.append("\n    private int __gf212;");
    gold.append("\n    private DString __df212;");
    gold.append("\n    private int __gf213;");
    gold.append("\n    private DString __df213;");
    gold.append("\n    private int __gf214;");
    gold.append("\n    private DString __df214;");
    gold.append("\n    private int __gf215;");
    gold.append("\n    private DString __df215;");
    gold.append("\n    private int __gf216;");
    gold.append("\n    private DString __df216;");
    gold.append("\n    private int __gf217;");
    gold.append("\n    private DString __df217;");
    gold.append("\n    private int __gf218;");
    gold.append("\n    private DString __df218;");
    gold.append("\n    private int __gf219;");
    gold.append("\n    private DString __df219;");
    gold.append("\n    private int __gf220;");
    gold.append("\n    private DString __df220;");
    gold.append("\n    private int __gf221;");
    gold.append("\n    private DString __df221;");
    gold.append("\n    private int __gf222;");
    gold.append("\n    private DString __df222;");
    gold.append("\n    private int __gf223;");
    gold.append("\n    private DString __df223;");
    gold.append("\n    private int __gf224;");
    gold.append("\n    private DString __df224;");
    gold.append("\n    private int __gf225;");
    gold.append("\n    private DString __df225;");
    gold.append("\n    private int __gf226;");
    gold.append("\n    private DString __df226;");
    gold.append("\n    private int __gf227;");
    gold.append("\n    private DString __df227;");
    gold.append("\n    private int __gf228;");
    gold.append("\n    private DString __df228;");
    gold.append("\n    private int __gf229;");
    gold.append("\n    private DString __df229;");
    gold.append("\n    private int __gf230;");
    gold.append("\n    private DString __df230;");
    gold.append("\n    private int __gf231;");
    gold.append("\n    private DString __df231;");
    gold.append("\n    private int __gf232;");
    gold.append("\n    private DString __df232;");
    gold.append("\n    private int __gf233;");
    gold.append("\n    private DString __df233;");
    gold.append("\n    private int __gf234;");
    gold.append("\n    private DString __df234;");
    gold.append("\n    private int __gf235;");
    gold.append("\n    private DString __df235;");
    gold.append("\n    private int __gf236;");
    gold.append("\n    private DString __df236;");
    gold.append("\n    private int __gf237;");
    gold.append("\n    private DString __df237;");
    gold.append("\n    private int __gf238;");
    gold.append("\n    private DString __df238;");
    gold.append("\n    private int __gf239;");
    gold.append("\n    private DString __df239;");
    gold.append("\n    private int __gf240;");
    gold.append("\n    private DString __df240;");
    gold.append("\n    private int __gf241;");
    gold.append("\n    private DString __df241;");
    gold.append("\n    private int __gf242;");
    gold.append("\n    private DString __df242;");
    gold.append("\n    private int __gf243;");
    gold.append("\n    private DString __df243;");
    gold.append("\n    private int __gf244;");
    gold.append("\n    private DString __df244;");
    gold.append("\n    private int __gf245;");
    gold.append("\n    private DString __df245;");
    gold.append("\n    private int __gf246;");
    gold.append("\n    private DString __df246;");
    gold.append("\n    private int __gf247;");
    gold.append("\n    private DString __df247;");
    gold.append("\n    private int __gf248;");
    gold.append("\n    private DString __df248;");
    gold.append("\n    private int __gf249;");
    gold.append("\n    private DString __df249;");
    gold.append("\n    private int __gf250;");
    gold.append("\n    private DString __df250;");
    gold.append("\n    private int __gf251;");
    gold.append("\n    private DString __df251;");
    gold.append("\n    private int __gf252;");
    gold.append("\n    private DString __df252;");
    gold.append("\n    private int __gf253;");
    gold.append("\n    private DString __df253;");
    gold.append("\n    private int __gf254;");
    gold.append("\n    private DString __df254;");
    gold.append("\n    private int __gf255;");
    gold.append("\n    private DString __df255;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaOperationsAdditionCases_3() {");
    gold.append("\n      __gf0 = -1;");
    gold.append("\n      __df0 = new DInt32();");
    gold.append("\n      __gf1 = -1;");
    gold.append("\n      __df1 = new DInt64();");
    gold.append("\n      __gf2 = -1;");
    gold.append("\n      __df2 = new DDouble();");
    gold.append("\n      __gf3 = -1;");
    gold.append("\n      __df3 = new DMaybe<DDouble>();");
    gold.append("\n      __gf4 = -1;");
    gold.append("\n      __df4 = new DMaybe<DDouble>();");
    gold.append("\n      __gf5 = -1;");
    gold.append("\n      __df5 = new DComplex();");
    gold.append("\n      __gf6 = -1;");
    gold.append("\n      __df6 = new DMaybe<DComplex>();");
    gold.append("\n      __gf7 = -1;");
    gold.append("\n      __df7 = new DMaybe<DComplex>();");
    gold.append("\n      __gf8 = -1;");
    gold.append("\n      __df8 = new DInt32();");
    gold.append("\n      __gf9 = -1;");
    gold.append("\n      __df9 = new DInt64();");
    gold.append("\n      __gf10 = -1;");
    gold.append("\n      __df10 = new DDouble();");
    gold.append("\n      __gf11 = -1;");
    gold.append("\n      __df11 = new DComplex();");
    gold.append("\n      __gf12 = -1;");
    gold.append("\n      __df12 = new DMaybe<DComplex>();");
    gold.append("\n      __gf13 = -1;");
    gold.append("\n      __df13 = new DString();");
    gold.append("\n      __gf14 = -1;");
    gold.append("\n      __df14 = new DString();");
    gold.append("\n      __gf15 = -1;");
    gold.append("\n      __df15 = new DString();");
    gold.append("\n      __gf16 = -1;");
    gold.append("\n      __df16 = new DInt64();");
    gold.append("\n      __gf17 = -1;");
    gold.append("\n      __df17 = new DInt64();");
    gold.append("\n      __gf18 = -1;");
    gold.append("\n      __df18 = new DDouble();");
    gold.append("\n      __gf19 = -1;");
    gold.append("\n      __df19 = new DMaybe<DDouble>();");
    gold.append("\n      __gf20 = -1;");
    gold.append("\n      __df20 = new DMaybe<DDouble>();");
    gold.append("\n      __gf21 = -1;");
    gold.append("\n      __df21 = new DComplex();");
    gold.append("\n      __gf22 = -1;");
    gold.append("\n      __df22 = new DMaybe<DComplex>();");
    gold.append("\n      __gf23 = -1;");
    gold.append("\n      __df23 = new DMaybe<DComplex>();");
    gold.append("\n      __gf24 = -1;");
    gold.append("\n      __df24 = new DInt64();");
    gold.append("\n      __gf25 = -1;");
    gold.append("\n      __df25 = new DInt64();");
    gold.append("\n      __gf26 = -1;");
    gold.append("\n      __df26 = new DDouble();");
    gold.append("\n      __gf27 = -1;");
    gold.append("\n      __df27 = new DComplex();");
    gold.append("\n      __gf28 = -1;");
    gold.append("\n      __df28 = new DMaybe<DComplex>();");
    gold.append("\n      __gf29 = -1;");
    gold.append("\n      __df29 = new DString();");
    gold.append("\n      __gf30 = -1;");
    gold.append("\n      __df30 = new DString();");
    gold.append("\n      __gf31 = -1;");
    gold.append("\n      __df31 = new DString();");
    gold.append("\n      __gf32 = -1;");
    gold.append("\n      __df32 = new DDouble();");
    gold.append("\n      __gf33 = -1;");
    gold.append("\n      __df33 = new DDouble();");
    gold.append("\n      __gf34 = -1;");
    gold.append("\n      __df34 = new DDouble();");
    gold.append("\n      __gf35 = -1;");
    gold.append("\n      __df35 = new DMaybe<DDouble>();");
    gold.append("\n      __gf36 = -1;");
    gold.append("\n      __df36 = new DMaybe<DDouble>();");
    gold.append("\n      __gf37 = -1;");
    gold.append("\n      __df37 = new DComplex();");
    gold.append("\n      __gf38 = -1;");
    gold.append("\n      __df38 = new DMaybe<DComplex>();");
    gold.append("\n      __gf39 = -1;");
    gold.append("\n      __df39 = new DMaybe<DComplex>();");
    gold.append("\n      __gf40 = -1;");
    gold.append("\n      __df40 = new DDouble();");
    gold.append("\n      __gf41 = -1;");
    gold.append("\n      __df41 = new DDouble();");
    gold.append("\n      __gf42 = -1;");
    gold.append("\n      __df42 = new DDouble();");
    gold.append("\n      __gf43 = -1;");
    gold.append("\n      __df43 = new DComplex();");
    gold.append("\n      __gf44 = -1;");
    gold.append("\n      __df44 = new DMaybe<DComplex>();");
    gold.append("\n      __gf45 = -1;");
    gold.append("\n      __df45 = new DString();");
    gold.append("\n      __gf46 = -1;");
    gold.append("\n      __df46 = new DString();");
    gold.append("\n      __gf47 = -1;");
    gold.append("\n      __df47 = new DString();");
    gold.append("\n      __gf48 = -1;");
    gold.append("\n      __df48 = new DMaybe<DDouble>();");
    gold.append("\n      __gf49 = -1;");
    gold.append("\n      __df49 = new DMaybe<DDouble>();");
    gold.append("\n      __gf50 = -1;");
    gold.append("\n      __df50 = new DMaybe<DDouble>();");
    gold.append("\n      __gf51 = -1;");
    gold.append("\n      __df51 = new DMaybe<DDouble>();");
    gold.append("\n      __gf52 = -1;");
    gold.append("\n      __df52 = new DMaybe<DDouble>();");
    gold.append("\n      __gf53 = -1;");
    gold.append("\n      __df53 = new DMaybe<DComplex>();");
    gold.append("\n      __gf54 = -1;");
    gold.append("\n      __df54 = new DMaybe<DComplex>();");
    gold.append("\n      __gf55 = -1;");
    gold.append("\n      __df55 = new DMaybe<DComplex>();");
    gold.append("\n      __gf56 = -1;");
    gold.append("\n      __df56 = new DMaybe<DDouble>();");
    gold.append("\n      __gf57 = -1;");
    gold.append("\n      __df57 = new DMaybe<DDouble>();");
    gold.append("\n      __gf58 = -1;");
    gold.append("\n      __df58 = new DMaybe<DDouble>();");
    gold.append("\n      __gf59 = -1;");
    gold.append("\n      __df59 = new DMaybe<DComplex>();");
    gold.append("\n      __gf60 = -1;");
    gold.append("\n      __df60 = new DMaybe<DComplex>();");
    gold.append("\n      __gf61 = -1;");
    gold.append("\n      __df61 = new DString();");
    gold.append("\n      __gf62 = -1;");
    gold.append("\n      __df62 = new DString();");
    gold.append("\n      __gf63 = -1;");
    gold.append("\n      __df63 = new DString();");
    gold.append("\n      __gf64 = -1;");
    gold.append("\n      __df64 = new DMaybe<DDouble>();");
    gold.append("\n      __gf65 = -1;");
    gold.append("\n      __df65 = new DMaybe<DDouble>();");
    gold.append("\n      __gf66 = -1;");
    gold.append("\n      __df66 = new DMaybe<DDouble>();");
    gold.append("\n      __gf67 = -1;");
    gold.append("\n      __df67 = new DMaybe<DDouble>();");
    gold.append("\n      __gf68 = -1;");
    gold.append("\n      __df68 = new DMaybe<DDouble>();");
    gold.append("\n      __gf69 = -1;");
    gold.append("\n      __df69 = new DMaybe<DComplex>();");
    gold.append("\n      __gf70 = -1;");
    gold.append("\n      __df70 = new DMaybe<DComplex>();");
    gold.append("\n      __gf71 = -1;");
    gold.append("\n      __df71 = new DMaybe<DComplex>();");
    gold.append("\n      __gf72 = -1;");
    gold.append("\n      __df72 = new DMaybe<DDouble>();");
    gold.append("\n      __gf73 = -1;");
    gold.append("\n      __df73 = new DMaybe<DDouble>();");
    gold.append("\n      __gf74 = -1;");
    gold.append("\n      __df74 = new DMaybe<DDouble>();");
    gold.append("\n      __gf75 = -1;");
    gold.append("\n      __df75 = new DMaybe<DComplex>();");
    gold.append("\n      __gf76 = -1;");
    gold.append("\n      __df76 = new DMaybe<DComplex>();");
    gold.append("\n      __gf77 = -1;");
    gold.append("\n      __df77 = new DString();");
    gold.append("\n      __gf78 = -1;");
    gold.append("\n      __df78 = new DString();");
    gold.append("\n      __gf79 = -1;");
    gold.append("\n      __df79 = new DString();");
    gold.append("\n      __gf80 = -1;");
    gold.append("\n      __df80 = new DComplex();");
    gold.append("\n      __gf81 = -1;");
    gold.append("\n      __df81 = new DComplex();");
    gold.append("\n      __gf82 = -1;");
    gold.append("\n      __df82 = new DComplex();");
    gold.append("\n      __gf83 = -1;");
    gold.append("\n      __df83 = new DMaybe<DComplex>();");
    gold.append("\n      __gf84 = -1;");
    gold.append("\n      __df84 = new DMaybe<DComplex>();");
    gold.append("\n      __gf85 = -1;");
    gold.append("\n      __df85 = new DComplex();");
    gold.append("\n      __gf86 = -1;");
    gold.append("\n      __df86 = new DMaybe<DComplex>();");
    gold.append("\n      __gf87 = -1;");
    gold.append("\n      __df87 = new DMaybe<DComplex>();");
    gold.append("\n      __gf88 = -1;");
    gold.append("\n      __df88 = new DComplex();");
    gold.append("\n      __gf89 = -1;");
    gold.append("\n      __df89 = new DComplex();");
    gold.append("\n      __gf90 = -1;");
    gold.append("\n      __df90 = new DComplex();");
    gold.append("\n      __gf91 = -1;");
    gold.append("\n      __df91 = new DComplex();");
    gold.append("\n      __gf92 = -1;");
    gold.append("\n      __df92 = new DMaybe<DComplex>();");
    gold.append("\n      __gf93 = -1;");
    gold.append("\n      __df93 = new DString();");
    gold.append("\n      __gf94 = -1;");
    gold.append("\n      __df94 = new DString();");
    gold.append("\n      __gf95 = -1;");
    gold.append("\n      __df95 = new DString();");
    gold.append("\n      __gf96 = -1;");
    gold.append("\n      __df96 = new DMaybe<DComplex>();");
    gold.append("\n      __gf97 = -1;");
    gold.append("\n      __df97 = new DMaybe<DComplex>();");
    gold.append("\n      __gf98 = -1;");
    gold.append("\n      __df98 = new DMaybe<DComplex>();");
    gold.append("\n      __gf99 = -1;");
    gold.append("\n      __df99 = new DMaybe<DComplex>();");
    gold.append("\n      __gf100 = -1;");
    gold.append("\n      __df100 = new DMaybe<DComplex>();");
    gold.append("\n      __gf101 = -1;");
    gold.append("\n      __df101 = new DMaybe<DComplex>();");
    gold.append("\n      __gf102 = -1;");
    gold.append("\n      __df102 = new DMaybe<DComplex>();");
    gold.append("\n      __gf103 = -1;");
    gold.append("\n      __df103 = new DMaybe<DComplex>();");
    gold.append("\n      __gf104 = -1;");
    gold.append("\n      __df104 = new DMaybe<DComplex>();");
    gold.append("\n      __gf105 = -1;");
    gold.append("\n      __df105 = new DMaybe<DComplex>();");
    gold.append("\n      __gf106 = -1;");
    gold.append("\n      __df106 = new DMaybe<DComplex>();");
    gold.append("\n      __gf107 = -1;");
    gold.append("\n      __df107 = new DMaybe<DComplex>();");
    gold.append("\n      __gf108 = -1;");
    gold.append("\n      __df108 = new DMaybe<DComplex>();");
    gold.append("\n      __gf109 = -1;");
    gold.append("\n      __df109 = new DString();");
    gold.append("\n      __gf110 = -1;");
    gold.append("\n      __df110 = new DString();");
    gold.append("\n      __gf111 = -1;");
    gold.append("\n      __df111 = new DString();");
    gold.append("\n      __gf112 = -1;");
    gold.append("\n      __df112 = new DMaybe<DComplex>();");
    gold.append("\n      __gf113 = -1;");
    gold.append("\n      __df113 = new DMaybe<DComplex>();");
    gold.append("\n      __gf114 = -1;");
    gold.append("\n      __df114 = new DMaybe<DComplex>();");
    gold.append("\n      __gf115 = -1;");
    gold.append("\n      __df115 = new DMaybe<DComplex>();");
    gold.append("\n      __gf116 = -1;");
    gold.append("\n      __df116 = new DMaybe<DComplex>();");
    gold.append("\n      __gf117 = -1;");
    gold.append("\n      __df117 = new DMaybe<DComplex>();");
    gold.append("\n      __gf118 = -1;");
    gold.append("\n      __df118 = new DMaybe<DComplex>();");
    gold.append("\n      __gf119 = -1;");
    gold.append("\n      __df119 = new DMaybe<DComplex>();");
    gold.append("\n      __gf120 = -1;");
    gold.append("\n      __df120 = new DMaybe<DComplex>();");
    gold.append("\n      __gf121 = -1;");
    gold.append("\n      __df121 = new DMaybe<DComplex>();");
    gold.append("\n      __gf122 = -1;");
    gold.append("\n      __df122 = new DMaybe<DComplex>();");
    gold.append("\n      __gf123 = -1;");
    gold.append("\n      __df123 = new DMaybe<DComplex>();");
    gold.append("\n      __gf124 = -1;");
    gold.append("\n      __df124 = new DMaybe<DComplex>();");
    gold.append("\n      __gf125 = -1;");
    gold.append("\n      __df125 = new DString();");
    gold.append("\n      __gf126 = -1;");
    gold.append("\n      __df126 = new DString();");
    gold.append("\n      __gf127 = -1;");
    gold.append("\n      __df127 = new DString();");
    gold.append("\n      __gf128 = -1;");
    gold.append("\n      __df128 = new DInt32();");
    gold.append("\n      __gf129 = -1;");
    gold.append("\n      __df129 = new DInt64();");
    gold.append("\n      __gf130 = -1;");
    gold.append("\n      __df130 = new DDouble();");
    gold.append("\n      __gf131 = -1;");
    gold.append("\n      __df131 = new DMaybe<DDouble>();");
    gold.append("\n      __gf132 = -1;");
    gold.append("\n      __df132 = new DMaybe<DDouble>();");
    gold.append("\n      __gf133 = -1;");
    gold.append("\n      __df133 = new DComplex();");
    gold.append("\n      __gf134 = -1;");
    gold.append("\n      __df134 = new DMaybe<DComplex>();");
    gold.append("\n      __gf135 = -1;");
    gold.append("\n      __df135 = new DMaybe<DComplex>();");
    gold.append("\n      __gf136 = -1;");
    gold.append("\n      __df136 = new DInt32();");
    gold.append("\n      __gf137 = -1;");
    gold.append("\n      __df137 = new DInt64();");
    gold.append("\n      __gf138 = -1;");
    gold.append("\n      __df138 = new DDouble();");
    gold.append("\n      __gf139 = -1;");
    gold.append("\n      __df139 = new DComplex();");
    gold.append("\n      __gf140 = -1;");
    gold.append("\n      __df140 = new DMaybe<DComplex>();");
    gold.append("\n      __gf141 = -1;");
    gold.append("\n      __df141 = new DString();");
    gold.append("\n      __gf142 = -1;");
    gold.append("\n      __df142 = new DString();");
    gold.append("\n      __gf143 = -1;");
    gold.append("\n      __df143 = new DString();");
    gold.append("\n      __gf144 = -1;");
    gold.append("\n      __df144 = new DInt64();");
    gold.append("\n      __gf145 = -1;");
    gold.append("\n      __df145 = new DInt64();");
    gold.append("\n      __gf146 = -1;");
    gold.append("\n      __df146 = new DDouble();");
    gold.append("\n      __gf147 = -1;");
    gold.append("\n      __df147 = new DMaybe<DDouble>();");
    gold.append("\n      __gf148 = -1;");
    gold.append("\n      __df148 = new DMaybe<DDouble>();");
    gold.append("\n      __gf149 = -1;");
    gold.append("\n      __df149 = new DComplex();");
    gold.append("\n      __gf150 = -1;");
    gold.append("\n      __df150 = new DMaybe<DComplex>();");
    gold.append("\n      __gf151 = -1;");
    gold.append("\n      __df151 = new DMaybe<DComplex>();");
    gold.append("\n      __gf152 = -1;");
    gold.append("\n      __df152 = new DInt64();");
    gold.append("\n      __gf153 = -1;");
    gold.append("\n      __df153 = new DInt64();");
    gold.append("\n      __gf154 = -1;");
    gold.append("\n      __df154 = new DDouble();");
    gold.append("\n      __gf155 = -1;");
    gold.append("\n      __df155 = new DComplex();");
    gold.append("\n      __gf156 = -1;");
    gold.append("\n      __df156 = new DMaybe<DComplex>();");
    gold.append("\n      __gf157 = -1;");
    gold.append("\n      __df157 = new DString();");
    gold.append("\n      __gf158 = -1;");
    gold.append("\n      __df158 = new DString();");
    gold.append("\n      __gf159 = -1;");
    gold.append("\n      __df159 = new DString();");
    gold.append("\n      __gf160 = -1;");
    gold.append("\n      __df160 = new DDouble();");
    gold.append("\n      __gf161 = -1;");
    gold.append("\n      __df161 = new DDouble();");
    gold.append("\n      __gf162 = -1;");
    gold.append("\n      __df162 = new DDouble();");
    gold.append("\n      __gf163 = -1;");
    gold.append("\n      __df163 = new DMaybe<DDouble>();");
    gold.append("\n      __gf164 = -1;");
    gold.append("\n      __df164 = new DMaybe<DDouble>();");
    gold.append("\n      __gf165 = -1;");
    gold.append("\n      __df165 = new DComplex();");
    gold.append("\n      __gf166 = -1;");
    gold.append("\n      __df166 = new DMaybe<DComplex>();");
    gold.append("\n      __gf167 = -1;");
    gold.append("\n      __df167 = new DMaybe<DComplex>();");
    gold.append("\n      __gf168 = -1;");
    gold.append("\n      __df168 = new DDouble();");
    gold.append("\n      __gf169 = -1;");
    gold.append("\n      __df169 = new DDouble();");
    gold.append("\n      __gf170 = -1;");
    gold.append("\n      __df170 = new DDouble();");
    gold.append("\n      __gf171 = -1;");
    gold.append("\n      __df171 = new DComplex();");
    gold.append("\n      __gf172 = -1;");
    gold.append("\n      __df172 = new DMaybe<DComplex>();");
    gold.append("\n      __gf173 = -1;");
    gold.append("\n      __df173 = new DString();");
    gold.append("\n      __gf174 = -1;");
    gold.append("\n      __df174 = new DString();");
    gold.append("\n      __gf175 = -1;");
    gold.append("\n      __df175 = new DString();");
    gold.append("\n      __gf176 = -1;");
    gold.append("\n      __df176 = new DComplex();");
    gold.append("\n      __gf177 = -1;");
    gold.append("\n      __df177 = new DComplex();");
    gold.append("\n      __gf178 = -1;");
    gold.append("\n      __df178 = new DComplex();");
    gold.append("\n      __gf179 = -1;");
    gold.append("\n      __df179 = new DMaybe<DComplex>();");
    gold.append("\n      __gf180 = -1;");
    gold.append("\n      __df180 = new DMaybe<DComplex>();");
    gold.append("\n      __gf181 = -1;");
    gold.append("\n      __df181 = new DComplex();");
    gold.append("\n      __gf182 = -1;");
    gold.append("\n      __df182 = new DMaybe<DComplex>();");
    gold.append("\n      __gf183 = -1;");
    gold.append("\n      __df183 = new DMaybe<DComplex>();");
    gold.append("\n      __gf184 = -1;");
    gold.append("\n      __df184 = new DComplex();");
    gold.append("\n      __gf185 = -1;");
    gold.append("\n      __df185 = new DComplex();");
    gold.append("\n      __gf186 = -1;");
    gold.append("\n      __df186 = new DComplex();");
    gold.append("\n      __gf187 = -1;");
    gold.append("\n      __df187 = new DComplex();");
    gold.append("\n      __gf188 = -1;");
    gold.append("\n      __df188 = new DMaybe<DComplex>();");
    gold.append("\n      __gf189 = -1;");
    gold.append("\n      __df189 = new DString();");
    gold.append("\n      __gf190 = -1;");
    gold.append("\n      __df190 = new DString();");
    gold.append("\n      __gf191 = -1;");
    gold.append("\n      __df191 = new DString();");
    gold.append("\n      __gf192 = -1;");
    gold.append("\n      __df192 = new DMaybe<DComplex>();");
    gold.append("\n      __gf193 = -1;");
    gold.append("\n      __df193 = new DMaybe<DComplex>();");
    gold.append("\n      __gf194 = -1;");
    gold.append("\n      __df194 = new DMaybe<DComplex>();");
    gold.append("\n      __gf195 = -1;");
    gold.append("\n      __df195 = new DMaybe<DComplex>();");
    gold.append("\n      __gf196 = -1;");
    gold.append("\n      __df196 = new DMaybe<DComplex>();");
    gold.append("\n      __gf197 = -1;");
    gold.append("\n      __df197 = new DMaybe<DComplex>();");
    gold.append("\n      __gf198 = -1;");
    gold.append("\n      __df198 = new DMaybe<DComplex>();");
    gold.append("\n      __gf199 = -1;");
    gold.append("\n      __df199 = new DMaybe<DComplex>();");
    gold.append("\n      __gf200 = -1;");
    gold.append("\n      __df200 = new DMaybe<DComplex>();");
    gold.append("\n      __gf201 = -1;");
    gold.append("\n      __df201 = new DMaybe<DComplex>();");
    gold.append("\n      __gf202 = -1;");
    gold.append("\n      __df202 = new DMaybe<DComplex>();");
    gold.append("\n      __gf203 = -1;");
    gold.append("\n      __df203 = new DMaybe<DComplex>();");
    gold.append("\n      __gf204 = -1;");
    gold.append("\n      __df204 = new DMaybe<DComplex>();");
    gold.append("\n      __gf205 = -1;");
    gold.append("\n      __df205 = new DString();");
    gold.append("\n      __gf206 = -1;");
    gold.append("\n      __df206 = new DString();");
    gold.append("\n      __gf207 = -1;");
    gold.append("\n      __df207 = new DString();");
    gold.append("\n      __gf208 = -1;");
    gold.append("\n      __df208 = new DString();");
    gold.append("\n      __gf209 = -1;");
    gold.append("\n      __df209 = new DString();");
    gold.append("\n      __gf210 = -1;");
    gold.append("\n      __df210 = new DString();");
    gold.append("\n      __gf211 = -1;");
    gold.append("\n      __df211 = new DString();");
    gold.append("\n      __gf212 = -1;");
    gold.append("\n      __df212 = new DString();");
    gold.append("\n      __gf213 = -1;");
    gold.append("\n      __df213 = new DString();");
    gold.append("\n      __gf214 = -1;");
    gold.append("\n      __df214 = new DString();");
    gold.append("\n      __gf215 = -1;");
    gold.append("\n      __df215 = new DString();");
    gold.append("\n      __gf216 = -1;");
    gold.append("\n      __df216 = new DString();");
    gold.append("\n      __gf217 = -1;");
    gold.append("\n      __df217 = new DString();");
    gold.append("\n      __gf218 = -1;");
    gold.append("\n      __df218 = new DString();");
    gold.append("\n      __gf219 = -1;");
    gold.append("\n      __df219 = new DString();");
    gold.append("\n      __gf220 = -1;");
    gold.append("\n      __df220 = new DString();");
    gold.append("\n      __gf221 = -1;");
    gold.append("\n      __df221 = new DString();");
    gold.append("\n      __gf222 = -1;");
    gold.append("\n      __df222 = new DString();");
    gold.append("\n      __gf223 = -1;");
    gold.append("\n      __df223 = new DString();");
    gold.append("\n      __gf224 = -1;");
    gold.append("\n      __df224 = new DString();");
    gold.append("\n      __gf225 = -1;");
    gold.append("\n      __df225 = new DString();");
    gold.append("\n      __gf226 = -1;");
    gold.append("\n      __df226 = new DString();");
    gold.append("\n      __gf227 = -1;");
    gold.append("\n      __df227 = new DString();");
    gold.append("\n      __gf228 = -1;");
    gold.append("\n      __df228 = new DString();");
    gold.append("\n      __gf229 = -1;");
    gold.append("\n      __df229 = new DString();");
    gold.append("\n      __gf230 = -1;");
    gold.append("\n      __df230 = new DString();");
    gold.append("\n      __gf231 = -1;");
    gold.append("\n      __df231 = new DString();");
    gold.append("\n      __gf232 = -1;");
    gold.append("\n      __df232 = new DString();");
    gold.append("\n      __gf233 = -1;");
    gold.append("\n      __df233 = new DString();");
    gold.append("\n      __gf234 = -1;");
    gold.append("\n      __df234 = new DString();");
    gold.append("\n      __gf235 = -1;");
    gold.append("\n      __df235 = new DString();");
    gold.append("\n      __gf236 = -1;");
    gold.append("\n      __df236 = new DString();");
    gold.append("\n      __gf237 = -1;");
    gold.append("\n      __df237 = new DString();");
    gold.append("\n      __gf238 = -1;");
    gold.append("\n      __df238 = new DString();");
    gold.append("\n      __gf239 = -1;");
    gold.append("\n      __df239 = new DString();");
    gold.append("\n      __gf240 = -1;");
    gold.append("\n      __df240 = new DString();");
    gold.append("\n      __gf241 = -1;");
    gold.append("\n      __df241 = new DString();");
    gold.append("\n      __gf242 = -1;");
    gold.append("\n      __df242 = new DString();");
    gold.append("\n      __gf243 = -1;");
    gold.append("\n      __df243 = new DString();");
    gold.append("\n      __gf244 = -1;");
    gold.append("\n      __df244 = new DString();");
    gold.append("\n      __gf245 = -1;");
    gold.append("\n      __df245 = new DString();");
    gold.append("\n      __gf246 = -1;");
    gold.append("\n      __df246 = new DString();");
    gold.append("\n      __gf247 = -1;");
    gold.append("\n      __df247 = new DString();");
    gold.append("\n      __gf248 = -1;");
    gold.append("\n      __df248 = new DString();");
    gold.append("\n      __gf249 = -1;");
    gold.append("\n      __df249 = new DString();");
    gold.append("\n      __gf250 = -1;");
    gold.append("\n      __df250 = new DString();");
    gold.append("\n      __gf251 = -1;");
    gold.append("\n      __df251 = new DString();");
    gold.append("\n      __gf252 = -1;");
    gold.append("\n      __df252 = new DString();");
    gold.append("\n      __gf253 = -1;");
    gold.append("\n      __df253 = new DString();");
    gold.append("\n      __gf254 = -1;");
    gold.append("\n      __df254 = new DString();");
    gold.append("\n      __gf255 = -1;");
    gold.append("\n      __df255 = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __df0.__memory();");
    gold.append("\n      __sum += __df1.__memory();");
    gold.append("\n      __sum += __df2.__memory();");
    gold.append("\n      __sum += __df3.__memory();");
    gold.append("\n      __sum += __df4.__memory();");
    gold.append("\n      __sum += __df5.__memory();");
    gold.append("\n      __sum += __df6.__memory();");
    gold.append("\n      __sum += __df7.__memory();");
    gold.append("\n      __sum += __df8.__memory();");
    gold.append("\n      __sum += __df9.__memory();");
    gold.append("\n      __sum += __df10.__memory();");
    gold.append("\n      __sum += __df11.__memory();");
    gold.append("\n      __sum += __df12.__memory();");
    gold.append("\n      __sum += __df13.__memory();");
    gold.append("\n      __sum += __df14.__memory();");
    gold.append("\n      __sum += __df15.__memory();");
    gold.append("\n      __sum += __df16.__memory();");
    gold.append("\n      __sum += __df17.__memory();");
    gold.append("\n      __sum += __df18.__memory();");
    gold.append("\n      __sum += __df19.__memory();");
    gold.append("\n      __sum += __df20.__memory();");
    gold.append("\n      __sum += __df21.__memory();");
    gold.append("\n      __sum += __df22.__memory();");
    gold.append("\n      __sum += __df23.__memory();");
    gold.append("\n      __sum += __df24.__memory();");
    gold.append("\n      __sum += __df25.__memory();");
    gold.append("\n      __sum += __df26.__memory();");
    gold.append("\n      __sum += __df27.__memory();");
    gold.append("\n      __sum += __df28.__memory();");
    gold.append("\n      __sum += __df29.__memory();");
    gold.append("\n      __sum += __df30.__memory();");
    gold.append("\n      __sum += __df31.__memory();");
    gold.append("\n      __sum += __df32.__memory();");
    gold.append("\n      __sum += __df33.__memory();");
    gold.append("\n      __sum += __df34.__memory();");
    gold.append("\n      __sum += __df35.__memory();");
    gold.append("\n      __sum += __df36.__memory();");
    gold.append("\n      __sum += __df37.__memory();");
    gold.append("\n      __sum += __df38.__memory();");
    gold.append("\n      __sum += __df39.__memory();");
    gold.append("\n      __sum += __df40.__memory();");
    gold.append("\n      __sum += __df41.__memory();");
    gold.append("\n      __sum += __df42.__memory();");
    gold.append("\n      __sum += __df43.__memory();");
    gold.append("\n      __sum += __df44.__memory();");
    gold.append("\n      __sum += __df45.__memory();");
    gold.append("\n      __sum += __df46.__memory();");
    gold.append("\n      __sum += __df47.__memory();");
    gold.append("\n      __sum += __df48.__memory();");
    gold.append("\n      __sum += __df49.__memory();");
    gold.append("\n      __sum += __df50.__memory();");
    gold.append("\n      __sum += __df51.__memory();");
    gold.append("\n      __sum += __df52.__memory();");
    gold.append("\n      __sum += __df53.__memory();");
    gold.append("\n      __sum += __df54.__memory();");
    gold.append("\n      __sum += __df55.__memory();");
    gold.append("\n      __sum += __df56.__memory();");
    gold.append("\n      __sum += __df57.__memory();");
    gold.append("\n      __sum += __df58.__memory();");
    gold.append("\n      __sum += __df59.__memory();");
    gold.append("\n      __sum += __df60.__memory();");
    gold.append("\n      __sum += __df61.__memory();");
    gold.append("\n      __sum += __df62.__memory();");
    gold.append("\n      __sum += __df63.__memory();");
    gold.append("\n      __sum += __df64.__memory();");
    gold.append("\n      __sum += __df65.__memory();");
    gold.append("\n      __sum += __df66.__memory();");
    gold.append("\n      __sum += __df67.__memory();");
    gold.append("\n      __sum += __df68.__memory();");
    gold.append("\n      __sum += __df69.__memory();");
    gold.append("\n      __sum += __df70.__memory();");
    gold.append("\n      __sum += __df71.__memory();");
    gold.append("\n      __sum += __df72.__memory();");
    gold.append("\n      __sum += __df73.__memory();");
    gold.append("\n      __sum += __df74.__memory();");
    gold.append("\n      __sum += __df75.__memory();");
    gold.append("\n      __sum += __df76.__memory();");
    gold.append("\n      __sum += __df77.__memory();");
    gold.append("\n      __sum += __df78.__memory();");
    gold.append("\n      __sum += __df79.__memory();");
    gold.append("\n      __sum += __df80.__memory();");
    gold.append("\n      __sum += __df81.__memory();");
    gold.append("\n      __sum += __df82.__memory();");
    gold.append("\n      __sum += __df83.__memory();");
    gold.append("\n      __sum += __df84.__memory();");
    gold.append("\n      __sum += __df85.__memory();");
    gold.append("\n      __sum += __df86.__memory();");
    gold.append("\n      __sum += __df87.__memory();");
    gold.append("\n      __sum += __df88.__memory();");
    gold.append("\n      __sum += __df89.__memory();");
    gold.append("\n      __sum += __df90.__memory();");
    gold.append("\n      __sum += __df91.__memory();");
    gold.append("\n      __sum += __df92.__memory();");
    gold.append("\n      __sum += __df93.__memory();");
    gold.append("\n      __sum += __df94.__memory();");
    gold.append("\n      __sum += __df95.__memory();");
    gold.append("\n      __sum += __df96.__memory();");
    gold.append("\n      __sum += __df97.__memory();");
    gold.append("\n      __sum += __df98.__memory();");
    gold.append("\n      __sum += __df99.__memory();");
    gold.append("\n      __sum += __df100.__memory();");
    gold.append("\n      __sum += __df101.__memory();");
    gold.append("\n      __sum += __df102.__memory();");
    gold.append("\n      __sum += __df103.__memory();");
    gold.append("\n      __sum += __df104.__memory();");
    gold.append("\n      __sum += __df105.__memory();");
    gold.append("\n      __sum += __df106.__memory();");
    gold.append("\n      __sum += __df107.__memory();");
    gold.append("\n      __sum += __df108.__memory();");
    gold.append("\n      __sum += __df109.__memory();");
    gold.append("\n      __sum += __df110.__memory();");
    gold.append("\n      __sum += __df111.__memory();");
    gold.append("\n      __sum += __df112.__memory();");
    gold.append("\n      __sum += __df113.__memory();");
    gold.append("\n      __sum += __df114.__memory();");
    gold.append("\n      __sum += __df115.__memory();");
    gold.append("\n      __sum += __df116.__memory();");
    gold.append("\n      __sum += __df117.__memory();");
    gold.append("\n      __sum += __df118.__memory();");
    gold.append("\n      __sum += __df119.__memory();");
    gold.append("\n      __sum += __df120.__memory();");
    gold.append("\n      __sum += __df121.__memory();");
    gold.append("\n      __sum += __df122.__memory();");
    gold.append("\n      __sum += __df123.__memory();");
    gold.append("\n      __sum += __df124.__memory();");
    gold.append("\n      __sum += __df125.__memory();");
    gold.append("\n      __sum += __df126.__memory();");
    gold.append("\n      __sum += __df127.__memory();");
    gold.append("\n      __sum += __df128.__memory();");
    gold.append("\n      __sum += __df129.__memory();");
    gold.append("\n      __sum += __df130.__memory();");
    gold.append("\n      __sum += __df131.__memory();");
    gold.append("\n      __sum += __df132.__memory();");
    gold.append("\n      __sum += __df133.__memory();");
    gold.append("\n      __sum += __df134.__memory();");
    gold.append("\n      __sum += __df135.__memory();");
    gold.append("\n      __sum += __df136.__memory();");
    gold.append("\n      __sum += __df137.__memory();");
    gold.append("\n      __sum += __df138.__memory();");
    gold.append("\n      __sum += __df139.__memory();");
    gold.append("\n      __sum += __df140.__memory();");
    gold.append("\n      __sum += __df141.__memory();");
    gold.append("\n      __sum += __df142.__memory();");
    gold.append("\n      __sum += __df143.__memory();");
    gold.append("\n      __sum += __df144.__memory();");
    gold.append("\n      __sum += __df145.__memory();");
    gold.append("\n      __sum += __df146.__memory();");
    gold.append("\n      __sum += __df147.__memory();");
    gold.append("\n      __sum += __df148.__memory();");
    gold.append("\n      __sum += __df149.__memory();");
    gold.append("\n      __sum += __df150.__memory();");
    gold.append("\n      __sum += __df151.__memory();");
    gold.append("\n      __sum += __df152.__memory();");
    gold.append("\n      __sum += __df153.__memory();");
    gold.append("\n      __sum += __df154.__memory();");
    gold.append("\n      __sum += __df155.__memory();");
    gold.append("\n      __sum += __df156.__memory();");
    gold.append("\n      __sum += __df157.__memory();");
    gold.append("\n      __sum += __df158.__memory();");
    gold.append("\n      __sum += __df159.__memory();");
    gold.append("\n      __sum += __df160.__memory();");
    gold.append("\n      __sum += __df161.__memory();");
    gold.append("\n      __sum += __df162.__memory();");
    gold.append("\n      __sum += __df163.__memory();");
    gold.append("\n      __sum += __df164.__memory();");
    gold.append("\n      __sum += __df165.__memory();");
    gold.append("\n      __sum += __df166.__memory();");
    gold.append("\n      __sum += __df167.__memory();");
    gold.append("\n      __sum += __df168.__memory();");
    gold.append("\n      __sum += __df169.__memory();");
    gold.append("\n      __sum += __df170.__memory();");
    gold.append("\n      __sum += __df171.__memory();");
    gold.append("\n      __sum += __df172.__memory();");
    gold.append("\n      __sum += __df173.__memory();");
    gold.append("\n      __sum += __df174.__memory();");
    gold.append("\n      __sum += __df175.__memory();");
    gold.append("\n      __sum += __df176.__memory();");
    gold.append("\n      __sum += __df177.__memory();");
    gold.append("\n      __sum += __df178.__memory();");
    gold.append("\n      __sum += __df179.__memory();");
    gold.append("\n      __sum += __df180.__memory();");
    gold.append("\n      __sum += __df181.__memory();");
    gold.append("\n      __sum += __df182.__memory();");
    gold.append("\n      __sum += __df183.__memory();");
    gold.append("\n      __sum += __df184.__memory();");
    gold.append("\n      __sum += __df185.__memory();");
    gold.append("\n      __sum += __df186.__memory();");
    gold.append("\n      __sum += __df187.__memory();");
    gold.append("\n      __sum += __df188.__memory();");
    gold.append("\n      __sum += __df189.__memory();");
    gold.append("\n      __sum += __df190.__memory();");
    gold.append("\n      __sum += __df191.__memory();");
    gold.append("\n      __sum += __df192.__memory();");
    gold.append("\n      __sum += __df193.__memory();");
    gold.append("\n      __sum += __df194.__memory();");
    gold.append("\n      __sum += __df195.__memory();");
    gold.append("\n      __sum += __df196.__memory();");
    gold.append("\n      __sum += __df197.__memory();");
    gold.append("\n      __sum += __df198.__memory();");
    gold.append("\n      __sum += __df199.__memory();");
    gold.append("\n      __sum += __df200.__memory();");
    gold.append("\n      __sum += __df201.__memory();");
    gold.append("\n      __sum += __df202.__memory();");
    gold.append("\n      __sum += __df203.__memory();");
    gold.append("\n      __sum += __df204.__memory();");
    gold.append("\n      __sum += __df205.__memory();");
    gold.append("\n      __sum += __df206.__memory();");
    gold.append("\n      __sum += __df207.__memory();");
    gold.append("\n      __sum += __df208.__memory();");
    gold.append("\n      __sum += __df209.__memory();");
    gold.append("\n      __sum += __df210.__memory();");
    gold.append("\n      __sum += __df211.__memory();");
    gold.append("\n      __sum += __df212.__memory();");
    gold.append("\n      __sum += __df213.__memory();");
    gold.append("\n      __sum += __df214.__memory();");
    gold.append("\n      __sum += __df215.__memory();");
    gold.append("\n      __sum += __df216.__memory();");
    gold.append("\n      __sum += __df217.__memory();");
    gold.append("\n      __sum += __df218.__memory();");
    gold.append("\n      __sum += __df219.__memory();");
    gold.append("\n      __sum += __df220.__memory();");
    gold.append("\n      __sum += __df221.__memory();");
    gold.append("\n      __sum += __df222.__memory();");
    gold.append("\n      __sum += __df223.__memory();");
    gold.append("\n      __sum += __df224.__memory();");
    gold.append("\n      __sum += __df225.__memory();");
    gold.append("\n      __sum += __df226.__memory();");
    gold.append("\n      __sum += __df227.__memory();");
    gold.append("\n      __sum += __df228.__memory();");
    gold.append("\n      __sum += __df229.__memory();");
    gold.append("\n      __sum += __df230.__memory();");
    gold.append("\n      __sum += __df231.__memory();");
    gold.append("\n      __sum += __df232.__memory();");
    gold.append("\n      __sum += __df233.__memory();");
    gold.append("\n      __sum += __df234.__memory();");
    gold.append("\n      __sum += __df235.__memory();");
    gold.append("\n      __sum += __df236.__memory();");
    gold.append("\n      __sum += __df237.__memory();");
    gold.append("\n      __sum += __df238.__memory();");
    gold.append("\n      __sum += __df239.__memory();");
    gold.append("\n      __sum += __df240.__memory();");
    gold.append("\n      __sum += __df241.__memory();");
    gold.append("\n      __sum += __df242.__memory();");
    gold.append("\n      __sum += __df243.__memory();");
    gold.append("\n      __sum += __df244.__memory();");
    gold.append("\n      __sum += __df245.__memory();");
    gold.append("\n      __sum += __df246.__memory();");
    gold.append("\n      __sum += __df247.__memory();");
    gold.append("\n      __sum += __df248.__memory();");
    gold.append("\n      __sum += __df249.__memory();");
    gold.append("\n      __sum += __df250.__memory();");
    gold.append("\n      __sum += __df251.__memory();");
    gold.append("\n      __sum += __df252.__memory();");
    gold.append("\n      __sum += __df253.__memory();");
    gold.append("\n      __sum += __df254.__memory();");
    gold.append("\n      __sum += __df255.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(OperationsAdditionCases_3 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 256;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gf0 != __item.f0.getGeneration()) {");
    gold.append("\n        __df0.show(__item.f0.get(), __obj.planField(\"f0\"));");
    gold.append("\n        __gf0 = __item.f0.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf1 != __item.f1.getGeneration()) {");
    gold.append("\n        __df1.show(__item.f1.get(), __obj.planField(\"f1\"));");
    gold.append("\n        __gf1 = __item.f1.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf2 != __item.f2.getGeneration()) {");
    gold.append("\n        __df2.show(__item.f2.get(), __obj.planField(\"f2\"));");
    gold.append("\n        __gf2 = __item.f2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf3 != __item.f3.getGeneration()) {");
    gold.append("\n        if (__item.f3.get().has()) {");
    gold.append("\n          Double __maybeElement0 = (Double)(__item.f3.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement1 = __df3.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement1.show(__maybeElement0, __obj.planField(\"f3\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df3.hide(__obj.planField(\"f3\"));");
    gold.append("\n        }");
    gold.append("\n        __gf3 = __item.f3.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf4 != __item.f4.getGeneration()) {");
    gold.append("\n        if (__item.f4.get().has()) {");
    gold.append("\n          Double __maybeElement2 = (Double)(__item.f4.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement3 = __df4.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement3.show(__maybeElement2, __obj.planField(\"f4\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df4.hide(__obj.planField(\"f4\"));");
    gold.append("\n        }");
    gold.append("\n        __gf4 = __item.f4.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf5 != __item.f5.getGeneration()) {");
    gold.append("\n        __df5.show(__item.f5.get(), __obj.planField(\"f5\"));");
    gold.append("\n        __gf5 = __item.f5.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf6 != __item.f6.getGeneration()) {");
    gold.append("\n        if (__item.f6.get().has()) {");
    gold.append("\n          NtComplex __maybeElement4 = (NtComplex)(__item.f6.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement5 = __df6.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement5.show(__maybeElement4, __obj.planField(\"f6\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df6.hide(__obj.planField(\"f6\"));");
    gold.append("\n        }");
    gold.append("\n        __gf6 = __item.f6.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf7 != __item.f7.getGeneration()) {");
    gold.append("\n        if (__item.f7.get().has()) {");
    gold.append("\n          NtComplex __maybeElement6 = (NtComplex)(__item.f7.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement7 = __df7.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement7.show(__maybeElement6, __obj.planField(\"f7\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df7.hide(__obj.planField(\"f7\"));");
    gold.append("\n        }");
    gold.append("\n        __gf7 = __item.f7.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf8 != __item.f8.getGeneration()) {");
    gold.append("\n        __df8.show(__item.f8.get(), __obj.planField(\"f8\"));");
    gold.append("\n        __gf8 = __item.f8.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf9 != __item.f9.getGeneration()) {");
    gold.append("\n        __df9.show(__item.f9.get(), __obj.planField(\"f9\"));");
    gold.append("\n        __gf9 = __item.f9.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf10 != __item.f10.getGeneration()) {");
    gold.append("\n        __df10.show(__item.f10.get(), __obj.planField(\"f10\"));");
    gold.append("\n        __gf10 = __item.f10.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf11 != __item.f11.getGeneration()) {");
    gold.append("\n        __df11.show(__item.f11.get(), __obj.planField(\"f11\"));");
    gold.append("\n        __gf11 = __item.f11.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf12 != __item.f12.getGeneration()) {");
    gold.append("\n        if (__item.f12.get().has()) {");
    gold.append("\n          NtComplex __maybeElement8 = (NtComplex)(__item.f12.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement9 = __df12.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement9.show(__maybeElement8, __obj.planField(\"f12\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df12.hide(__obj.planField(\"f12\"));");
    gold.append("\n        }");
    gold.append("\n        __gf12 = __item.f12.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf13 != __item.f13.getGeneration()) {");
    gold.append("\n        __df13.show(__item.f13.get(), __obj.planField(\"f13\"));");
    gold.append("\n        __gf13 = __item.f13.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf14 != __item.f14.getGeneration()) {");
    gold.append("\n        __df14.show(__item.f14.get(), __obj.planField(\"f14\"));");
    gold.append("\n        __gf14 = __item.f14.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf15 != __item.f15.getGeneration()) {");
    gold.append("\n        __df15.show(__item.f15.get(), __obj.planField(\"f15\"));");
    gold.append("\n        __gf15 = __item.f15.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf16 != __item.f16.getGeneration()) {");
    gold.append("\n        __df16.show(__item.f16.get(), __obj.planField(\"f16\"));");
    gold.append("\n        __gf16 = __item.f16.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf17 != __item.f17.getGeneration()) {");
    gold.append("\n        __df17.show(__item.f17.get(), __obj.planField(\"f17\"));");
    gold.append("\n        __gf17 = __item.f17.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf18 != __item.f18.getGeneration()) {");
    gold.append("\n        __df18.show(__item.f18.get(), __obj.planField(\"f18\"));");
    gold.append("\n        __gf18 = __item.f18.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf19 != __item.f19.getGeneration()) {");
    gold.append("\n        if (__item.f19.get().has()) {");
    gold.append("\n          Double __maybeElement10 = (Double)(__item.f19.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement11 = __df19.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement11.show(__maybeElement10, __obj.planField(\"f19\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df19.hide(__obj.planField(\"f19\"));");
    gold.append("\n        }");
    gold.append("\n        __gf19 = __item.f19.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf20 != __item.f20.getGeneration()) {");
    gold.append("\n        if (__item.f20.get().has()) {");
    gold.append("\n          Double __maybeElement12 = (Double)(__item.f20.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement13 = __df20.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement13.show(__maybeElement12, __obj.planField(\"f20\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df20.hide(__obj.planField(\"f20\"));");
    gold.append("\n        }");
    gold.append("\n        __gf20 = __item.f20.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf21 != __item.f21.getGeneration()) {");
    gold.append("\n        __df21.show(__item.f21.get(), __obj.planField(\"f21\"));");
    gold.append("\n        __gf21 = __item.f21.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf22 != __item.f22.getGeneration()) {");
    gold.append("\n        if (__item.f22.get().has()) {");
    gold.append("\n          NtComplex __maybeElement14 = (NtComplex)(__item.f22.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement15 = __df22.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement15.show(__maybeElement14, __obj.planField(\"f22\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df22.hide(__obj.planField(\"f22\"));");
    gold.append("\n        }");
    gold.append("\n        __gf22 = __item.f22.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf23 != __item.f23.getGeneration()) {");
    gold.append("\n        if (__item.f23.get().has()) {");
    gold.append("\n          NtComplex __maybeElement16 = (NtComplex)(__item.f23.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement17 = __df23.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement17.show(__maybeElement16, __obj.planField(\"f23\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df23.hide(__obj.planField(\"f23\"));");
    gold.append("\n        }");
    gold.append("\n        __gf23 = __item.f23.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf24 != __item.f24.getGeneration()) {");
    gold.append("\n        __df24.show(__item.f24.get(), __obj.planField(\"f24\"));");
    gold.append("\n        __gf24 = __item.f24.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf25 != __item.f25.getGeneration()) {");
    gold.append("\n        __df25.show(__item.f25.get(), __obj.planField(\"f25\"));");
    gold.append("\n        __gf25 = __item.f25.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf26 != __item.f26.getGeneration()) {");
    gold.append("\n        __df26.show(__item.f26.get(), __obj.planField(\"f26\"));");
    gold.append("\n        __gf26 = __item.f26.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf27 != __item.f27.getGeneration()) {");
    gold.append("\n        __df27.show(__item.f27.get(), __obj.planField(\"f27\"));");
    gold.append("\n        __gf27 = __item.f27.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf28 != __item.f28.getGeneration()) {");
    gold.append("\n        if (__item.f28.get().has()) {");
    gold.append("\n          NtComplex __maybeElement18 = (NtComplex)(__item.f28.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement19 = __df28.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement19.show(__maybeElement18, __obj.planField(\"f28\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df28.hide(__obj.planField(\"f28\"));");
    gold.append("\n        }");
    gold.append("\n        __gf28 = __item.f28.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf29 != __item.f29.getGeneration()) {");
    gold.append("\n        __df29.show(__item.f29.get(), __obj.planField(\"f29\"));");
    gold.append("\n        __gf29 = __item.f29.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf30 != __item.f30.getGeneration()) {");
    gold.append("\n        __df30.show(__item.f30.get(), __obj.planField(\"f30\"));");
    gold.append("\n        __gf30 = __item.f30.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf31 != __item.f31.getGeneration()) {");
    gold.append("\n        __df31.show(__item.f31.get(), __obj.planField(\"f31\"));");
    gold.append("\n        __gf31 = __item.f31.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf32 != __item.f32.getGeneration()) {");
    gold.append("\n        __df32.show(__item.f32.get(), __obj.planField(\"f32\"));");
    gold.append("\n        __gf32 = __item.f32.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf33 != __item.f33.getGeneration()) {");
    gold.append("\n        __df33.show(__item.f33.get(), __obj.planField(\"f33\"));");
    gold.append("\n        __gf33 = __item.f33.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf34 != __item.f34.getGeneration()) {");
    gold.append("\n        __df34.show(__item.f34.get(), __obj.planField(\"f34\"));");
    gold.append("\n        __gf34 = __item.f34.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf35 != __item.f35.getGeneration()) {");
    gold.append("\n        if (__item.f35.get().has()) {");
    gold.append("\n          Double __maybeElement20 = (Double)(__item.f35.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement21 = __df35.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement21.show(__maybeElement20, __obj.planField(\"f35\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df35.hide(__obj.planField(\"f35\"));");
    gold.append("\n        }");
    gold.append("\n        __gf35 = __item.f35.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf36 != __item.f36.getGeneration()) {");
    gold.append("\n        if (__item.f36.get().has()) {");
    gold.append("\n          Double __maybeElement22 = (Double)(__item.f36.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement23 = __df36.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement23.show(__maybeElement22, __obj.planField(\"f36\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df36.hide(__obj.planField(\"f36\"));");
    gold.append("\n        }");
    gold.append("\n        __gf36 = __item.f36.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf37 != __item.f37.getGeneration()) {");
    gold.append("\n        __df37.show(__item.f37.get(), __obj.planField(\"f37\"));");
    gold.append("\n        __gf37 = __item.f37.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf38 != __item.f38.getGeneration()) {");
    gold.append("\n        if (__item.f38.get().has()) {");
    gold.append("\n          NtComplex __maybeElement24 = (NtComplex)(__item.f38.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement25 = __df38.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement25.show(__maybeElement24, __obj.planField(\"f38\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df38.hide(__obj.planField(\"f38\"));");
    gold.append("\n        }");
    gold.append("\n        __gf38 = __item.f38.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf39 != __item.f39.getGeneration()) {");
    gold.append("\n        if (__item.f39.get().has()) {");
    gold.append("\n          NtComplex __maybeElement26 = (NtComplex)(__item.f39.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement27 = __df39.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement27.show(__maybeElement26, __obj.planField(\"f39\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df39.hide(__obj.planField(\"f39\"));");
    gold.append("\n        }");
    gold.append("\n        __gf39 = __item.f39.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf40 != __item.f40.getGeneration()) {");
    gold.append("\n        __df40.show(__item.f40.get(), __obj.planField(\"f40\"));");
    gold.append("\n        __gf40 = __item.f40.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf41 != __item.f41.getGeneration()) {");
    gold.append("\n        __df41.show(__item.f41.get(), __obj.planField(\"f41\"));");
    gold.append("\n        __gf41 = __item.f41.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf42 != __item.f42.getGeneration()) {");
    gold.append("\n        __df42.show(__item.f42.get(), __obj.planField(\"f42\"));");
    gold.append("\n        __gf42 = __item.f42.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf43 != __item.f43.getGeneration()) {");
    gold.append("\n        __df43.show(__item.f43.get(), __obj.planField(\"f43\"));");
    gold.append("\n        __gf43 = __item.f43.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf44 != __item.f44.getGeneration()) {");
    gold.append("\n        if (__item.f44.get().has()) {");
    gold.append("\n          NtComplex __maybeElement28 = (NtComplex)(__item.f44.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement29 = __df44.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement29.show(__maybeElement28, __obj.planField(\"f44\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df44.hide(__obj.planField(\"f44\"));");
    gold.append("\n        }");
    gold.append("\n        __gf44 = __item.f44.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf45 != __item.f45.getGeneration()) {");
    gold.append("\n        __df45.show(__item.f45.get(), __obj.planField(\"f45\"));");
    gold.append("\n        __gf45 = __item.f45.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf46 != __item.f46.getGeneration()) {");
    gold.append("\n        __df46.show(__item.f46.get(), __obj.planField(\"f46\"));");
    gold.append("\n        __gf46 = __item.f46.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf47 != __item.f47.getGeneration()) {");
    gold.append("\n        __df47.show(__item.f47.get(), __obj.planField(\"f47\"));");
    gold.append("\n        __gf47 = __item.f47.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf48 != __item.f48.getGeneration()) {");
    gold.append("\n        if (__item.f48.get().has()) {");
    gold.append("\n          Double __maybeElement30 = (Double)(__item.f48.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement31 = __df48.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement31.show(__maybeElement30, __obj.planField(\"f48\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df48.hide(__obj.planField(\"f48\"));");
    gold.append("\n        }");
    gold.append("\n        __gf48 = __item.f48.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf49 != __item.f49.getGeneration()) {");
    gold.append("\n        if (__item.f49.get().has()) {");
    gold.append("\n          Double __maybeElement32 = (Double)(__item.f49.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement33 = __df49.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement33.show(__maybeElement32, __obj.planField(\"f49\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df49.hide(__obj.planField(\"f49\"));");
    gold.append("\n        }");
    gold.append("\n        __gf49 = __item.f49.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf50 != __item.f50.getGeneration()) {");
    gold.append("\n        if (__item.f50.get().has()) {");
    gold.append("\n          Double __maybeElement34 = (Double)(__item.f50.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement35 = __df50.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement35.show(__maybeElement34, __obj.planField(\"f50\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df50.hide(__obj.planField(\"f50\"));");
    gold.append("\n        }");
    gold.append("\n        __gf50 = __item.f50.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf51 != __item.f51.getGeneration()) {");
    gold.append("\n        if (__item.f51.get().has()) {");
    gold.append("\n          Double __maybeElement36 = (Double)(__item.f51.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement37 = __df51.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement37.show(__maybeElement36, __obj.planField(\"f51\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df51.hide(__obj.planField(\"f51\"));");
    gold.append("\n        }");
    gold.append("\n        __gf51 = __item.f51.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf52 != __item.f52.getGeneration()) {");
    gold.append("\n        if (__item.f52.get().has()) {");
    gold.append("\n          Double __maybeElement38 = (Double)(__item.f52.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement39 = __df52.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement39.show(__maybeElement38, __obj.planField(\"f52\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df52.hide(__obj.planField(\"f52\"));");
    gold.append("\n        }");
    gold.append("\n        __gf52 = __item.f52.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf53 != __item.f53.getGeneration()) {");
    gold.append("\n        if (__item.f53.get().has()) {");
    gold.append("\n          NtComplex __maybeElement40 = (NtComplex)(__item.f53.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement41 = __df53.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement41.show(__maybeElement40, __obj.planField(\"f53\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df53.hide(__obj.planField(\"f53\"));");
    gold.append("\n        }");
    gold.append("\n        __gf53 = __item.f53.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf54 != __item.f54.getGeneration()) {");
    gold.append("\n        if (__item.f54.get().has()) {");
    gold.append("\n          NtComplex __maybeElement42 = (NtComplex)(__item.f54.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement43 = __df54.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement43.show(__maybeElement42, __obj.planField(\"f54\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df54.hide(__obj.planField(\"f54\"));");
    gold.append("\n        }");
    gold.append("\n        __gf54 = __item.f54.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf55 != __item.f55.getGeneration()) {");
    gold.append("\n        if (__item.f55.get().has()) {");
    gold.append("\n          NtComplex __maybeElement44 = (NtComplex)(__item.f55.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement45 = __df55.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement45.show(__maybeElement44, __obj.planField(\"f55\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df55.hide(__obj.planField(\"f55\"));");
    gold.append("\n        }");
    gold.append("\n        __gf55 = __item.f55.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf56 != __item.f56.getGeneration()) {");
    gold.append("\n        if (__item.f56.get().has()) {");
    gold.append("\n          Double __maybeElement46 = (Double)(__item.f56.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement47 = __df56.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement47.show(__maybeElement46, __obj.planField(\"f56\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df56.hide(__obj.planField(\"f56\"));");
    gold.append("\n        }");
    gold.append("\n        __gf56 = __item.f56.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf57 != __item.f57.getGeneration()) {");
    gold.append("\n        if (__item.f57.get().has()) {");
    gold.append("\n          Double __maybeElement48 = (Double)(__item.f57.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement49 = __df57.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement49.show(__maybeElement48, __obj.planField(\"f57\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df57.hide(__obj.planField(\"f57\"));");
    gold.append("\n        }");
    gold.append("\n        __gf57 = __item.f57.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf58 != __item.f58.getGeneration()) {");
    gold.append("\n        if (__item.f58.get().has()) {");
    gold.append("\n          Double __maybeElement50 = (Double)(__item.f58.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement51 = __df58.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement51.show(__maybeElement50, __obj.planField(\"f58\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df58.hide(__obj.planField(\"f58\"));");
    gold.append("\n        }");
    gold.append("\n        __gf58 = __item.f58.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf59 != __item.f59.getGeneration()) {");
    gold.append("\n        if (__item.f59.get().has()) {");
    gold.append("\n          NtComplex __maybeElement52 = (NtComplex)(__item.f59.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement53 = __df59.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement53.show(__maybeElement52, __obj.planField(\"f59\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df59.hide(__obj.planField(\"f59\"));");
    gold.append("\n        }");
    gold.append("\n        __gf59 = __item.f59.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf60 != __item.f60.getGeneration()) {");
    gold.append("\n        if (__item.f60.get().has()) {");
    gold.append("\n          NtComplex __maybeElement54 = (NtComplex)(__item.f60.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement55 = __df60.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement55.show(__maybeElement54, __obj.planField(\"f60\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df60.hide(__obj.planField(\"f60\"));");
    gold.append("\n        }");
    gold.append("\n        __gf60 = __item.f60.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf61 != __item.f61.getGeneration()) {");
    gold.append("\n        __df61.show(__item.f61.get(), __obj.planField(\"f61\"));");
    gold.append("\n        __gf61 = __item.f61.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf62 != __item.f62.getGeneration()) {");
    gold.append("\n        __df62.show(__item.f62.get(), __obj.planField(\"f62\"));");
    gold.append("\n        __gf62 = __item.f62.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf63 != __item.f63.getGeneration()) {");
    gold.append("\n        __df63.show(__item.f63.get(), __obj.planField(\"f63\"));");
    gold.append("\n        __gf63 = __item.f63.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf64 != __item.f64.getGeneration()) {");
    gold.append("\n        if (__item.f64.get().has()) {");
    gold.append("\n          Double __maybeElement56 = (Double)(__item.f64.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement57 = __df64.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement57.show(__maybeElement56, __obj.planField(\"f64\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df64.hide(__obj.planField(\"f64\"));");
    gold.append("\n        }");
    gold.append("\n        __gf64 = __item.f64.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf65 != __item.f65.getGeneration()) {");
    gold.append("\n        if (__item.f65.get().has()) {");
    gold.append("\n          Double __maybeElement58 = (Double)(__item.f65.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement59 = __df65.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement59.show(__maybeElement58, __obj.planField(\"f65\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df65.hide(__obj.planField(\"f65\"));");
    gold.append("\n        }");
    gold.append("\n        __gf65 = __item.f65.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf66 != __item.f66.getGeneration()) {");
    gold.append("\n        if (__item.f66.get().has()) {");
    gold.append("\n          Double __maybeElement60 = (Double)(__item.f66.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement61 = __df66.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement61.show(__maybeElement60, __obj.planField(\"f66\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df66.hide(__obj.planField(\"f66\"));");
    gold.append("\n        }");
    gold.append("\n        __gf66 = __item.f66.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf67 != __item.f67.getGeneration()) {");
    gold.append("\n        if (__item.f67.get().has()) {");
    gold.append("\n          Double __maybeElement62 = (Double)(__item.f67.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement63 = __df67.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement63.show(__maybeElement62, __obj.planField(\"f67\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df67.hide(__obj.planField(\"f67\"));");
    gold.append("\n        }");
    gold.append("\n        __gf67 = __item.f67.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf68 != __item.f68.getGeneration()) {");
    gold.append("\n        if (__item.f68.get().has()) {");
    gold.append("\n          Double __maybeElement64 = (Double)(__item.f68.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement65 = __df68.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement65.show(__maybeElement64, __obj.planField(\"f68\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df68.hide(__obj.planField(\"f68\"));");
    gold.append("\n        }");
    gold.append("\n        __gf68 = __item.f68.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf69 != __item.f69.getGeneration()) {");
    gold.append("\n        if (__item.f69.get().has()) {");
    gold.append("\n          NtComplex __maybeElement66 = (NtComplex)(__item.f69.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement67 = __df69.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement67.show(__maybeElement66, __obj.planField(\"f69\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df69.hide(__obj.planField(\"f69\"));");
    gold.append("\n        }");
    gold.append("\n        __gf69 = __item.f69.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf70 != __item.f70.getGeneration()) {");
    gold.append("\n        if (__item.f70.get().has()) {");
    gold.append("\n          NtComplex __maybeElement68 = (NtComplex)(__item.f70.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement69 = __df70.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement69.show(__maybeElement68, __obj.planField(\"f70\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df70.hide(__obj.planField(\"f70\"));");
    gold.append("\n        }");
    gold.append("\n        __gf70 = __item.f70.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf71 != __item.f71.getGeneration()) {");
    gold.append("\n        if (__item.f71.get().has()) {");
    gold.append("\n          NtComplex __maybeElement70 = (NtComplex)(__item.f71.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement71 = __df71.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement71.show(__maybeElement70, __obj.planField(\"f71\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df71.hide(__obj.planField(\"f71\"));");
    gold.append("\n        }");
    gold.append("\n        __gf71 = __item.f71.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf72 != __item.f72.getGeneration()) {");
    gold.append("\n        if (__item.f72.get().has()) {");
    gold.append("\n          Double __maybeElement72 = (Double)(__item.f72.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement73 = __df72.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement73.show(__maybeElement72, __obj.planField(\"f72\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df72.hide(__obj.planField(\"f72\"));");
    gold.append("\n        }");
    gold.append("\n        __gf72 = __item.f72.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf73 != __item.f73.getGeneration()) {");
    gold.append("\n        if (__item.f73.get().has()) {");
    gold.append("\n          Double __maybeElement74 = (Double)(__item.f73.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement75 = __df73.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement75.show(__maybeElement74, __obj.planField(\"f73\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df73.hide(__obj.planField(\"f73\"));");
    gold.append("\n        }");
    gold.append("\n        __gf73 = __item.f73.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf74 != __item.f74.getGeneration()) {");
    gold.append("\n        if (__item.f74.get().has()) {");
    gold.append("\n          Double __maybeElement76 = (Double)(__item.f74.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement77 = __df74.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement77.show(__maybeElement76, __obj.planField(\"f74\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df74.hide(__obj.planField(\"f74\"));");
    gold.append("\n        }");
    gold.append("\n        __gf74 = __item.f74.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf75 != __item.f75.getGeneration()) {");
    gold.append("\n        if (__item.f75.get().has()) {");
    gold.append("\n          NtComplex __maybeElement78 = (NtComplex)(__item.f75.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement79 = __df75.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement79.show(__maybeElement78, __obj.planField(\"f75\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df75.hide(__obj.planField(\"f75\"));");
    gold.append("\n        }");
    gold.append("\n        __gf75 = __item.f75.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf76 != __item.f76.getGeneration()) {");
    gold.append("\n        if (__item.f76.get().has()) {");
    gold.append("\n          NtComplex __maybeElement80 = (NtComplex)(__item.f76.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement81 = __df76.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement81.show(__maybeElement80, __obj.planField(\"f76\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df76.hide(__obj.planField(\"f76\"));");
    gold.append("\n        }");
    gold.append("\n        __gf76 = __item.f76.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf77 != __item.f77.getGeneration()) {");
    gold.append("\n        __df77.show(__item.f77.get(), __obj.planField(\"f77\"));");
    gold.append("\n        __gf77 = __item.f77.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf78 != __item.f78.getGeneration()) {");
    gold.append("\n        __df78.show(__item.f78.get(), __obj.planField(\"f78\"));");
    gold.append("\n        __gf78 = __item.f78.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf79 != __item.f79.getGeneration()) {");
    gold.append("\n        __df79.show(__item.f79.get(), __obj.planField(\"f79\"));");
    gold.append("\n        __gf79 = __item.f79.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf80 != __item.f80.getGeneration()) {");
    gold.append("\n        __df80.show(__item.f80.get(), __obj.planField(\"f80\"));");
    gold.append("\n        __gf80 = __item.f80.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf81 != __item.f81.getGeneration()) {");
    gold.append("\n        __df81.show(__item.f81.get(), __obj.planField(\"f81\"));");
    gold.append("\n        __gf81 = __item.f81.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf82 != __item.f82.getGeneration()) {");
    gold.append("\n        __df82.show(__item.f82.get(), __obj.planField(\"f82\"));");
    gold.append("\n        __gf82 = __item.f82.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf83 != __item.f83.getGeneration()) {");
    gold.append("\n        if (__item.f83.get().has()) {");
    gold.append("\n          NtComplex __maybeElement82 = (NtComplex)(__item.f83.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement83 = __df83.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement83.show(__maybeElement82, __obj.planField(\"f83\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df83.hide(__obj.planField(\"f83\"));");
    gold.append("\n        }");
    gold.append("\n        __gf83 = __item.f83.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf84 != __item.f84.getGeneration()) {");
    gold.append("\n        if (__item.f84.get().has()) {");
    gold.append("\n          NtComplex __maybeElement84 = (NtComplex)(__item.f84.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement85 = __df84.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement85.show(__maybeElement84, __obj.planField(\"f84\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df84.hide(__obj.planField(\"f84\"));");
    gold.append("\n        }");
    gold.append("\n        __gf84 = __item.f84.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf85 != __item.f85.getGeneration()) {");
    gold.append("\n        __df85.show(__item.f85.get(), __obj.planField(\"f85\"));");
    gold.append("\n        __gf85 = __item.f85.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf86 != __item.f86.getGeneration()) {");
    gold.append("\n        if (__item.f86.get().has()) {");
    gold.append("\n          NtComplex __maybeElement86 = (NtComplex)(__item.f86.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement87 = __df86.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement87.show(__maybeElement86, __obj.planField(\"f86\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df86.hide(__obj.planField(\"f86\"));");
    gold.append("\n        }");
    gold.append("\n        __gf86 = __item.f86.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf87 != __item.f87.getGeneration()) {");
    gold.append("\n        if (__item.f87.get().has()) {");
    gold.append("\n          NtComplex __maybeElement88 = (NtComplex)(__item.f87.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement89 = __df87.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement89.show(__maybeElement88, __obj.planField(\"f87\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df87.hide(__obj.planField(\"f87\"));");
    gold.append("\n        }");
    gold.append("\n        __gf87 = __item.f87.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf88 != __item.f88.getGeneration()) {");
    gold.append("\n        __df88.show(__item.f88.get(), __obj.planField(\"f88\"));");
    gold.append("\n        __gf88 = __item.f88.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf89 != __item.f89.getGeneration()) {");
    gold.append("\n        __df89.show(__item.f89.get(), __obj.planField(\"f89\"));");
    gold.append("\n        __gf89 = __item.f89.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf90 != __item.f90.getGeneration()) {");
    gold.append("\n        __df90.show(__item.f90.get(), __obj.planField(\"f90\"));");
    gold.append("\n        __gf90 = __item.f90.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf91 != __item.f91.getGeneration()) {");
    gold.append("\n        __df91.show(__item.f91.get(), __obj.planField(\"f91\"));");
    gold.append("\n        __gf91 = __item.f91.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf92 != __item.f92.getGeneration()) {");
    gold.append("\n        if (__item.f92.get().has()) {");
    gold.append("\n          NtComplex __maybeElement90 = (NtComplex)(__item.f92.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement91 = __df92.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement91.show(__maybeElement90, __obj.planField(\"f92\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df92.hide(__obj.planField(\"f92\"));");
    gold.append("\n        }");
    gold.append("\n        __gf92 = __item.f92.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf93 != __item.f93.getGeneration()) {");
    gold.append("\n        __df93.show(__item.f93.get(), __obj.planField(\"f93\"));");
    gold.append("\n        __gf93 = __item.f93.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf94 != __item.f94.getGeneration()) {");
    gold.append("\n        __df94.show(__item.f94.get(), __obj.planField(\"f94\"));");
    gold.append("\n        __gf94 = __item.f94.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf95 != __item.f95.getGeneration()) {");
    gold.append("\n        __df95.show(__item.f95.get(), __obj.planField(\"f95\"));");
    gold.append("\n        __gf95 = __item.f95.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf96 != __item.f96.getGeneration()) {");
    gold.append("\n        if (__item.f96.get().has()) {");
    gold.append("\n          NtComplex __maybeElement92 = (NtComplex)(__item.f96.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement93 = __df96.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement93.show(__maybeElement92, __obj.planField(\"f96\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df96.hide(__obj.planField(\"f96\"));");
    gold.append("\n        }");
    gold.append("\n        __gf96 = __item.f96.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf97 != __item.f97.getGeneration()) {");
    gold.append("\n        if (__item.f97.get().has()) {");
    gold.append("\n          NtComplex __maybeElement94 = (NtComplex)(__item.f97.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement95 = __df97.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement95.show(__maybeElement94, __obj.planField(\"f97\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df97.hide(__obj.planField(\"f97\"));");
    gold.append("\n        }");
    gold.append("\n        __gf97 = __item.f97.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf98 != __item.f98.getGeneration()) {");
    gold.append("\n        if (__item.f98.get().has()) {");
    gold.append("\n          NtComplex __maybeElement96 = (NtComplex)(__item.f98.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement97 = __df98.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement97.show(__maybeElement96, __obj.planField(\"f98\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df98.hide(__obj.planField(\"f98\"));");
    gold.append("\n        }");
    gold.append("\n        __gf98 = __item.f98.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf99 != __item.f99.getGeneration()) {");
    gold.append("\n        if (__item.f99.get().has()) {");
    gold.append("\n          NtComplex __maybeElement98 = (NtComplex)(__item.f99.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement99 = __df99.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement99.show(__maybeElement98, __obj.planField(\"f99\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df99.hide(__obj.planField(\"f99\"));");
    gold.append("\n        }");
    gold.append("\n        __gf99 = __item.f99.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf100 != __item.f100.getGeneration()) {");
    gold.append("\n        if (__item.f100.get().has()) {");
    gold.append("\n          NtComplex __maybeElement100 = (NtComplex)(__item.f100.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement101 = __df100.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement101.show(__maybeElement100, __obj.planField(\"f100\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df100.hide(__obj.planField(\"f100\"));");
    gold.append("\n        }");
    gold.append("\n        __gf100 = __item.f100.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf101 != __item.f101.getGeneration()) {");
    gold.append("\n        if (__item.f101.get().has()) {");
    gold.append("\n          NtComplex __maybeElement102 = (NtComplex)(__item.f101.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement103 = __df101.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement103.show(__maybeElement102, __obj.planField(\"f101\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df101.hide(__obj.planField(\"f101\"));");
    gold.append("\n        }");
    gold.append("\n        __gf101 = __item.f101.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf102 != __item.f102.getGeneration()) {");
    gold.append("\n        if (__item.f102.get().has()) {");
    gold.append("\n          NtComplex __maybeElement104 = (NtComplex)(__item.f102.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement105 = __df102.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement105.show(__maybeElement104, __obj.planField(\"f102\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df102.hide(__obj.planField(\"f102\"));");
    gold.append("\n        }");
    gold.append("\n        __gf102 = __item.f102.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf103 != __item.f103.getGeneration()) {");
    gold.append("\n        if (__item.f103.get().has()) {");
    gold.append("\n          NtComplex __maybeElement106 = (NtComplex)(__item.f103.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement107 = __df103.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement107.show(__maybeElement106, __obj.planField(\"f103\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df103.hide(__obj.planField(\"f103\"));");
    gold.append("\n        }");
    gold.append("\n        __gf103 = __item.f103.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf104 != __item.f104.getGeneration()) {");
    gold.append("\n        if (__item.f104.get().has()) {");
    gold.append("\n          NtComplex __maybeElement108 = (NtComplex)(__item.f104.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement109 = __df104.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement109.show(__maybeElement108, __obj.planField(\"f104\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df104.hide(__obj.planField(\"f104\"));");
    gold.append("\n        }");
    gold.append("\n        __gf104 = __item.f104.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf105 != __item.f105.getGeneration()) {");
    gold.append("\n        if (__item.f105.get().has()) {");
    gold.append("\n          NtComplex __maybeElement110 = (NtComplex)(__item.f105.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement111 = __df105.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement111.show(__maybeElement110, __obj.planField(\"f105\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df105.hide(__obj.planField(\"f105\"));");
    gold.append("\n        }");
    gold.append("\n        __gf105 = __item.f105.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf106 != __item.f106.getGeneration()) {");
    gold.append("\n        if (__item.f106.get().has()) {");
    gold.append("\n          NtComplex __maybeElement112 = (NtComplex)(__item.f106.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement113 = __df106.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement113.show(__maybeElement112, __obj.planField(\"f106\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df106.hide(__obj.planField(\"f106\"));");
    gold.append("\n        }");
    gold.append("\n        __gf106 = __item.f106.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf107 != __item.f107.getGeneration()) {");
    gold.append("\n        if (__item.f107.get().has()) {");
    gold.append("\n          NtComplex __maybeElement114 = (NtComplex)(__item.f107.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement115 = __df107.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement115.show(__maybeElement114, __obj.planField(\"f107\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df107.hide(__obj.planField(\"f107\"));");
    gold.append("\n        }");
    gold.append("\n        __gf107 = __item.f107.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf108 != __item.f108.getGeneration()) {");
    gold.append("\n        if (__item.f108.get().has()) {");
    gold.append("\n          NtComplex __maybeElement116 = (NtComplex)(__item.f108.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement117 = __df108.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement117.show(__maybeElement116, __obj.planField(\"f108\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df108.hide(__obj.planField(\"f108\"));");
    gold.append("\n        }");
    gold.append("\n        __gf108 = __item.f108.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf109 != __item.f109.getGeneration()) {");
    gold.append("\n        __df109.show(__item.f109.get(), __obj.planField(\"f109\"));");
    gold.append("\n        __gf109 = __item.f109.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf110 != __item.f110.getGeneration()) {");
    gold.append("\n        __df110.show(__item.f110.get(), __obj.planField(\"f110\"));");
    gold.append("\n        __gf110 = __item.f110.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf111 != __item.f111.getGeneration()) {");
    gold.append("\n        __df111.show(__item.f111.get(), __obj.planField(\"f111\"));");
    gold.append("\n        __gf111 = __item.f111.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf112 != __item.f112.getGeneration()) {");
    gold.append("\n        if (__item.f112.get().has()) {");
    gold.append("\n          NtComplex __maybeElement118 = (NtComplex)(__item.f112.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement119 = __df112.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement119.show(__maybeElement118, __obj.planField(\"f112\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df112.hide(__obj.planField(\"f112\"));");
    gold.append("\n        }");
    gold.append("\n        __gf112 = __item.f112.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf113 != __item.f113.getGeneration()) {");
    gold.append("\n        if (__item.f113.get().has()) {");
    gold.append("\n          NtComplex __maybeElement120 = (NtComplex)(__item.f113.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement121 = __df113.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement121.show(__maybeElement120, __obj.planField(\"f113\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df113.hide(__obj.planField(\"f113\"));");
    gold.append("\n        }");
    gold.append("\n        __gf113 = __item.f113.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf114 != __item.f114.getGeneration()) {");
    gold.append("\n        if (__item.f114.get().has()) {");
    gold.append("\n          NtComplex __maybeElement122 = (NtComplex)(__item.f114.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement123 = __df114.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement123.show(__maybeElement122, __obj.planField(\"f114\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df114.hide(__obj.planField(\"f114\"));");
    gold.append("\n        }");
    gold.append("\n        __gf114 = __item.f114.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf115 != __item.f115.getGeneration()) {");
    gold.append("\n        if (__item.f115.get().has()) {");
    gold.append("\n          NtComplex __maybeElement124 = (NtComplex)(__item.f115.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement125 = __df115.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement125.show(__maybeElement124, __obj.planField(\"f115\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df115.hide(__obj.planField(\"f115\"));");
    gold.append("\n        }");
    gold.append("\n        __gf115 = __item.f115.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf116 != __item.f116.getGeneration()) {");
    gold.append("\n        if (__item.f116.get().has()) {");
    gold.append("\n          NtComplex __maybeElement126 = (NtComplex)(__item.f116.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement127 = __df116.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement127.show(__maybeElement126, __obj.planField(\"f116\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df116.hide(__obj.planField(\"f116\"));");
    gold.append("\n        }");
    gold.append("\n        __gf116 = __item.f116.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf117 != __item.f117.getGeneration()) {");
    gold.append("\n        if (__item.f117.get().has()) {");
    gold.append("\n          NtComplex __maybeElement128 = (NtComplex)(__item.f117.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement129 = __df117.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement129.show(__maybeElement128, __obj.planField(\"f117\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df117.hide(__obj.planField(\"f117\"));");
    gold.append("\n        }");
    gold.append("\n        __gf117 = __item.f117.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf118 != __item.f118.getGeneration()) {");
    gold.append("\n        if (__item.f118.get().has()) {");
    gold.append("\n          NtComplex __maybeElement130 = (NtComplex)(__item.f118.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement131 = __df118.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement131.show(__maybeElement130, __obj.planField(\"f118\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df118.hide(__obj.planField(\"f118\"));");
    gold.append("\n        }");
    gold.append("\n        __gf118 = __item.f118.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf119 != __item.f119.getGeneration()) {");
    gold.append("\n        if (__item.f119.get().has()) {");
    gold.append("\n          NtComplex __maybeElement132 = (NtComplex)(__item.f119.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement133 = __df119.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement133.show(__maybeElement132, __obj.planField(\"f119\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df119.hide(__obj.planField(\"f119\"));");
    gold.append("\n        }");
    gold.append("\n        __gf119 = __item.f119.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf120 != __item.f120.getGeneration()) {");
    gold.append("\n        if (__item.f120.get().has()) {");
    gold.append("\n          NtComplex __maybeElement134 = (NtComplex)(__item.f120.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement135 = __df120.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement135.show(__maybeElement134, __obj.planField(\"f120\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df120.hide(__obj.planField(\"f120\"));");
    gold.append("\n        }");
    gold.append("\n        __gf120 = __item.f120.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf121 != __item.f121.getGeneration()) {");
    gold.append("\n        if (__item.f121.get().has()) {");
    gold.append("\n          NtComplex __maybeElement136 = (NtComplex)(__item.f121.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement137 = __df121.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement137.show(__maybeElement136, __obj.planField(\"f121\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df121.hide(__obj.planField(\"f121\"));");
    gold.append("\n        }");
    gold.append("\n        __gf121 = __item.f121.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf122 != __item.f122.getGeneration()) {");
    gold.append("\n        if (__item.f122.get().has()) {");
    gold.append("\n          NtComplex __maybeElement138 = (NtComplex)(__item.f122.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement139 = __df122.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement139.show(__maybeElement138, __obj.planField(\"f122\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df122.hide(__obj.planField(\"f122\"));");
    gold.append("\n        }");
    gold.append("\n        __gf122 = __item.f122.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf123 != __item.f123.getGeneration()) {");
    gold.append("\n        if (__item.f123.get().has()) {");
    gold.append("\n          NtComplex __maybeElement140 = (NtComplex)(__item.f123.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement141 = __df123.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement141.show(__maybeElement140, __obj.planField(\"f123\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df123.hide(__obj.planField(\"f123\"));");
    gold.append("\n        }");
    gold.append("\n        __gf123 = __item.f123.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf124 != __item.f124.getGeneration()) {");
    gold.append("\n        if (__item.f124.get().has()) {");
    gold.append("\n          NtComplex __maybeElement142 = (NtComplex)(__item.f124.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement143 = __df124.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement143.show(__maybeElement142, __obj.planField(\"f124\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df124.hide(__obj.planField(\"f124\"));");
    gold.append("\n        }");
    gold.append("\n        __gf124 = __item.f124.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf125 != __item.f125.getGeneration()) {");
    gold.append("\n        __df125.show(__item.f125.get(), __obj.planField(\"f125\"));");
    gold.append("\n        __gf125 = __item.f125.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf126 != __item.f126.getGeneration()) {");
    gold.append("\n        __df126.show(__item.f126.get(), __obj.planField(\"f126\"));");
    gold.append("\n        __gf126 = __item.f126.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf127 != __item.f127.getGeneration()) {");
    gold.append("\n        __df127.show(__item.f127.get(), __obj.planField(\"f127\"));");
    gold.append("\n        __gf127 = __item.f127.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf128 != __item.f128.getGeneration()) {");
    gold.append("\n        __df128.show(__item.f128.get(), __obj.planField(\"f128\"));");
    gold.append("\n        __gf128 = __item.f128.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf129 != __item.f129.getGeneration()) {");
    gold.append("\n        __df129.show(__item.f129.get(), __obj.planField(\"f129\"));");
    gold.append("\n        __gf129 = __item.f129.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf130 != __item.f130.getGeneration()) {");
    gold.append("\n        __df130.show(__item.f130.get(), __obj.planField(\"f130\"));");
    gold.append("\n        __gf130 = __item.f130.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf131 != __item.f131.getGeneration()) {");
    gold.append("\n        if (__item.f131.get().has()) {");
    gold.append("\n          Double __maybeElement144 = (Double)(__item.f131.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement145 = __df131.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement145.show(__maybeElement144, __obj.planField(\"f131\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df131.hide(__obj.planField(\"f131\"));");
    gold.append("\n        }");
    gold.append("\n        __gf131 = __item.f131.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf132 != __item.f132.getGeneration()) {");
    gold.append("\n        if (__item.f132.get().has()) {");
    gold.append("\n          Double __maybeElement146 = (Double)(__item.f132.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement147 = __df132.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement147.show(__maybeElement146, __obj.planField(\"f132\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df132.hide(__obj.planField(\"f132\"));");
    gold.append("\n        }");
    gold.append("\n        __gf132 = __item.f132.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf133 != __item.f133.getGeneration()) {");
    gold.append("\n        __df133.show(__item.f133.get(), __obj.planField(\"f133\"));");
    gold.append("\n        __gf133 = __item.f133.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf134 != __item.f134.getGeneration()) {");
    gold.append("\n        if (__item.f134.get().has()) {");
    gold.append("\n          NtComplex __maybeElement148 = (NtComplex)(__item.f134.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement149 = __df134.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement149.show(__maybeElement148, __obj.planField(\"f134\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df134.hide(__obj.planField(\"f134\"));");
    gold.append("\n        }");
    gold.append("\n        __gf134 = __item.f134.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf135 != __item.f135.getGeneration()) {");
    gold.append("\n        if (__item.f135.get().has()) {");
    gold.append("\n          NtComplex __maybeElement150 = (NtComplex)(__item.f135.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement151 = __df135.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement151.show(__maybeElement150, __obj.planField(\"f135\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df135.hide(__obj.planField(\"f135\"));");
    gold.append("\n        }");
    gold.append("\n        __gf135 = __item.f135.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf136 != __item.f136.getGeneration()) {");
    gold.append("\n        __df136.show(__item.f136.get(), __obj.planField(\"f136\"));");
    gold.append("\n        __gf136 = __item.f136.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf137 != __item.f137.getGeneration()) {");
    gold.append("\n        __df137.show(__item.f137.get(), __obj.planField(\"f137\"));");
    gold.append("\n        __gf137 = __item.f137.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf138 != __item.f138.getGeneration()) {");
    gold.append("\n        __df138.show(__item.f138.get(), __obj.planField(\"f138\"));");
    gold.append("\n        __gf138 = __item.f138.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf139 != __item.f139.getGeneration()) {");
    gold.append("\n        __df139.show(__item.f139.get(), __obj.planField(\"f139\"));");
    gold.append("\n        __gf139 = __item.f139.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf140 != __item.f140.getGeneration()) {");
    gold.append("\n        if (__item.f140.get().has()) {");
    gold.append("\n          NtComplex __maybeElement152 = (NtComplex)(__item.f140.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement153 = __df140.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement153.show(__maybeElement152, __obj.planField(\"f140\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df140.hide(__obj.planField(\"f140\"));");
    gold.append("\n        }");
    gold.append("\n        __gf140 = __item.f140.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf141 != __item.f141.getGeneration()) {");
    gold.append("\n        __df141.show(__item.f141.get(), __obj.planField(\"f141\"));");
    gold.append("\n        __gf141 = __item.f141.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf142 != __item.f142.getGeneration()) {");
    gold.append("\n        __df142.show(__item.f142.get(), __obj.planField(\"f142\"));");
    gold.append("\n        __gf142 = __item.f142.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf143 != __item.f143.getGeneration()) {");
    gold.append("\n        __df143.show(__item.f143.get(), __obj.planField(\"f143\"));");
    gold.append("\n        __gf143 = __item.f143.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf144 != __item.f144.getGeneration()) {");
    gold.append("\n        __df144.show(__item.f144.get(), __obj.planField(\"f144\"));");
    gold.append("\n        __gf144 = __item.f144.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf145 != __item.f145.getGeneration()) {");
    gold.append("\n        __df145.show(__item.f145.get(), __obj.planField(\"f145\"));");
    gold.append("\n        __gf145 = __item.f145.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf146 != __item.f146.getGeneration()) {");
    gold.append("\n        __df146.show(__item.f146.get(), __obj.planField(\"f146\"));");
    gold.append("\n        __gf146 = __item.f146.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf147 != __item.f147.getGeneration()) {");
    gold.append("\n        if (__item.f147.get().has()) {");
    gold.append("\n          Double __maybeElement154 = (Double)(__item.f147.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement155 = __df147.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement155.show(__maybeElement154, __obj.planField(\"f147\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df147.hide(__obj.planField(\"f147\"));");
    gold.append("\n        }");
    gold.append("\n        __gf147 = __item.f147.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf148 != __item.f148.getGeneration()) {");
    gold.append("\n        if (__item.f148.get().has()) {");
    gold.append("\n          Double __maybeElement156 = (Double)(__item.f148.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement157 = __df148.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement157.show(__maybeElement156, __obj.planField(\"f148\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df148.hide(__obj.planField(\"f148\"));");
    gold.append("\n        }");
    gold.append("\n        __gf148 = __item.f148.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf149 != __item.f149.getGeneration()) {");
    gold.append("\n        __df149.show(__item.f149.get(), __obj.planField(\"f149\"));");
    gold.append("\n        __gf149 = __item.f149.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf150 != __item.f150.getGeneration()) {");
    gold.append("\n        if (__item.f150.get().has()) {");
    gold.append("\n          NtComplex __maybeElement158 = (NtComplex)(__item.f150.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement159 = __df150.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement159.show(__maybeElement158, __obj.planField(\"f150\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df150.hide(__obj.planField(\"f150\"));");
    gold.append("\n        }");
    gold.append("\n        __gf150 = __item.f150.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf151 != __item.f151.getGeneration()) {");
    gold.append("\n        if (__item.f151.get().has()) {");
    gold.append("\n          NtComplex __maybeElement160 = (NtComplex)(__item.f151.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement161 = __df151.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement161.show(__maybeElement160, __obj.planField(\"f151\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df151.hide(__obj.planField(\"f151\"));");
    gold.append("\n        }");
    gold.append("\n        __gf151 = __item.f151.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf152 != __item.f152.getGeneration()) {");
    gold.append("\n        __df152.show(__item.f152.get(), __obj.planField(\"f152\"));");
    gold.append("\n        __gf152 = __item.f152.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf153 != __item.f153.getGeneration()) {");
    gold.append("\n        __df153.show(__item.f153.get(), __obj.planField(\"f153\"));");
    gold.append("\n        __gf153 = __item.f153.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf154 != __item.f154.getGeneration()) {");
    gold.append("\n        __df154.show(__item.f154.get(), __obj.planField(\"f154\"));");
    gold.append("\n        __gf154 = __item.f154.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf155 != __item.f155.getGeneration()) {");
    gold.append("\n        __df155.show(__item.f155.get(), __obj.planField(\"f155\"));");
    gold.append("\n        __gf155 = __item.f155.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf156 != __item.f156.getGeneration()) {");
    gold.append("\n        if (__item.f156.get().has()) {");
    gold.append("\n          NtComplex __maybeElement162 = (NtComplex)(__item.f156.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement163 = __df156.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement163.show(__maybeElement162, __obj.planField(\"f156\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df156.hide(__obj.planField(\"f156\"));");
    gold.append("\n        }");
    gold.append("\n        __gf156 = __item.f156.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf157 != __item.f157.getGeneration()) {");
    gold.append("\n        __df157.show(__item.f157.get(), __obj.planField(\"f157\"));");
    gold.append("\n        __gf157 = __item.f157.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf158 != __item.f158.getGeneration()) {");
    gold.append("\n        __df158.show(__item.f158.get(), __obj.planField(\"f158\"));");
    gold.append("\n        __gf158 = __item.f158.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf159 != __item.f159.getGeneration()) {");
    gold.append("\n        __df159.show(__item.f159.get(), __obj.planField(\"f159\"));");
    gold.append("\n        __gf159 = __item.f159.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf160 != __item.f160.getGeneration()) {");
    gold.append("\n        __df160.show(__item.f160.get(), __obj.planField(\"f160\"));");
    gold.append("\n        __gf160 = __item.f160.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf161 != __item.f161.getGeneration()) {");
    gold.append("\n        __df161.show(__item.f161.get(), __obj.planField(\"f161\"));");
    gold.append("\n        __gf161 = __item.f161.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf162 != __item.f162.getGeneration()) {");
    gold.append("\n        __df162.show(__item.f162.get(), __obj.planField(\"f162\"));");
    gold.append("\n        __gf162 = __item.f162.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf163 != __item.f163.getGeneration()) {");
    gold.append("\n        if (__item.f163.get().has()) {");
    gold.append("\n          Double __maybeElement164 = (Double)(__item.f163.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement165 = __df163.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement165.show(__maybeElement164, __obj.planField(\"f163\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df163.hide(__obj.planField(\"f163\"));");
    gold.append("\n        }");
    gold.append("\n        __gf163 = __item.f163.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf164 != __item.f164.getGeneration()) {");
    gold.append("\n        if (__item.f164.get().has()) {");
    gold.append("\n          Double __maybeElement166 = (Double)(__item.f164.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement167 = __df164.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement167.show(__maybeElement166, __obj.planField(\"f164\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df164.hide(__obj.planField(\"f164\"));");
    gold.append("\n        }");
    gold.append("\n        __gf164 = __item.f164.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf165 != __item.f165.getGeneration()) {");
    gold.append("\n        __df165.show(__item.f165.get(), __obj.planField(\"f165\"));");
    gold.append("\n        __gf165 = __item.f165.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf166 != __item.f166.getGeneration()) {");
    gold.append("\n        if (__item.f166.get().has()) {");
    gold.append("\n          NtComplex __maybeElement168 = (NtComplex)(__item.f166.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement169 = __df166.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement169.show(__maybeElement168, __obj.planField(\"f166\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df166.hide(__obj.planField(\"f166\"));");
    gold.append("\n        }");
    gold.append("\n        __gf166 = __item.f166.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf167 != __item.f167.getGeneration()) {");
    gold.append("\n        if (__item.f167.get().has()) {");
    gold.append("\n          NtComplex __maybeElement170 = (NtComplex)(__item.f167.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement171 = __df167.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement171.show(__maybeElement170, __obj.planField(\"f167\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df167.hide(__obj.planField(\"f167\"));");
    gold.append("\n        }");
    gold.append("\n        __gf167 = __item.f167.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf168 != __item.f168.getGeneration()) {");
    gold.append("\n        __df168.show(__item.f168.get(), __obj.planField(\"f168\"));");
    gold.append("\n        __gf168 = __item.f168.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf169 != __item.f169.getGeneration()) {");
    gold.append("\n        __df169.show(__item.f169.get(), __obj.planField(\"f169\"));");
    gold.append("\n        __gf169 = __item.f169.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf170 != __item.f170.getGeneration()) {");
    gold.append("\n        __df170.show(__item.f170.get(), __obj.planField(\"f170\"));");
    gold.append("\n        __gf170 = __item.f170.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf171 != __item.f171.getGeneration()) {");
    gold.append("\n        __df171.show(__item.f171.get(), __obj.planField(\"f171\"));");
    gold.append("\n        __gf171 = __item.f171.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf172 != __item.f172.getGeneration()) {");
    gold.append("\n        if (__item.f172.get().has()) {");
    gold.append("\n          NtComplex __maybeElement172 = (NtComplex)(__item.f172.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement173 = __df172.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement173.show(__maybeElement172, __obj.planField(\"f172\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df172.hide(__obj.planField(\"f172\"));");
    gold.append("\n        }");
    gold.append("\n        __gf172 = __item.f172.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf173 != __item.f173.getGeneration()) {");
    gold.append("\n        __df173.show(__item.f173.get(), __obj.planField(\"f173\"));");
    gold.append("\n        __gf173 = __item.f173.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf174 != __item.f174.getGeneration()) {");
    gold.append("\n        __df174.show(__item.f174.get(), __obj.planField(\"f174\"));");
    gold.append("\n        __gf174 = __item.f174.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf175 != __item.f175.getGeneration()) {");
    gold.append("\n        __df175.show(__item.f175.get(), __obj.planField(\"f175\"));");
    gold.append("\n        __gf175 = __item.f175.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf176 != __item.f176.getGeneration()) {");
    gold.append("\n        __df176.show(__item.f176.get(), __obj.planField(\"f176\"));");
    gold.append("\n        __gf176 = __item.f176.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf177 != __item.f177.getGeneration()) {");
    gold.append("\n        __df177.show(__item.f177.get(), __obj.planField(\"f177\"));");
    gold.append("\n        __gf177 = __item.f177.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf178 != __item.f178.getGeneration()) {");
    gold.append("\n        __df178.show(__item.f178.get(), __obj.planField(\"f178\"));");
    gold.append("\n        __gf178 = __item.f178.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf179 != __item.f179.getGeneration()) {");
    gold.append("\n        if (__item.f179.get().has()) {");
    gold.append("\n          NtComplex __maybeElement174 = (NtComplex)(__item.f179.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement175 = __df179.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement175.show(__maybeElement174, __obj.planField(\"f179\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df179.hide(__obj.planField(\"f179\"));");
    gold.append("\n        }");
    gold.append("\n        __gf179 = __item.f179.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf180 != __item.f180.getGeneration()) {");
    gold.append("\n        if (__item.f180.get().has()) {");
    gold.append("\n          NtComplex __maybeElement176 = (NtComplex)(__item.f180.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement177 = __df180.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement177.show(__maybeElement176, __obj.planField(\"f180\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df180.hide(__obj.planField(\"f180\"));");
    gold.append("\n        }");
    gold.append("\n        __gf180 = __item.f180.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf181 != __item.f181.getGeneration()) {");
    gold.append("\n        __df181.show(__item.f181.get(), __obj.planField(\"f181\"));");
    gold.append("\n        __gf181 = __item.f181.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf182 != __item.f182.getGeneration()) {");
    gold.append("\n        if (__item.f182.get().has()) {");
    gold.append("\n          NtComplex __maybeElement178 = (NtComplex)(__item.f182.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement179 = __df182.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement179.show(__maybeElement178, __obj.planField(\"f182\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df182.hide(__obj.planField(\"f182\"));");
    gold.append("\n        }");
    gold.append("\n        __gf182 = __item.f182.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf183 != __item.f183.getGeneration()) {");
    gold.append("\n        if (__item.f183.get().has()) {");
    gold.append("\n          NtComplex __maybeElement180 = (NtComplex)(__item.f183.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement181 = __df183.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement181.show(__maybeElement180, __obj.planField(\"f183\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df183.hide(__obj.planField(\"f183\"));");
    gold.append("\n        }");
    gold.append("\n        __gf183 = __item.f183.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf184 != __item.f184.getGeneration()) {");
    gold.append("\n        __df184.show(__item.f184.get(), __obj.planField(\"f184\"));");
    gold.append("\n        __gf184 = __item.f184.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf185 != __item.f185.getGeneration()) {");
    gold.append("\n        __df185.show(__item.f185.get(), __obj.planField(\"f185\"));");
    gold.append("\n        __gf185 = __item.f185.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf186 != __item.f186.getGeneration()) {");
    gold.append("\n        __df186.show(__item.f186.get(), __obj.planField(\"f186\"));");
    gold.append("\n        __gf186 = __item.f186.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf187 != __item.f187.getGeneration()) {");
    gold.append("\n        __df187.show(__item.f187.get(), __obj.planField(\"f187\"));");
    gold.append("\n        __gf187 = __item.f187.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf188 != __item.f188.getGeneration()) {");
    gold.append("\n        if (__item.f188.get().has()) {");
    gold.append("\n          NtComplex __maybeElement182 = (NtComplex)(__item.f188.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement183 = __df188.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement183.show(__maybeElement182, __obj.planField(\"f188\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df188.hide(__obj.planField(\"f188\"));");
    gold.append("\n        }");
    gold.append("\n        __gf188 = __item.f188.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf189 != __item.f189.getGeneration()) {");
    gold.append("\n        __df189.show(__item.f189.get(), __obj.planField(\"f189\"));");
    gold.append("\n        __gf189 = __item.f189.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf190 != __item.f190.getGeneration()) {");
    gold.append("\n        __df190.show(__item.f190.get(), __obj.planField(\"f190\"));");
    gold.append("\n        __gf190 = __item.f190.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf191 != __item.f191.getGeneration()) {");
    gold.append("\n        __df191.show(__item.f191.get(), __obj.planField(\"f191\"));");
    gold.append("\n        __gf191 = __item.f191.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf192 != __item.f192.getGeneration()) {");
    gold.append("\n        if (__item.f192.get().has()) {");
    gold.append("\n          NtComplex __maybeElement184 = (NtComplex)(__item.f192.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement185 = __df192.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement185.show(__maybeElement184, __obj.planField(\"f192\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df192.hide(__obj.planField(\"f192\"));");
    gold.append("\n        }");
    gold.append("\n        __gf192 = __item.f192.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf193 != __item.f193.getGeneration()) {");
    gold.append("\n        if (__item.f193.get().has()) {");
    gold.append("\n          NtComplex __maybeElement186 = (NtComplex)(__item.f193.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement187 = __df193.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement187.show(__maybeElement186, __obj.planField(\"f193\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df193.hide(__obj.planField(\"f193\"));");
    gold.append("\n        }");
    gold.append("\n        __gf193 = __item.f193.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf194 != __item.f194.getGeneration()) {");
    gold.append("\n        if (__item.f194.get().has()) {");
    gold.append("\n          NtComplex __maybeElement188 = (NtComplex)(__item.f194.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement189 = __df194.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement189.show(__maybeElement188, __obj.planField(\"f194\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df194.hide(__obj.planField(\"f194\"));");
    gold.append("\n        }");
    gold.append("\n        __gf194 = __item.f194.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf195 != __item.f195.getGeneration()) {");
    gold.append("\n        if (__item.f195.get().has()) {");
    gold.append("\n          NtComplex __maybeElement190 = (NtComplex)(__item.f195.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement191 = __df195.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement191.show(__maybeElement190, __obj.planField(\"f195\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df195.hide(__obj.planField(\"f195\"));");
    gold.append("\n        }");
    gold.append("\n        __gf195 = __item.f195.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf196 != __item.f196.getGeneration()) {");
    gold.append("\n        if (__item.f196.get().has()) {");
    gold.append("\n          NtComplex __maybeElement192 = (NtComplex)(__item.f196.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement193 = __df196.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement193.show(__maybeElement192, __obj.planField(\"f196\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df196.hide(__obj.planField(\"f196\"));");
    gold.append("\n        }");
    gold.append("\n        __gf196 = __item.f196.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf197 != __item.f197.getGeneration()) {");
    gold.append("\n        if (__item.f197.get().has()) {");
    gold.append("\n          NtComplex __maybeElement194 = (NtComplex)(__item.f197.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement195 = __df197.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement195.show(__maybeElement194, __obj.planField(\"f197\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df197.hide(__obj.planField(\"f197\"));");
    gold.append("\n        }");
    gold.append("\n        __gf197 = __item.f197.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf198 != __item.f198.getGeneration()) {");
    gold.append("\n        if (__item.f198.get().has()) {");
    gold.append("\n          NtComplex __maybeElement196 = (NtComplex)(__item.f198.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement197 = __df198.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement197.show(__maybeElement196, __obj.planField(\"f198\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df198.hide(__obj.planField(\"f198\"));");
    gold.append("\n        }");
    gold.append("\n        __gf198 = __item.f198.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf199 != __item.f199.getGeneration()) {");
    gold.append("\n        if (__item.f199.get().has()) {");
    gold.append("\n          NtComplex __maybeElement198 = (NtComplex)(__item.f199.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement199 = __df199.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement199.show(__maybeElement198, __obj.planField(\"f199\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df199.hide(__obj.planField(\"f199\"));");
    gold.append("\n        }");
    gold.append("\n        __gf199 = __item.f199.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf200 != __item.f200.getGeneration()) {");
    gold.append("\n        if (__item.f200.get().has()) {");
    gold.append("\n          NtComplex __maybeElement200 = (NtComplex)(__item.f200.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement201 = __df200.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement201.show(__maybeElement200, __obj.planField(\"f200\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df200.hide(__obj.planField(\"f200\"));");
    gold.append("\n        }");
    gold.append("\n        __gf200 = __item.f200.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf201 != __item.f201.getGeneration()) {");
    gold.append("\n        if (__item.f201.get().has()) {");
    gold.append("\n          NtComplex __maybeElement202 = (NtComplex)(__item.f201.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement203 = __df201.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement203.show(__maybeElement202, __obj.planField(\"f201\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df201.hide(__obj.planField(\"f201\"));");
    gold.append("\n        }");
    gold.append("\n        __gf201 = __item.f201.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf202 != __item.f202.getGeneration()) {");
    gold.append("\n        if (__item.f202.get().has()) {");
    gold.append("\n          NtComplex __maybeElement204 = (NtComplex)(__item.f202.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement205 = __df202.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement205.show(__maybeElement204, __obj.planField(\"f202\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df202.hide(__obj.planField(\"f202\"));");
    gold.append("\n        }");
    gold.append("\n        __gf202 = __item.f202.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf203 != __item.f203.getGeneration()) {");
    gold.append("\n        if (__item.f203.get().has()) {");
    gold.append("\n          NtComplex __maybeElement206 = (NtComplex)(__item.f203.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement207 = __df203.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement207.show(__maybeElement206, __obj.planField(\"f203\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df203.hide(__obj.planField(\"f203\"));");
    gold.append("\n        }");
    gold.append("\n        __gf203 = __item.f203.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf204 != __item.f204.getGeneration()) {");
    gold.append("\n        if (__item.f204.get().has()) {");
    gold.append("\n          NtComplex __maybeElement208 = (NtComplex)(__item.f204.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement209 = __df204.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement209.show(__maybeElement208, __obj.planField(\"f204\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df204.hide(__obj.planField(\"f204\"));");
    gold.append("\n        }");
    gold.append("\n        __gf204 = __item.f204.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf205 != __item.f205.getGeneration()) {");
    gold.append("\n        __df205.show(__item.f205.get(), __obj.planField(\"f205\"));");
    gold.append("\n        __gf205 = __item.f205.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf206 != __item.f206.getGeneration()) {");
    gold.append("\n        __df206.show(__item.f206.get(), __obj.planField(\"f206\"));");
    gold.append("\n        __gf206 = __item.f206.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf207 != __item.f207.getGeneration()) {");
    gold.append("\n        __df207.show(__item.f207.get(), __obj.planField(\"f207\"));");
    gold.append("\n        __gf207 = __item.f207.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf208 != __item.f208.getGeneration()) {");
    gold.append("\n        __df208.show(__item.f208.get(), __obj.planField(\"f208\"));");
    gold.append("\n        __gf208 = __item.f208.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf209 != __item.f209.getGeneration()) {");
    gold.append("\n        __df209.show(__item.f209.get(), __obj.planField(\"f209\"));");
    gold.append("\n        __gf209 = __item.f209.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf210 != __item.f210.getGeneration()) {");
    gold.append("\n        __df210.show(__item.f210.get(), __obj.planField(\"f210\"));");
    gold.append("\n        __gf210 = __item.f210.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf211 != __item.f211.getGeneration()) {");
    gold.append("\n        __df211.show(__item.f211.get(), __obj.planField(\"f211\"));");
    gold.append("\n        __gf211 = __item.f211.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf212 != __item.f212.getGeneration()) {");
    gold.append("\n        __df212.show(__item.f212.get(), __obj.planField(\"f212\"));");
    gold.append("\n        __gf212 = __item.f212.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf213 != __item.f213.getGeneration()) {");
    gold.append("\n        __df213.show(__item.f213.get(), __obj.planField(\"f213\"));");
    gold.append("\n        __gf213 = __item.f213.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf214 != __item.f214.getGeneration()) {");
    gold.append("\n        __df214.show(__item.f214.get(), __obj.planField(\"f214\"));");
    gold.append("\n        __gf214 = __item.f214.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf215 != __item.f215.getGeneration()) {");
    gold.append("\n        __df215.show(__item.f215.get(), __obj.planField(\"f215\"));");
    gold.append("\n        __gf215 = __item.f215.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf216 != __item.f216.getGeneration()) {");
    gold.append("\n        __df216.show(__item.f216.get(), __obj.planField(\"f216\"));");
    gold.append("\n        __gf216 = __item.f216.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf217 != __item.f217.getGeneration()) {");
    gold.append("\n        __df217.show(__item.f217.get(), __obj.planField(\"f217\"));");
    gold.append("\n        __gf217 = __item.f217.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf218 != __item.f218.getGeneration()) {");
    gold.append("\n        __df218.show(__item.f218.get(), __obj.planField(\"f218\"));");
    gold.append("\n        __gf218 = __item.f218.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf219 != __item.f219.getGeneration()) {");
    gold.append("\n        __df219.show(__item.f219.get(), __obj.planField(\"f219\"));");
    gold.append("\n        __gf219 = __item.f219.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf220 != __item.f220.getGeneration()) {");
    gold.append("\n        __df220.show(__item.f220.get(), __obj.planField(\"f220\"));");
    gold.append("\n        __gf220 = __item.f220.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf221 != __item.f221.getGeneration()) {");
    gold.append("\n        __df221.show(__item.f221.get(), __obj.planField(\"f221\"));");
    gold.append("\n        __gf221 = __item.f221.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf222 != __item.f222.getGeneration()) {");
    gold.append("\n        __df222.show(__item.f222.get(), __obj.planField(\"f222\"));");
    gold.append("\n        __gf222 = __item.f222.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf223 != __item.f223.getGeneration()) {");
    gold.append("\n        __df223.show(__item.f223.get(), __obj.planField(\"f223\"));");
    gold.append("\n        __gf223 = __item.f223.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf224 != __item.f224.getGeneration()) {");
    gold.append("\n        __df224.show(__item.f224.get(), __obj.planField(\"f224\"));");
    gold.append("\n        __gf224 = __item.f224.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf225 != __item.f225.getGeneration()) {");
    gold.append("\n        __df225.show(__item.f225.get(), __obj.planField(\"f225\"));");
    gold.append("\n        __gf225 = __item.f225.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf226 != __item.f226.getGeneration()) {");
    gold.append("\n        __df226.show(__item.f226.get(), __obj.planField(\"f226\"));");
    gold.append("\n        __gf226 = __item.f226.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf227 != __item.f227.getGeneration()) {");
    gold.append("\n        __df227.show(__item.f227.get(), __obj.planField(\"f227\"));");
    gold.append("\n        __gf227 = __item.f227.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf228 != __item.f228.getGeneration()) {");
    gold.append("\n        __df228.show(__item.f228.get(), __obj.planField(\"f228\"));");
    gold.append("\n        __gf228 = __item.f228.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf229 != __item.f229.getGeneration()) {");
    gold.append("\n        __df229.show(__item.f229.get(), __obj.planField(\"f229\"));");
    gold.append("\n        __gf229 = __item.f229.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf230 != __item.f230.getGeneration()) {");
    gold.append("\n        __df230.show(__item.f230.get(), __obj.planField(\"f230\"));");
    gold.append("\n        __gf230 = __item.f230.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf231 != __item.f231.getGeneration()) {");
    gold.append("\n        __df231.show(__item.f231.get(), __obj.planField(\"f231\"));");
    gold.append("\n        __gf231 = __item.f231.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf232 != __item.f232.getGeneration()) {");
    gold.append("\n        __df232.show(__item.f232.get(), __obj.planField(\"f232\"));");
    gold.append("\n        __gf232 = __item.f232.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf233 != __item.f233.getGeneration()) {");
    gold.append("\n        __df233.show(__item.f233.get(), __obj.planField(\"f233\"));");
    gold.append("\n        __gf233 = __item.f233.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf234 != __item.f234.getGeneration()) {");
    gold.append("\n        __df234.show(__item.f234.get(), __obj.planField(\"f234\"));");
    gold.append("\n        __gf234 = __item.f234.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf235 != __item.f235.getGeneration()) {");
    gold.append("\n        __df235.show(__item.f235.get(), __obj.planField(\"f235\"));");
    gold.append("\n        __gf235 = __item.f235.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf236 != __item.f236.getGeneration()) {");
    gold.append("\n        __df236.show(__item.f236.get(), __obj.planField(\"f236\"));");
    gold.append("\n        __gf236 = __item.f236.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf237 != __item.f237.getGeneration()) {");
    gold.append("\n        __df237.show(__item.f237.get(), __obj.planField(\"f237\"));");
    gold.append("\n        __gf237 = __item.f237.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf238 != __item.f238.getGeneration()) {");
    gold.append("\n        __df238.show(__item.f238.get(), __obj.planField(\"f238\"));");
    gold.append("\n        __gf238 = __item.f238.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf239 != __item.f239.getGeneration()) {");
    gold.append("\n        __df239.show(__item.f239.get(), __obj.planField(\"f239\"));");
    gold.append("\n        __gf239 = __item.f239.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf240 != __item.f240.getGeneration()) {");
    gold.append("\n        __df240.show(__item.f240.get(), __obj.planField(\"f240\"));");
    gold.append("\n        __gf240 = __item.f240.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf241 != __item.f241.getGeneration()) {");
    gold.append("\n        __df241.show(__item.f241.get(), __obj.planField(\"f241\"));");
    gold.append("\n        __gf241 = __item.f241.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf242 != __item.f242.getGeneration()) {");
    gold.append("\n        __df242.show(__item.f242.get(), __obj.planField(\"f242\"));");
    gold.append("\n        __gf242 = __item.f242.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf243 != __item.f243.getGeneration()) {");
    gold.append("\n        __df243.show(__item.f243.get(), __obj.planField(\"f243\"));");
    gold.append("\n        __gf243 = __item.f243.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf244 != __item.f244.getGeneration()) {");
    gold.append("\n        __df244.show(__item.f244.get(), __obj.planField(\"f244\"));");
    gold.append("\n        __gf244 = __item.f244.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf245 != __item.f245.getGeneration()) {");
    gold.append("\n        __df245.show(__item.f245.get(), __obj.planField(\"f245\"));");
    gold.append("\n        __gf245 = __item.f245.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf246 != __item.f246.getGeneration()) {");
    gold.append("\n        __df246.show(__item.f246.get(), __obj.planField(\"f246\"));");
    gold.append("\n        __gf246 = __item.f246.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf247 != __item.f247.getGeneration()) {");
    gold.append("\n        __df247.show(__item.f247.get(), __obj.planField(\"f247\"));");
    gold.append("\n        __gf247 = __item.f247.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf248 != __item.f248.getGeneration()) {");
    gold.append("\n        __df248.show(__item.f248.get(), __obj.planField(\"f248\"));");
    gold.append("\n        __gf248 = __item.f248.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf249 != __item.f249.getGeneration()) {");
    gold.append("\n        __df249.show(__item.f249.get(), __obj.planField(\"f249\"));");
    gold.append("\n        __gf249 = __item.f249.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf250 != __item.f250.getGeneration()) {");
    gold.append("\n        __df250.show(__item.f250.get(), __obj.planField(\"f250\"));");
    gold.append("\n        __gf250 = __item.f250.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf251 != __item.f251.getGeneration()) {");
    gold.append("\n        __df251.show(__item.f251.get(), __obj.planField(\"f251\"));");
    gold.append("\n        __gf251 = __item.f251.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf252 != __item.f252.getGeneration()) {");
    gold.append("\n        __df252.show(__item.f252.get(), __obj.planField(\"f252\"));");
    gold.append("\n        __gf252 = __item.f252.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf253 != __item.f253.getGeneration()) {");
    gold.append("\n        __df253.show(__item.f253.get(), __obj.planField(\"f253\"));");
    gold.append("\n        __gf253 = __item.f253.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf254 != __item.f254.getGeneration()) {");
    gold.append("\n        __df254.show(__item.f254.get(), __obj.planField(\"f254\"));");
    gold.append("\n        __gf254 = __item.f254.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf255 != __item.f255.getGeneration()) {");
    gold.append("\n        __df255.show(__item.f255.get(), __obj.planField(\"f255\"));");
    gold.append("\n        __gf255 = __item.f255.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    OperationsAdditionCases_3 __self = this;");
    gold.append("\n    DeltaOperationsAdditionCases_3 __state = new DeltaOperationsAdditionCases_3();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, NtMessageBase message) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"f0\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f1\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f3\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f4\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f5\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f6\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f7\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f8\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f9\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f10\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f11\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f12\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f13\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f14\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f15\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f16\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f17\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f18\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f19\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f20\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f21\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f22\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f23\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f24\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f25\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f26\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f27\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f28\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f29\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f30\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f31\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f32\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f33\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f34\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f35\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f36\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f37\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f38\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f39\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f40\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f41\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f42\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f43\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f44\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f45\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f46\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f47\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f48\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f49\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f50\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f51\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f52\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f53\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f54\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f55\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f56\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f57\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f58\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f59\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f60\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f61\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f62\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f63\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f64\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f65\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f66\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f67\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f68\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f69\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f70\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f71\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f72\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f73\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f74\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f75\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f76\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f77\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f78\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f79\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f80\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f81\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f82\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f83\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f84\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f85\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f86\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f87\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f88\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f89\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f90\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f91\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f92\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f93\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f94\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f95\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f96\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f97\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f98\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f99\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f100\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f101\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f102\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f103\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f104\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f105\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f106\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f107\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f108\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f109\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f110\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f111\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f112\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f113\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f114\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f115\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f116\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f117\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f118\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f119\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f120\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f121\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f122\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f123\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f124\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f125\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f126\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f127\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f128\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f129\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f130\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f131\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f132\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f133\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f134\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f135\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f136\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f137\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f138\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f139\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f140\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f141\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f142\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f143\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f144\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f145\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f146\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f147\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f148\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f149\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f150\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f151\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f152\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f153\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f154\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f155\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f156\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f157\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f158\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f159\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f160\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f161\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f162\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f163\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f164\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f165\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f166\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f167\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f168\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f169\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f170\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f171\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f172\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f173\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f174\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f175\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f176\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f177\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f178\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f179\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f180\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f181\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f182\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f183\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f184\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f185\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f186\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f187\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f188\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f189\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f190\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f191\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f192\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f193\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f194\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f195\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f196\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f197\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f198\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f199\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f200\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f201\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f202\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f203\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f204\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f205\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f206\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f207\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f208\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f209\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f210\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f211\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f212\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f213\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f214\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f215\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f216\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f217\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f218\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f219\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f220\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f221\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f222\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f223\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f224\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f225\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f226\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f227\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f228\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f229\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f230\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f231\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f232\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f233\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f234\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f235\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f236\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f237\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f238\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f239\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f240\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f241\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f242\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f243\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f244\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f245\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f246\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f247\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f248\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f249\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f250\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f251\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f252\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f253\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f254\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f255\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:10624");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"f0\":2,\"f1\":\"2\",\"f2\":1.5,\"f3\":1.5,\"f5\":{\"r\":1.0,\"i\":1.0},\"f6\":{\"r\":1.0,\"i\":-1.0},\"f8\":1,\"f9\":\"1\",\"f10\":1.0,\"f11\":{\"r\":1.0,\"i\":0.0},\"f13\":\"1x\",\"f14\":\"1x\",\"f15\":\"1\",\"f16\":\"2\",\"f17\":\"2\",\"f18\":1.5,\"f19\":1.5,\"f21\":{\"r\":1.0,\"i\":1.0},\"f22\":{\"r\":1.0,\"i\":-1.0},\"f24\":\"1\",\"f25\":\"1\",\"f26\":1.0,\"f27\":{\"r\":1.0,\"i\":0.0},\"f29\":\"1x\",\"f30\":\"1x\",\"f31\":\"1\",\"f32\":1.5,\"f33\":1.5,\"f34\":1.0,\"f35\":1.0,\"f37\":{\"r\":0.5,\"i\":1.0},\"f38\":{\"r\":0.5,\"i\":-1.0},\"f40\":0.5,\"f41\":0.5,\"f42\":0.5,\"f43\":{\"r\":0.5,\"i\":0.0},\"f45\":\"0.5x\",\"f46\":\"0.5x\",\"f47\":\"0.5\",\"f48\":1.5,\"f49\":1.5,\"f50\":1.0,\"f51\":1.0,\"f53\":{\"r\":0.5,\"i\":1.0},\"f54\":{\"r\":0.5,\"i\":-1.0},\"f56\":0.5,\"f57\":0.5,\"f58\":0.5,\"f59\":{\"r\":0.5,\"i\":0.0},\"f61\":\"0.5x\",\"f62\":\"0.5x\",\"f63\":\"0.5\",\"f77\":\"x\",\"f78\":\"x\",\"f79\":\"\",\"f80\":{\"r\":1.0,\"i\":1.0},\"f81\":{\"r\":1.0,\"i\":1.0},\"f82\":{\"r\":0.5,\"i\":1.0},\"f83\":{\"r\":0.5,\"i\":1.0},\"f85\":{\"r\":0.0,\"i\":2.0},\"f86\":{\"r\":0.0,\"i\":0.0},\"f88\":{\"r\":0.0,\"i\":1.0},\"f89\":{\"r\":0.0,\"i\":1.0},\"f90\":{\"r\":0.0,\"i\":1.0},\"f91\":{\"r\":0.0,\"i\":1.0},\"f93\":\"0.0 1.0ix\",\"f94\":\"0.0 1.0ix\",\"f95\":\"0.0 1.0i\",\"f96\":{\"r\":1.0,\"i\":-1.0},\"f97\":{\"r\":1.0,\"i\":-1.0},\"f98\":{\"r\":0.5,\"i\":-1.0},\"f99\":{\"r\":0.5,\"i\":-1.0},\"f101\":{\"r\":0.0,\"i\":0.0},\"f102\":{\"r\":0.0,\"i\":-2.0},\"f104\":{\"r\":0.0,\"i\":-1.0},\"f105\":{\"r\":0.0,\"i\":-1.0},\"f106\":{\"r\":0.0,\"i\":-1.0},\"f107\":{\"r\":0.0,\"i\":-1.0},\"f109\":\"0.0 -1.0ix\",\"f110\":\"0.0 -1.0ix\",\"f111\":\"0.0 -1.0i\",\"f125\":\"x\",\"f126\":\"x\",\"f127\":\"\",\"f128\":1,\"f129\":\"1\",\"f130\":0.5,\"f131\":0.5,\"f133\":{\"r\":0.0,\"i\":1.0},\"f134\":{\"r\":0.0,\"i\":-1.0},\"f136\":0,\"f137\":\"0\",\"f138\":0.0,\"f139\":{\"r\":0.0,\"i\":0.0},\"f141\":\"0x\",\"f142\":\"0x\",\"f143\":\"0\",\"f144\":\"1\",\"f145\":\"1\",\"f146\":0.5,\"f147\":0.5,\"f149\":{\"r\":0.0,\"i\":1.0},\"f150\":{\"r\":0.0,\"i\":-1.0},\"f152\":\"0\",\"f153\":\"0\",\"f154\":0.0,\"f155\":{\"r\":0.0,\"i\":0.0},\"f157\":\"0x\",\"f158\":\"0x\",\"f159\":\"0\",\"f160\":1.0,\"f161\":1.0,\"f162\":0.5,\"f163\":0.5,\"f165\":{\"r\":0.0,\"i\":1.0},\"f166\":{\"r\":0.0,\"i\":-1.0},\"f168\":0.0,\"f169\":0.0,\"f170\":0.0,\"f171\":{\"r\":0.0,\"i\":0.0},\"f173\":\"0.0x\",\"f174\":\"0.0x\",\"f175\":\"0.0\",\"f176\":{\"r\":1.0,\"i\":0.0},\"f177\":{\"r\":1.0,\"i\":0.0},\"f178\":{\"r\":0.5,\"i\":0.0},\"f179\":{\"r\":0.5,\"i\":0.0},\"f181\":{\"r\":0.0,\"i\":1.0},\"f182\":{\"r\":0.0,\"i\":-1.0},\"f184\":{\"r\":0.0,\"i\":0.0},\"f185\":{\"r\":0.0,\"i\":0.0},\"f186\":{\"r\":0.0,\"i\":0.0},\"f187\":{\"r\":0.0,\"i\":0.0},\"f189\":\"0.0 0.0ix\",\"f190\":\"0.0 0.0ix\",\"f191\":\"0.0 0.0i\",\"f205\":\"x\",\"f206\":\"x\",\"f207\":\"\",\"f208\":\"x1\",\"f209\":\"x1\",\"f210\":\"x0.5\",\"f211\":\"x0.5\",\"f212\":\"x\",\"f213\":\"x0.0 1.0i\",\"f214\":\"x0.0 -1.0i\",\"f215\":\"x\",\"f216\":\"x0\",\"f217\":\"x0\",\"f218\":\"x0.0\",\"f219\":\"x0.0 0.0i\",\"f220\":\"x\",\"f221\":\"xx\",\"f222\":\"xx\",\"f223\":\"x\",\"f224\":\"x1\",\"f225\":\"x1\",\"f226\":\"x0.5\",\"f227\":\"x0.5\",\"f228\":\"x\",\"f229\":\"x0.0 1.0i\",\"f230\":\"x0.0 -1.0i\",\"f231\":\"x\",\"f232\":\"x0\",\"f233\":\"x0\",\"f234\":\"x0.0\",\"f235\":\"x0.0 0.0i\",\"f236\":\"x\",\"f237\":\"xx\",\"f238\":\"xx\",\"f239\":\"x\",\"f240\":\"1\",\"f241\":\"1\",\"f242\":\"0.5\",\"f243\":\"0.5\",\"f244\":\"\",\"f245\":\"0.0 1.0i\",\"f246\":\"0.0 -1.0i\",\"f247\":\"\",\"f248\":\"0\",\"f249\":\"0\",\"f250\":\"0.0\",\"f251\":\"0.0 0.0i\",\"f252\":\"\",\"f253\":\"x\",\"f254\":\"x\",\"f255\":\"\"},\"seq\":2}");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"f0\":2,\"f1\":\"2\",\"f2\":1.5,\"f3\":1.5,\"f5\":{\"r\":1.0,\"i\":1.0},\"f6\":{\"r\":1.0,\"i\":-1.0},\"f8\":1,\"f9\":\"1\",\"f10\":1.0,\"f11\":{\"r\":1.0,\"i\":0.0},\"f13\":\"1x\",\"f14\":\"1x\",\"f15\":\"1\",\"f16\":\"2\",\"f17\":\"2\",\"f18\":1.5,\"f19\":1.5,\"f21\":{\"r\":1.0,\"i\":1.0},\"f22\":{\"r\":1.0,\"i\":-1.0},\"f24\":\"1\",\"f25\":\"1\",\"f26\":1.0,\"f27\":{\"r\":1.0,\"i\":0.0},\"f29\":\"1x\",\"f30\":\"1x\",\"f31\":\"1\",\"f32\":1.5,\"f33\":1.5,\"f34\":1.0,\"f35\":1.0,\"f37\":{\"r\":0.5,\"i\":1.0},\"f38\":{\"r\":0.5,\"i\":-1.0},\"f40\":0.5,\"f41\":0.5,\"f42\":0.5,\"f43\":{\"r\":0.5,\"i\":0.0},\"f45\":\"0.5x\",\"f46\":\"0.5x\",\"f47\":\"0.5\",\"f48\":1.5,\"f49\":1.5,\"f50\":1.0,\"f51\":1.0,\"f53\":{\"r\":0.5,\"i\":1.0},\"f54\":{\"r\":0.5,\"i\":-1.0},\"f56\":0.5,\"f57\":0.5,\"f58\":0.5,\"f59\":{\"r\":0.5,\"i\":0.0},\"f61\":\"0.5x\",\"f62\":\"0.5x\",\"f63\":\"0.5\",\"f77\":\"x\",\"f78\":\"x\",\"f79\":\"\",\"f80\":{\"r\":1.0,\"i\":1.0},\"f81\":{\"r\":1.0,\"i\":1.0},\"f82\":{\"r\":0.5,\"i\":1.0},\"f83\":{\"r\":0.5,\"i\":1.0},\"f85\":{\"r\":0.0,\"i\":2.0},\"f86\":{\"r\":0.0,\"i\":0.0},\"f88\":{\"r\":0.0,\"i\":1.0},\"f89\":{\"r\":0.0,\"i\":1.0},\"f90\":{\"r\":0.0,\"i\":1.0},\"f91\":{\"r\":0.0,\"i\":1.0},\"f93\":\"0.0 1.0ix\",\"f94\":\"0.0 1.0ix\",\"f95\":\"0.0 1.0i\",\"f96\":{\"r\":1.0,\"i\":-1.0},\"f97\":{\"r\":1.0,\"i\":-1.0},\"f98\":{\"r\":0.5,\"i\":-1.0},\"f99\":{\"r\":0.5,\"i\":-1.0},\"f101\":{\"r\":0.0,\"i\":0.0},\"f102\":{\"r\":0.0,\"i\":-2.0},\"f104\":{\"r\":0.0,\"i\":-1.0},\"f105\":{\"r\":0.0,\"i\":-1.0},\"f106\":{\"r\":0.0,\"i\":-1.0},\"f107\":{\"r\":0.0,\"i\":-1.0},\"f109\":\"0.0 -1.0ix\",\"f110\":\"0.0 -1.0ix\",\"f111\":\"0.0 -1.0i\",\"f125\":\"x\",\"f126\":\"x\",\"f127\":\"\",\"f128\":1,\"f129\":\"1\",\"f130\":0.5,\"f131\":0.5,\"f133\":{\"r\":0.0,\"i\":1.0},\"f134\":{\"r\":0.0,\"i\":-1.0},\"f136\":0,\"f137\":\"0\",\"f138\":0.0,\"f139\":{\"r\":0.0,\"i\":0.0},\"f141\":\"0x\",\"f142\":\"0x\",\"f143\":\"0\",\"f144\":\"1\",\"f145\":\"1\",\"f146\":0.5,\"f147\":0.5,\"f149\":{\"r\":0.0,\"i\":1.0},\"f150\":{\"r\":0.0,\"i\":-1.0},\"f152\":\"0\",\"f153\":\"0\",\"f154\":0.0,\"f155\":{\"r\":0.0,\"i\":0.0},\"f157\":\"0x\",\"f158\":\"0x\",\"f159\":\"0\",\"f160\":1.0,\"f161\":1.0,\"f162\":0.5,\"f163\":0.5,\"f165\":{\"r\":0.0,\"i\":1.0},\"f166\":{\"r\":0.0,\"i\":-1.0},\"f168\":0.0,\"f169\":0.0,\"f170\":0.0,\"f171\":{\"r\":0.0,\"i\":0.0},\"f173\":\"0.0x\",\"f174\":\"0.0x\",\"f175\":\"0.0\",\"f176\":{\"r\":1.0,\"i\":0.0},\"f177\":{\"r\":1.0,\"i\":0.0},\"f178\":{\"r\":0.5,\"i\":0.0},\"f179\":{\"r\":0.5,\"i\":0.0},\"f181\":{\"r\":0.0,\"i\":1.0},\"f182\":{\"r\":0.0,\"i\":-1.0},\"f184\":{\"r\":0.0,\"i\":0.0},\"f185\":{\"r\":0.0,\"i\":0.0},\"f186\":{\"r\":0.0,\"i\":0.0},\"f187\":{\"r\":0.0,\"i\":0.0},\"f189\":\"0.0 0.0ix\",\"f190\":\"0.0 0.0ix\",\"f191\":\"0.0 0.0i\",\"f205\":\"x\",\"f206\":\"x\",\"f207\":\"\",\"f208\":\"x1\",\"f209\":\"x1\",\"f210\":\"x0.5\",\"f211\":\"x0.5\",\"f212\":\"x\",\"f213\":\"x0.0 1.0i\",\"f214\":\"x0.0 -1.0i\",\"f215\":\"x\",\"f216\":\"x0\",\"f217\":\"x0\",\"f218\":\"x0.0\",\"f219\":\"x0.0 0.0i\",\"f220\":\"x\",\"f221\":\"xx\",\"f222\":\"xx\",\"f223\":\"x\",\"f224\":\"x1\",\"f225\":\"x1\",\"f226\":\"x0.5\",\"f227\":\"x0.5\",\"f228\":\"x\",\"f229\":\"x0.0 1.0i\",\"f230\":\"x0.0 -1.0i\",\"f231\":\"x\",\"f232\":\"x0\",\"f233\":\"x0\",\"f234\":\"x0.0\",\"f235\":\"x0.0 0.0i\",\"f236\":\"x\",\"f237\":\"xx\",\"f238\":\"xx\",\"f239\":\"x\",\"f240\":\"1\",\"f241\":\"1\",\"f242\":\"0.5\",\"f243\":\"0.5\",\"f244\":\"\",\"f245\":\"0.0 1.0i\",\"f246\":\"0.0 -1.0i\",\"f247\":\"\",\"f248\":\"0\",\"f249\":\"0\",\"f250\":\"0.0\",\"f251\":\"0.0 0.0i\",\"f252\":\"\",\"f253\":\"x\",\"f254\":\"x\",\"f255\":\"\"},\"seq\":3}");
    gold.append("\nRANDO was DENIED:");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nMEMORY:36086");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_OperationsDivideCases_4 = null;
  private String get_OperationsDivideCases_4() {
    if (cached_OperationsDivideCases_4 != null) {
      return cached_OperationsDivideCases_4;
    }
    cached_OperationsDivideCases_4 = generateTestOutput(true, "OperationsDivideCases_4", "./test_code/BinaryExpression_OperationsDivideCases_success.a");
    return cached_OperationsDivideCases_4;
  }

  @Test
  public void testOperationsDivideCasesEmission() {
    assertEmissionGood(get_OperationsDivideCases_4());
  }

  @Test
  public void testOperationsDivideCasesSuccess() {
    assertLivePass(get_OperationsDivideCases_4());
  }

  @Test
  public void testOperationsDivideCasesGoodWillHappy() {
    assertGoodWillHappy(get_OperationsDivideCases_4());
  }

  @Test
  public void testOperationsDivideCasesExceptionFree() {
    assertExceptionFree(get_OperationsDivideCases_4());
  }

  @Test
  public void testOperationsDivideCasesTODOFree() {
    assertTODOFree(get_OperationsDivideCases_4());
  }

  @Test
  public void stable_OperationsDivideCases_4() {
    String live = get_OperationsDivideCases_4();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_OperationsDivideCases_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class OperationsDivideCases_4 extends LivingDocument {");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f0;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f1;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f2;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f3;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f4;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f5;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f6;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f7;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f8;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f9;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f10;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f11;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f12;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f13;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f14;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f15;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f16;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f17;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f18;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f19;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f20;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f21;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f22;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f23;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f24;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f25;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f26;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f27;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f28;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f29;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f30;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f31;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f32;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f33;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f34;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f35;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f36;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f37;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f38;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f39;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f40;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f41;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f42;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f43;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f44;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f45;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f46;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f47;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f48;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f49;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f50;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f51;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f52;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f53;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f54;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f55;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f56;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f57;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f58;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f59;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f60;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f61;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f62;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f63;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f64;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f65;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f66;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f67;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f68;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f69;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f70;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f71;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f72;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f73;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f74;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f75;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f76;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f77;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f78;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f79;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f80;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f81;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f82;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f83;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f84;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f85;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f86;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f87;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f88;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f89;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f90;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f91;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f92;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f93;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f94;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f95;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f96;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f97;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f98;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f99;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f100;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f101;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f102;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f103;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f104;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f105;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f106;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f107;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f108;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f109;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f110;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f111;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f112;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f113;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f114;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f115;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f116;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f117;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f118;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f119;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f120;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f121;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f122;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f123;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f124;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f125;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f126;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f127;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f128;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f129;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f130;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f131;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f132;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f133;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f134;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f135;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f136;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f137;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f138;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f139;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f140;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f141;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f142;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f143;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f144;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f145;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f146;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f147;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f148;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f149;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f150;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f151;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f152;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f153;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f154;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f155;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f156;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f157;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f158;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f159;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f160;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f161;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f162;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f163;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f164;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f165;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f166;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f167;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f168;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += f0.__memory();");
    gold.append("\n    __sum += f1.__memory();");
    gold.append("\n    __sum += f2.__memory();");
    gold.append("\n    __sum += f3.__memory();");
    gold.append("\n    __sum += f4.__memory();");
    gold.append("\n    __sum += f5.__memory();");
    gold.append("\n    __sum += f6.__memory();");
    gold.append("\n    __sum += f7.__memory();");
    gold.append("\n    __sum += f8.__memory();");
    gold.append("\n    __sum += f9.__memory();");
    gold.append("\n    __sum += f10.__memory();");
    gold.append("\n    __sum += f11.__memory();");
    gold.append("\n    __sum += f12.__memory();");
    gold.append("\n    __sum += f13.__memory();");
    gold.append("\n    __sum += f14.__memory();");
    gold.append("\n    __sum += f15.__memory();");
    gold.append("\n    __sum += f16.__memory();");
    gold.append("\n    __sum += f17.__memory();");
    gold.append("\n    __sum += f18.__memory();");
    gold.append("\n    __sum += f19.__memory();");
    gold.append("\n    __sum += f20.__memory();");
    gold.append("\n    __sum += f21.__memory();");
    gold.append("\n    __sum += f22.__memory();");
    gold.append("\n    __sum += f23.__memory();");
    gold.append("\n    __sum += f24.__memory();");
    gold.append("\n    __sum += f25.__memory();");
    gold.append("\n    __sum += f26.__memory();");
    gold.append("\n    __sum += f27.__memory();");
    gold.append("\n    __sum += f28.__memory();");
    gold.append("\n    __sum += f29.__memory();");
    gold.append("\n    __sum += f30.__memory();");
    gold.append("\n    __sum += f31.__memory();");
    gold.append("\n    __sum += f32.__memory();");
    gold.append("\n    __sum += f33.__memory();");
    gold.append("\n    __sum += f34.__memory();");
    gold.append("\n    __sum += f35.__memory();");
    gold.append("\n    __sum += f36.__memory();");
    gold.append("\n    __sum += f37.__memory();");
    gold.append("\n    __sum += f38.__memory();");
    gold.append("\n    __sum += f39.__memory();");
    gold.append("\n    __sum += f40.__memory();");
    gold.append("\n    __sum += f41.__memory();");
    gold.append("\n    __sum += f42.__memory();");
    gold.append("\n    __sum += f43.__memory();");
    gold.append("\n    __sum += f44.__memory();");
    gold.append("\n    __sum += f45.__memory();");
    gold.append("\n    __sum += f46.__memory();");
    gold.append("\n    __sum += f47.__memory();");
    gold.append("\n    __sum += f48.__memory();");
    gold.append("\n    __sum += f49.__memory();");
    gold.append("\n    __sum += f50.__memory();");
    gold.append("\n    __sum += f51.__memory();");
    gold.append("\n    __sum += f52.__memory();");
    gold.append("\n    __sum += f53.__memory();");
    gold.append("\n    __sum += f54.__memory();");
    gold.append("\n    __sum += f55.__memory();");
    gold.append("\n    __sum += f56.__memory();");
    gold.append("\n    __sum += f57.__memory();");
    gold.append("\n    __sum += f58.__memory();");
    gold.append("\n    __sum += f59.__memory();");
    gold.append("\n    __sum += f60.__memory();");
    gold.append("\n    __sum += f61.__memory();");
    gold.append("\n    __sum += f62.__memory();");
    gold.append("\n    __sum += f63.__memory();");
    gold.append("\n    __sum += f64.__memory();");
    gold.append("\n    __sum += f65.__memory();");
    gold.append("\n    __sum += f66.__memory();");
    gold.append("\n    __sum += f67.__memory();");
    gold.append("\n    __sum += f68.__memory();");
    gold.append("\n    __sum += f69.__memory();");
    gold.append("\n    __sum += f70.__memory();");
    gold.append("\n    __sum += f71.__memory();");
    gold.append("\n    __sum += f72.__memory();");
    gold.append("\n    __sum += f73.__memory();");
    gold.append("\n    __sum += f74.__memory();");
    gold.append("\n    __sum += f75.__memory();");
    gold.append("\n    __sum += f76.__memory();");
    gold.append("\n    __sum += f77.__memory();");
    gold.append("\n    __sum += f78.__memory();");
    gold.append("\n    __sum += f79.__memory();");
    gold.append("\n    __sum += f80.__memory();");
    gold.append("\n    __sum += f81.__memory();");
    gold.append("\n    __sum += f82.__memory();");
    gold.append("\n    __sum += f83.__memory();");
    gold.append("\n    __sum += f84.__memory();");
    gold.append("\n    __sum += f85.__memory();");
    gold.append("\n    __sum += f86.__memory();");
    gold.append("\n    __sum += f87.__memory();");
    gold.append("\n    __sum += f88.__memory();");
    gold.append("\n    __sum += f89.__memory();");
    gold.append("\n    __sum += f90.__memory();");
    gold.append("\n    __sum += f91.__memory();");
    gold.append("\n    __sum += f92.__memory();");
    gold.append("\n    __sum += f93.__memory();");
    gold.append("\n    __sum += f94.__memory();");
    gold.append("\n    __sum += f95.__memory();");
    gold.append("\n    __sum += f96.__memory();");
    gold.append("\n    __sum += f97.__memory();");
    gold.append("\n    __sum += f98.__memory();");
    gold.append("\n    __sum += f99.__memory();");
    gold.append("\n    __sum += f100.__memory();");
    gold.append("\n    __sum += f101.__memory();");
    gold.append("\n    __sum += f102.__memory();");
    gold.append("\n    __sum += f103.__memory();");
    gold.append("\n    __sum += f104.__memory();");
    gold.append("\n    __sum += f105.__memory();");
    gold.append("\n    __sum += f106.__memory();");
    gold.append("\n    __sum += f107.__memory();");
    gold.append("\n    __sum += f108.__memory();");
    gold.append("\n    __sum += f109.__memory();");
    gold.append("\n    __sum += f110.__memory();");
    gold.append("\n    __sum += f111.__memory();");
    gold.append("\n    __sum += f112.__memory();");
    gold.append("\n    __sum += f113.__memory();");
    gold.append("\n    __sum += f114.__memory();");
    gold.append("\n    __sum += f115.__memory();");
    gold.append("\n    __sum += f116.__memory();");
    gold.append("\n    __sum += f117.__memory();");
    gold.append("\n    __sum += f118.__memory();");
    gold.append("\n    __sum += f119.__memory();");
    gold.append("\n    __sum += f120.__memory();");
    gold.append("\n    __sum += f121.__memory();");
    gold.append("\n    __sum += f122.__memory();");
    gold.append("\n    __sum += f123.__memory();");
    gold.append("\n    __sum += f124.__memory();");
    gold.append("\n    __sum += f125.__memory();");
    gold.append("\n    __sum += f126.__memory();");
    gold.append("\n    __sum += f127.__memory();");
    gold.append("\n    __sum += f128.__memory();");
    gold.append("\n    __sum += f129.__memory();");
    gold.append("\n    __sum += f130.__memory();");
    gold.append("\n    __sum += f131.__memory();");
    gold.append("\n    __sum += f132.__memory();");
    gold.append("\n    __sum += f133.__memory();");
    gold.append("\n    __sum += f134.__memory();");
    gold.append("\n    __sum += f135.__memory();");
    gold.append("\n    __sum += f136.__memory();");
    gold.append("\n    __sum += f137.__memory();");
    gold.append("\n    __sum += f138.__memory();");
    gold.append("\n    __sum += f139.__memory();");
    gold.append("\n    __sum += f140.__memory();");
    gold.append("\n    __sum += f141.__memory();");
    gold.append("\n    __sum += f142.__memory();");
    gold.append("\n    __sum += f143.__memory();");
    gold.append("\n    __sum += f144.__memory();");
    gold.append("\n    __sum += f145.__memory();");
    gold.append("\n    __sum += f146.__memory();");
    gold.append("\n    __sum += f147.__memory();");
    gold.append("\n    __sum += f148.__memory();");
    gold.append("\n    __sum += f149.__memory();");
    gold.append("\n    __sum += f150.__memory();");
    gold.append("\n    __sum += f151.__memory();");
    gold.append("\n    __sum += f152.__memory();");
    gold.append("\n    __sum += f153.__memory();");
    gold.append("\n    __sum += f154.__memory();");
    gold.append("\n    __sum += f155.__memory();");
    gold.append("\n    __sum += f156.__memory();");
    gold.append("\n    __sum += f157.__memory();");
    gold.append("\n    __sum += f158.__memory();");
    gold.append("\n    __sum += f159.__memory();");
    gold.append("\n    __sum += f160.__memory();");
    gold.append("\n    __sum += f161.__memory();");
    gold.append("\n    __sum += f162.__memory();");
    gold.append("\n    __sum += f163.__memory();");
    gold.append("\n    __sum += f164.__memory();");
    gold.append("\n    __sum += f165.__memory();");
    gold.append("\n    __sum += f166.__memory();");
    gold.append("\n    __sum += f167.__memory();");
    gold.append("\n    __sum += f168.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public OperationsDivideCases_4(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    f0 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.II(1, 1)));");
    gold.append("\n    f1 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.IL(1, 1L)));");
    gold.append("\n    f2 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.ID(1, 0.5)));");
    gold.append("\n    f3 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.ImD(1, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f4 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.ImD(1, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f5 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f6 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.ImC(1, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f7 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.ImC(1, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f8 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.II(1, 0)));");
    gold.append("\n    f9 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.IL(1, 0L)));");
    gold.append("\n    f10 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.ID(1, 0.0)));");
    gold.append("\n    f11 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.IC(1, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f12 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.ImC(1, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f13 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LI(1L, 1)));");
    gold.append("\n    f14 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LL(1L, 1L)));");
    gold.append("\n    f15 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LD(1L, 0.5)));");
    gold.append("\n    f16 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LmD(1L, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f17 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LmD(1L, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f18 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.LC(1L, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f19 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.LmC(1L, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f20 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.LmC(1L, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f21 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LI(1L, 0)));");
    gold.append("\n    f22 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LL(1L, 0L)));");
    gold.append("\n    f23 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LD(1L, 0.0)));");
    gold.append("\n    f24 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.LC(1L, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f25 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.LmC(1L, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f26 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DI(0.5, 1)));");
    gold.append("\n    f27 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DL(0.5, 1L)));");
    gold.append("\n    f28 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DD(0.5, 0.5)));");
    gold.append("\n    f29 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DmD(0.5, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f30 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DmD(0.5, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f31 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.DC(0.5, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f32 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.DmC(0.5, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f33 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.DmC(0.5, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f34 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DI(0.5, 0)));");
    gold.append("\n    f35 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DL(0.5, 0L)));");
    gold.append("\n    f36 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DD(0.5, 0.0)));");
    gold.append("\n    f37 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.DC(0.5, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f38 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.DmC(0.5, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f39 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDI((LibArithmetic.Divide.II(1, 2)), 1)));");
    gold.append("\n    f40 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDL((LibArithmetic.Divide.II(1, 2)), 1L)));");
    gold.append("\n    f41 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDD((LibArithmetic.Divide.II(1, 2)), 0.5)));");
    gold.append("\n    f42 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDmD((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f43 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDmD((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f44 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mDC((LibArithmetic.Divide.II(1, 2)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f45 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mDmC((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f46 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mDmC((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f47 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDI((LibArithmetic.Divide.II(1, 2)), 0)));");
    gold.append("\n    f48 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDL((LibArithmetic.Divide.II(1, 2)), 0L)));");
    gold.append("\n    f49 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDD((LibArithmetic.Divide.II(1, 2)), 0.0)));");
    gold.append("\n    f50 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mDC((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f51 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mDmC((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f52 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDI((LibArithmetic.Divide.II(1, 0)), 1)));");
    gold.append("\n    f53 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDL((LibArithmetic.Divide.II(1, 0)), 1L)));");
    gold.append("\n    f54 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDD((LibArithmetic.Divide.II(1, 0)), 0.5)));");
    gold.append("\n    f55 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDmD((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f56 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDmD((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f57 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mDC((LibArithmetic.Divide.II(1, 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f58 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mDmC((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f59 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mDmC((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f60 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDI((LibArithmetic.Divide.II(1, 0)), 0)));");
    gold.append("\n    f61 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDL((LibArithmetic.Divide.II(1, 0)), 0L)));");
    gold.append("\n    f62 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.mDD((LibArithmetic.Divide.II(1, 0)), 0.0)));");
    gold.append("\n    f63 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mDC((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f64 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mDmC((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f65 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 1)));");
    gold.append("\n    f66 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CL(new NtComplex(0.0, 1.0), 1L)));");
    gold.append("\n    f67 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.5)));");
    gold.append("\n    f68 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f69 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f70 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CC(new NtComplex(0.0, 1.0), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f71 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CmC(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f72 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CmC(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f73 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)));");
    gold.append("\n    f74 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CL(new NtComplex(0.0, 1.0), 0L)));");
    gold.append("\n    f75 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)));");
    gold.append("\n    f76 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CC(new NtComplex(0.0, 1.0), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f77 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CmC(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f78 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1)));");
    gold.append("\n    f79 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1L)));");
    gold.append("\n    f80 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.5)));");
    gold.append("\n    f81 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f82 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f83 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f84 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f85 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f86 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0)));");
    gold.append("\n    f87 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0L)));");
    gold.append("\n    f88 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.0)));");
    gold.append("\n    f89 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f90 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f91 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f92 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f93 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f94 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f95 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f96 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f97 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f98 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f99 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f100 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f101 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f102 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f103 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f104 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.II(0, 1)));");
    gold.append("\n    f105 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.IL(0, 1L)));");
    gold.append("\n    f106 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.ID(0, 0.5)));");
    gold.append("\n    f107 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.ImD(0, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f108 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.ImD(0, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f109 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.IC(0, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f110 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.ImC(0, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f111 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.ImC(0, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f112 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.II(0, 0)));");
    gold.append("\n    f113 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.IL(0, 0L)));");
    gold.append("\n    f114 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.ID(0, 0.0)));");
    gold.append("\n    f115 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.IC(0, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f116 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.ImC(0, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f117 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LI(0L, 1)));");
    gold.append("\n    f118 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LL(0L, 1L)));");
    gold.append("\n    f119 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LD(0L, 0.5)));");
    gold.append("\n    f120 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LmD(0L, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f121 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LmD(0L, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f122 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.LC(0L, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f123 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.LmC(0L, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f124 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.LmC(0L, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f125 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LI(0L, 0)));");
    gold.append("\n    f126 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LL(0L, 0L)));");
    gold.append("\n    f127 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.LD(0L, 0.0)));");
    gold.append("\n    f128 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.LC(0L, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f129 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.LmC(0L, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f130 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DI(0.0, 1)));");
    gold.append("\n    f131 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DL(0.0, 1L)));");
    gold.append("\n    f132 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DD(0.0, 0.5)));");
    gold.append("\n    f133 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DmD(0.0, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f134 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DmD(0.0, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f135 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.DC(0.0, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f136 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.DmC(0.0, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f137 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.DmC(0.0, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f138 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DI(0.0, 0)));");
    gold.append("\n    f139 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DL(0.0, 0L)));");
    gold.append("\n    f140 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Divide.DD(0.0, 0.0)));");
    gold.append("\n    f141 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.DC(0.0, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f142 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.DmC(0.0, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f143 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f144 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f145 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f146 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f147 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f148 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f149 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CmC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f150 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CmC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f151 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f152 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f153 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f154 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f155 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.CmC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f156 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1)));");
    gold.append("\n    f157 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1L)));");
    gold.append("\n    f158 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.5)));");
    gold.append("\n    f159 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f160 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f161 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f162 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f163 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f164 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0)));");
    gold.append("\n    f165 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0L)));");
    gold.append("\n    f166 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.0)));");
    gold.append("\n    f167 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f168 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Divide.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaOperationsDivideCases_4 implements DeltaNode {");
    gold.append("\n    private int __gf0;");
    gold.append("\n    private DMaybe<DDouble> __df0;");
    gold.append("\n    private int __gf1;");
    gold.append("\n    private DMaybe<DDouble> __df1;");
    gold.append("\n    private int __gf2;");
    gold.append("\n    private DMaybe<DDouble> __df2;");
    gold.append("\n    private int __gf3;");
    gold.append("\n    private DMaybe<DDouble> __df3;");
    gold.append("\n    private int __gf4;");
    gold.append("\n    private DMaybe<DDouble> __df4;");
    gold.append("\n    private int __gf5;");
    gold.append("\n    private DMaybe<DComplex> __df5;");
    gold.append("\n    private int __gf6;");
    gold.append("\n    private DMaybe<DComplex> __df6;");
    gold.append("\n    private int __gf7;");
    gold.append("\n    private DMaybe<DComplex> __df7;");
    gold.append("\n    private int __gf8;");
    gold.append("\n    private DMaybe<DDouble> __df8;");
    gold.append("\n    private int __gf9;");
    gold.append("\n    private DMaybe<DDouble> __df9;");
    gold.append("\n    private int __gf10;");
    gold.append("\n    private DMaybe<DDouble> __df10;");
    gold.append("\n    private int __gf11;");
    gold.append("\n    private DMaybe<DComplex> __df11;");
    gold.append("\n    private int __gf12;");
    gold.append("\n    private DMaybe<DComplex> __df12;");
    gold.append("\n    private int __gf13;");
    gold.append("\n    private DMaybe<DDouble> __df13;");
    gold.append("\n    private int __gf14;");
    gold.append("\n    private DMaybe<DDouble> __df14;");
    gold.append("\n    private int __gf15;");
    gold.append("\n    private DMaybe<DDouble> __df15;");
    gold.append("\n    private int __gf16;");
    gold.append("\n    private DMaybe<DDouble> __df16;");
    gold.append("\n    private int __gf17;");
    gold.append("\n    private DMaybe<DDouble> __df17;");
    gold.append("\n    private int __gf18;");
    gold.append("\n    private DMaybe<DComplex> __df18;");
    gold.append("\n    private int __gf19;");
    gold.append("\n    private DMaybe<DComplex> __df19;");
    gold.append("\n    private int __gf20;");
    gold.append("\n    private DMaybe<DComplex> __df20;");
    gold.append("\n    private int __gf21;");
    gold.append("\n    private DMaybe<DDouble> __df21;");
    gold.append("\n    private int __gf22;");
    gold.append("\n    private DMaybe<DDouble> __df22;");
    gold.append("\n    private int __gf23;");
    gold.append("\n    private DMaybe<DDouble> __df23;");
    gold.append("\n    private int __gf24;");
    gold.append("\n    private DMaybe<DComplex> __df24;");
    gold.append("\n    private int __gf25;");
    gold.append("\n    private DMaybe<DComplex> __df25;");
    gold.append("\n    private int __gf26;");
    gold.append("\n    private DMaybe<DDouble> __df26;");
    gold.append("\n    private int __gf27;");
    gold.append("\n    private DMaybe<DDouble> __df27;");
    gold.append("\n    private int __gf28;");
    gold.append("\n    private DMaybe<DDouble> __df28;");
    gold.append("\n    private int __gf29;");
    gold.append("\n    private DMaybe<DDouble> __df29;");
    gold.append("\n    private int __gf30;");
    gold.append("\n    private DMaybe<DDouble> __df30;");
    gold.append("\n    private int __gf31;");
    gold.append("\n    private DMaybe<DComplex> __df31;");
    gold.append("\n    private int __gf32;");
    gold.append("\n    private DMaybe<DComplex> __df32;");
    gold.append("\n    private int __gf33;");
    gold.append("\n    private DMaybe<DComplex> __df33;");
    gold.append("\n    private int __gf34;");
    gold.append("\n    private DMaybe<DDouble> __df34;");
    gold.append("\n    private int __gf35;");
    gold.append("\n    private DMaybe<DDouble> __df35;");
    gold.append("\n    private int __gf36;");
    gold.append("\n    private DMaybe<DDouble> __df36;");
    gold.append("\n    private int __gf37;");
    gold.append("\n    private DMaybe<DComplex> __df37;");
    gold.append("\n    private int __gf38;");
    gold.append("\n    private DMaybe<DComplex> __df38;");
    gold.append("\n    private int __gf39;");
    gold.append("\n    private DMaybe<DDouble> __df39;");
    gold.append("\n    private int __gf40;");
    gold.append("\n    private DMaybe<DDouble> __df40;");
    gold.append("\n    private int __gf41;");
    gold.append("\n    private DMaybe<DDouble> __df41;");
    gold.append("\n    private int __gf42;");
    gold.append("\n    private DMaybe<DDouble> __df42;");
    gold.append("\n    private int __gf43;");
    gold.append("\n    private DMaybe<DDouble> __df43;");
    gold.append("\n    private int __gf44;");
    gold.append("\n    private DMaybe<DComplex> __df44;");
    gold.append("\n    private int __gf45;");
    gold.append("\n    private DMaybe<DComplex> __df45;");
    gold.append("\n    private int __gf46;");
    gold.append("\n    private DMaybe<DComplex> __df46;");
    gold.append("\n    private int __gf47;");
    gold.append("\n    private DMaybe<DDouble> __df47;");
    gold.append("\n    private int __gf48;");
    gold.append("\n    private DMaybe<DDouble> __df48;");
    gold.append("\n    private int __gf49;");
    gold.append("\n    private DMaybe<DDouble> __df49;");
    gold.append("\n    private int __gf50;");
    gold.append("\n    private DMaybe<DComplex> __df50;");
    gold.append("\n    private int __gf51;");
    gold.append("\n    private DMaybe<DComplex> __df51;");
    gold.append("\n    private int __gf52;");
    gold.append("\n    private DMaybe<DDouble> __df52;");
    gold.append("\n    private int __gf53;");
    gold.append("\n    private DMaybe<DDouble> __df53;");
    gold.append("\n    private int __gf54;");
    gold.append("\n    private DMaybe<DDouble> __df54;");
    gold.append("\n    private int __gf55;");
    gold.append("\n    private DMaybe<DDouble> __df55;");
    gold.append("\n    private int __gf56;");
    gold.append("\n    private DMaybe<DDouble> __df56;");
    gold.append("\n    private int __gf57;");
    gold.append("\n    private DMaybe<DComplex> __df57;");
    gold.append("\n    private int __gf58;");
    gold.append("\n    private DMaybe<DComplex> __df58;");
    gold.append("\n    private int __gf59;");
    gold.append("\n    private DMaybe<DComplex> __df59;");
    gold.append("\n    private int __gf60;");
    gold.append("\n    private DMaybe<DDouble> __df60;");
    gold.append("\n    private int __gf61;");
    gold.append("\n    private DMaybe<DDouble> __df61;");
    gold.append("\n    private int __gf62;");
    gold.append("\n    private DMaybe<DDouble> __df62;");
    gold.append("\n    private int __gf63;");
    gold.append("\n    private DMaybe<DComplex> __df63;");
    gold.append("\n    private int __gf64;");
    gold.append("\n    private DMaybe<DComplex> __df64;");
    gold.append("\n    private int __gf65;");
    gold.append("\n    private DMaybe<DComplex> __df65;");
    gold.append("\n    private int __gf66;");
    gold.append("\n    private DMaybe<DComplex> __df66;");
    gold.append("\n    private int __gf67;");
    gold.append("\n    private DMaybe<DComplex> __df67;");
    gold.append("\n    private int __gf68;");
    gold.append("\n    private DMaybe<DComplex> __df68;");
    gold.append("\n    private int __gf69;");
    gold.append("\n    private DMaybe<DComplex> __df69;");
    gold.append("\n    private int __gf70;");
    gold.append("\n    private DMaybe<DComplex> __df70;");
    gold.append("\n    private int __gf71;");
    gold.append("\n    private DMaybe<DComplex> __df71;");
    gold.append("\n    private int __gf72;");
    gold.append("\n    private DMaybe<DComplex> __df72;");
    gold.append("\n    private int __gf73;");
    gold.append("\n    private DMaybe<DComplex> __df73;");
    gold.append("\n    private int __gf74;");
    gold.append("\n    private DMaybe<DComplex> __df74;");
    gold.append("\n    private int __gf75;");
    gold.append("\n    private DMaybe<DComplex> __df75;");
    gold.append("\n    private int __gf76;");
    gold.append("\n    private DMaybe<DComplex> __df76;");
    gold.append("\n    private int __gf77;");
    gold.append("\n    private DMaybe<DComplex> __df77;");
    gold.append("\n    private int __gf78;");
    gold.append("\n    private DMaybe<DComplex> __df78;");
    gold.append("\n    private int __gf79;");
    gold.append("\n    private DMaybe<DComplex> __df79;");
    gold.append("\n    private int __gf80;");
    gold.append("\n    private DMaybe<DComplex> __df80;");
    gold.append("\n    private int __gf81;");
    gold.append("\n    private DMaybe<DComplex> __df81;");
    gold.append("\n    private int __gf82;");
    gold.append("\n    private DMaybe<DComplex> __df82;");
    gold.append("\n    private int __gf83;");
    gold.append("\n    private DMaybe<DComplex> __df83;");
    gold.append("\n    private int __gf84;");
    gold.append("\n    private DMaybe<DComplex> __df84;");
    gold.append("\n    private int __gf85;");
    gold.append("\n    private DMaybe<DComplex> __df85;");
    gold.append("\n    private int __gf86;");
    gold.append("\n    private DMaybe<DComplex> __df86;");
    gold.append("\n    private int __gf87;");
    gold.append("\n    private DMaybe<DComplex> __df87;");
    gold.append("\n    private int __gf88;");
    gold.append("\n    private DMaybe<DComplex> __df88;");
    gold.append("\n    private int __gf89;");
    gold.append("\n    private DMaybe<DComplex> __df89;");
    gold.append("\n    private int __gf90;");
    gold.append("\n    private DMaybe<DComplex> __df90;");
    gold.append("\n    private int __gf91;");
    gold.append("\n    private DMaybe<DComplex> __df91;");
    gold.append("\n    private int __gf92;");
    gold.append("\n    private DMaybe<DComplex> __df92;");
    gold.append("\n    private int __gf93;");
    gold.append("\n    private DMaybe<DComplex> __df93;");
    gold.append("\n    private int __gf94;");
    gold.append("\n    private DMaybe<DComplex> __df94;");
    gold.append("\n    private int __gf95;");
    gold.append("\n    private DMaybe<DComplex> __df95;");
    gold.append("\n    private int __gf96;");
    gold.append("\n    private DMaybe<DComplex> __df96;");
    gold.append("\n    private int __gf97;");
    gold.append("\n    private DMaybe<DComplex> __df97;");
    gold.append("\n    private int __gf98;");
    gold.append("\n    private DMaybe<DComplex> __df98;");
    gold.append("\n    private int __gf99;");
    gold.append("\n    private DMaybe<DComplex> __df99;");
    gold.append("\n    private int __gf100;");
    gold.append("\n    private DMaybe<DComplex> __df100;");
    gold.append("\n    private int __gf101;");
    gold.append("\n    private DMaybe<DComplex> __df101;");
    gold.append("\n    private int __gf102;");
    gold.append("\n    private DMaybe<DComplex> __df102;");
    gold.append("\n    private int __gf103;");
    gold.append("\n    private DMaybe<DComplex> __df103;");
    gold.append("\n    private int __gf104;");
    gold.append("\n    private DMaybe<DDouble> __df104;");
    gold.append("\n    private int __gf105;");
    gold.append("\n    private DMaybe<DDouble> __df105;");
    gold.append("\n    private int __gf106;");
    gold.append("\n    private DMaybe<DDouble> __df106;");
    gold.append("\n    private int __gf107;");
    gold.append("\n    private DMaybe<DDouble> __df107;");
    gold.append("\n    private int __gf108;");
    gold.append("\n    private DMaybe<DDouble> __df108;");
    gold.append("\n    private int __gf109;");
    gold.append("\n    private DMaybe<DComplex> __df109;");
    gold.append("\n    private int __gf110;");
    gold.append("\n    private DMaybe<DComplex> __df110;");
    gold.append("\n    private int __gf111;");
    gold.append("\n    private DMaybe<DComplex> __df111;");
    gold.append("\n    private int __gf112;");
    gold.append("\n    private DMaybe<DDouble> __df112;");
    gold.append("\n    private int __gf113;");
    gold.append("\n    private DMaybe<DDouble> __df113;");
    gold.append("\n    private int __gf114;");
    gold.append("\n    private DMaybe<DDouble> __df114;");
    gold.append("\n    private int __gf115;");
    gold.append("\n    private DMaybe<DComplex> __df115;");
    gold.append("\n    private int __gf116;");
    gold.append("\n    private DMaybe<DComplex> __df116;");
    gold.append("\n    private int __gf117;");
    gold.append("\n    private DMaybe<DDouble> __df117;");
    gold.append("\n    private int __gf118;");
    gold.append("\n    private DMaybe<DDouble> __df118;");
    gold.append("\n    private int __gf119;");
    gold.append("\n    private DMaybe<DDouble> __df119;");
    gold.append("\n    private int __gf120;");
    gold.append("\n    private DMaybe<DDouble> __df120;");
    gold.append("\n    private int __gf121;");
    gold.append("\n    private DMaybe<DDouble> __df121;");
    gold.append("\n    private int __gf122;");
    gold.append("\n    private DMaybe<DComplex> __df122;");
    gold.append("\n    private int __gf123;");
    gold.append("\n    private DMaybe<DComplex> __df123;");
    gold.append("\n    private int __gf124;");
    gold.append("\n    private DMaybe<DComplex> __df124;");
    gold.append("\n    private int __gf125;");
    gold.append("\n    private DMaybe<DDouble> __df125;");
    gold.append("\n    private int __gf126;");
    gold.append("\n    private DMaybe<DDouble> __df126;");
    gold.append("\n    private int __gf127;");
    gold.append("\n    private DMaybe<DDouble> __df127;");
    gold.append("\n    private int __gf128;");
    gold.append("\n    private DMaybe<DComplex> __df128;");
    gold.append("\n    private int __gf129;");
    gold.append("\n    private DMaybe<DComplex> __df129;");
    gold.append("\n    private int __gf130;");
    gold.append("\n    private DMaybe<DDouble> __df130;");
    gold.append("\n    private int __gf131;");
    gold.append("\n    private DMaybe<DDouble> __df131;");
    gold.append("\n    private int __gf132;");
    gold.append("\n    private DMaybe<DDouble> __df132;");
    gold.append("\n    private int __gf133;");
    gold.append("\n    private DMaybe<DDouble> __df133;");
    gold.append("\n    private int __gf134;");
    gold.append("\n    private DMaybe<DDouble> __df134;");
    gold.append("\n    private int __gf135;");
    gold.append("\n    private DMaybe<DComplex> __df135;");
    gold.append("\n    private int __gf136;");
    gold.append("\n    private DMaybe<DComplex> __df136;");
    gold.append("\n    private int __gf137;");
    gold.append("\n    private DMaybe<DComplex> __df137;");
    gold.append("\n    private int __gf138;");
    gold.append("\n    private DMaybe<DDouble> __df138;");
    gold.append("\n    private int __gf139;");
    gold.append("\n    private DMaybe<DDouble> __df139;");
    gold.append("\n    private int __gf140;");
    gold.append("\n    private DMaybe<DDouble> __df140;");
    gold.append("\n    private int __gf141;");
    gold.append("\n    private DMaybe<DComplex> __df141;");
    gold.append("\n    private int __gf142;");
    gold.append("\n    private DMaybe<DComplex> __df142;");
    gold.append("\n    private int __gf143;");
    gold.append("\n    private DMaybe<DComplex> __df143;");
    gold.append("\n    private int __gf144;");
    gold.append("\n    private DMaybe<DComplex> __df144;");
    gold.append("\n    private int __gf145;");
    gold.append("\n    private DMaybe<DComplex> __df145;");
    gold.append("\n    private int __gf146;");
    gold.append("\n    private DMaybe<DComplex> __df146;");
    gold.append("\n    private int __gf147;");
    gold.append("\n    private DMaybe<DComplex> __df147;");
    gold.append("\n    private int __gf148;");
    gold.append("\n    private DMaybe<DComplex> __df148;");
    gold.append("\n    private int __gf149;");
    gold.append("\n    private DMaybe<DComplex> __df149;");
    gold.append("\n    private int __gf150;");
    gold.append("\n    private DMaybe<DComplex> __df150;");
    gold.append("\n    private int __gf151;");
    gold.append("\n    private DMaybe<DComplex> __df151;");
    gold.append("\n    private int __gf152;");
    gold.append("\n    private DMaybe<DComplex> __df152;");
    gold.append("\n    private int __gf153;");
    gold.append("\n    private DMaybe<DComplex> __df153;");
    gold.append("\n    private int __gf154;");
    gold.append("\n    private DMaybe<DComplex> __df154;");
    gold.append("\n    private int __gf155;");
    gold.append("\n    private DMaybe<DComplex> __df155;");
    gold.append("\n    private int __gf156;");
    gold.append("\n    private DMaybe<DComplex> __df156;");
    gold.append("\n    private int __gf157;");
    gold.append("\n    private DMaybe<DComplex> __df157;");
    gold.append("\n    private int __gf158;");
    gold.append("\n    private DMaybe<DComplex> __df158;");
    gold.append("\n    private int __gf159;");
    gold.append("\n    private DMaybe<DComplex> __df159;");
    gold.append("\n    private int __gf160;");
    gold.append("\n    private DMaybe<DComplex> __df160;");
    gold.append("\n    private int __gf161;");
    gold.append("\n    private DMaybe<DComplex> __df161;");
    gold.append("\n    private int __gf162;");
    gold.append("\n    private DMaybe<DComplex> __df162;");
    gold.append("\n    private int __gf163;");
    gold.append("\n    private DMaybe<DComplex> __df163;");
    gold.append("\n    private int __gf164;");
    gold.append("\n    private DMaybe<DComplex> __df164;");
    gold.append("\n    private int __gf165;");
    gold.append("\n    private DMaybe<DComplex> __df165;");
    gold.append("\n    private int __gf166;");
    gold.append("\n    private DMaybe<DComplex> __df166;");
    gold.append("\n    private int __gf167;");
    gold.append("\n    private DMaybe<DComplex> __df167;");
    gold.append("\n    private int __gf168;");
    gold.append("\n    private DMaybe<DComplex> __df168;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaOperationsDivideCases_4() {");
    gold.append("\n      __gf0 = -1;");
    gold.append("\n      __df0 = new DMaybe<DDouble>();");
    gold.append("\n      __gf1 = -1;");
    gold.append("\n      __df1 = new DMaybe<DDouble>();");
    gold.append("\n      __gf2 = -1;");
    gold.append("\n      __df2 = new DMaybe<DDouble>();");
    gold.append("\n      __gf3 = -1;");
    gold.append("\n      __df3 = new DMaybe<DDouble>();");
    gold.append("\n      __gf4 = -1;");
    gold.append("\n      __df4 = new DMaybe<DDouble>();");
    gold.append("\n      __gf5 = -1;");
    gold.append("\n      __df5 = new DMaybe<DComplex>();");
    gold.append("\n      __gf6 = -1;");
    gold.append("\n      __df6 = new DMaybe<DComplex>();");
    gold.append("\n      __gf7 = -1;");
    gold.append("\n      __df7 = new DMaybe<DComplex>();");
    gold.append("\n      __gf8 = -1;");
    gold.append("\n      __df8 = new DMaybe<DDouble>();");
    gold.append("\n      __gf9 = -1;");
    gold.append("\n      __df9 = new DMaybe<DDouble>();");
    gold.append("\n      __gf10 = -1;");
    gold.append("\n      __df10 = new DMaybe<DDouble>();");
    gold.append("\n      __gf11 = -1;");
    gold.append("\n      __df11 = new DMaybe<DComplex>();");
    gold.append("\n      __gf12 = -1;");
    gold.append("\n      __df12 = new DMaybe<DComplex>();");
    gold.append("\n      __gf13 = -1;");
    gold.append("\n      __df13 = new DMaybe<DDouble>();");
    gold.append("\n      __gf14 = -1;");
    gold.append("\n      __df14 = new DMaybe<DDouble>();");
    gold.append("\n      __gf15 = -1;");
    gold.append("\n      __df15 = new DMaybe<DDouble>();");
    gold.append("\n      __gf16 = -1;");
    gold.append("\n      __df16 = new DMaybe<DDouble>();");
    gold.append("\n      __gf17 = -1;");
    gold.append("\n      __df17 = new DMaybe<DDouble>();");
    gold.append("\n      __gf18 = -1;");
    gold.append("\n      __df18 = new DMaybe<DComplex>();");
    gold.append("\n      __gf19 = -1;");
    gold.append("\n      __df19 = new DMaybe<DComplex>();");
    gold.append("\n      __gf20 = -1;");
    gold.append("\n      __df20 = new DMaybe<DComplex>();");
    gold.append("\n      __gf21 = -1;");
    gold.append("\n      __df21 = new DMaybe<DDouble>();");
    gold.append("\n      __gf22 = -1;");
    gold.append("\n      __df22 = new DMaybe<DDouble>();");
    gold.append("\n      __gf23 = -1;");
    gold.append("\n      __df23 = new DMaybe<DDouble>();");
    gold.append("\n      __gf24 = -1;");
    gold.append("\n      __df24 = new DMaybe<DComplex>();");
    gold.append("\n      __gf25 = -1;");
    gold.append("\n      __df25 = new DMaybe<DComplex>();");
    gold.append("\n      __gf26 = -1;");
    gold.append("\n      __df26 = new DMaybe<DDouble>();");
    gold.append("\n      __gf27 = -1;");
    gold.append("\n      __df27 = new DMaybe<DDouble>();");
    gold.append("\n      __gf28 = -1;");
    gold.append("\n      __df28 = new DMaybe<DDouble>();");
    gold.append("\n      __gf29 = -1;");
    gold.append("\n      __df29 = new DMaybe<DDouble>();");
    gold.append("\n      __gf30 = -1;");
    gold.append("\n      __df30 = new DMaybe<DDouble>();");
    gold.append("\n      __gf31 = -1;");
    gold.append("\n      __df31 = new DMaybe<DComplex>();");
    gold.append("\n      __gf32 = -1;");
    gold.append("\n      __df32 = new DMaybe<DComplex>();");
    gold.append("\n      __gf33 = -1;");
    gold.append("\n      __df33 = new DMaybe<DComplex>();");
    gold.append("\n      __gf34 = -1;");
    gold.append("\n      __df34 = new DMaybe<DDouble>();");
    gold.append("\n      __gf35 = -1;");
    gold.append("\n      __df35 = new DMaybe<DDouble>();");
    gold.append("\n      __gf36 = -1;");
    gold.append("\n      __df36 = new DMaybe<DDouble>();");
    gold.append("\n      __gf37 = -1;");
    gold.append("\n      __df37 = new DMaybe<DComplex>();");
    gold.append("\n      __gf38 = -1;");
    gold.append("\n      __df38 = new DMaybe<DComplex>();");
    gold.append("\n      __gf39 = -1;");
    gold.append("\n      __df39 = new DMaybe<DDouble>();");
    gold.append("\n      __gf40 = -1;");
    gold.append("\n      __df40 = new DMaybe<DDouble>();");
    gold.append("\n      __gf41 = -1;");
    gold.append("\n      __df41 = new DMaybe<DDouble>();");
    gold.append("\n      __gf42 = -1;");
    gold.append("\n      __df42 = new DMaybe<DDouble>();");
    gold.append("\n      __gf43 = -1;");
    gold.append("\n      __df43 = new DMaybe<DDouble>();");
    gold.append("\n      __gf44 = -1;");
    gold.append("\n      __df44 = new DMaybe<DComplex>();");
    gold.append("\n      __gf45 = -1;");
    gold.append("\n      __df45 = new DMaybe<DComplex>();");
    gold.append("\n      __gf46 = -1;");
    gold.append("\n      __df46 = new DMaybe<DComplex>();");
    gold.append("\n      __gf47 = -1;");
    gold.append("\n      __df47 = new DMaybe<DDouble>();");
    gold.append("\n      __gf48 = -1;");
    gold.append("\n      __df48 = new DMaybe<DDouble>();");
    gold.append("\n      __gf49 = -1;");
    gold.append("\n      __df49 = new DMaybe<DDouble>();");
    gold.append("\n      __gf50 = -1;");
    gold.append("\n      __df50 = new DMaybe<DComplex>();");
    gold.append("\n      __gf51 = -1;");
    gold.append("\n      __df51 = new DMaybe<DComplex>();");
    gold.append("\n      __gf52 = -1;");
    gold.append("\n      __df52 = new DMaybe<DDouble>();");
    gold.append("\n      __gf53 = -1;");
    gold.append("\n      __df53 = new DMaybe<DDouble>();");
    gold.append("\n      __gf54 = -1;");
    gold.append("\n      __df54 = new DMaybe<DDouble>();");
    gold.append("\n      __gf55 = -1;");
    gold.append("\n      __df55 = new DMaybe<DDouble>();");
    gold.append("\n      __gf56 = -1;");
    gold.append("\n      __df56 = new DMaybe<DDouble>();");
    gold.append("\n      __gf57 = -1;");
    gold.append("\n      __df57 = new DMaybe<DComplex>();");
    gold.append("\n      __gf58 = -1;");
    gold.append("\n      __df58 = new DMaybe<DComplex>();");
    gold.append("\n      __gf59 = -1;");
    gold.append("\n      __df59 = new DMaybe<DComplex>();");
    gold.append("\n      __gf60 = -1;");
    gold.append("\n      __df60 = new DMaybe<DDouble>();");
    gold.append("\n      __gf61 = -1;");
    gold.append("\n      __df61 = new DMaybe<DDouble>();");
    gold.append("\n      __gf62 = -1;");
    gold.append("\n      __df62 = new DMaybe<DDouble>();");
    gold.append("\n      __gf63 = -1;");
    gold.append("\n      __df63 = new DMaybe<DComplex>();");
    gold.append("\n      __gf64 = -1;");
    gold.append("\n      __df64 = new DMaybe<DComplex>();");
    gold.append("\n      __gf65 = -1;");
    gold.append("\n      __df65 = new DMaybe<DComplex>();");
    gold.append("\n      __gf66 = -1;");
    gold.append("\n      __df66 = new DMaybe<DComplex>();");
    gold.append("\n      __gf67 = -1;");
    gold.append("\n      __df67 = new DMaybe<DComplex>();");
    gold.append("\n      __gf68 = -1;");
    gold.append("\n      __df68 = new DMaybe<DComplex>();");
    gold.append("\n      __gf69 = -1;");
    gold.append("\n      __df69 = new DMaybe<DComplex>();");
    gold.append("\n      __gf70 = -1;");
    gold.append("\n      __df70 = new DMaybe<DComplex>();");
    gold.append("\n      __gf71 = -1;");
    gold.append("\n      __df71 = new DMaybe<DComplex>();");
    gold.append("\n      __gf72 = -1;");
    gold.append("\n      __df72 = new DMaybe<DComplex>();");
    gold.append("\n      __gf73 = -1;");
    gold.append("\n      __df73 = new DMaybe<DComplex>();");
    gold.append("\n      __gf74 = -1;");
    gold.append("\n      __df74 = new DMaybe<DComplex>();");
    gold.append("\n      __gf75 = -1;");
    gold.append("\n      __df75 = new DMaybe<DComplex>();");
    gold.append("\n      __gf76 = -1;");
    gold.append("\n      __df76 = new DMaybe<DComplex>();");
    gold.append("\n      __gf77 = -1;");
    gold.append("\n      __df77 = new DMaybe<DComplex>();");
    gold.append("\n      __gf78 = -1;");
    gold.append("\n      __df78 = new DMaybe<DComplex>();");
    gold.append("\n      __gf79 = -1;");
    gold.append("\n      __df79 = new DMaybe<DComplex>();");
    gold.append("\n      __gf80 = -1;");
    gold.append("\n      __df80 = new DMaybe<DComplex>();");
    gold.append("\n      __gf81 = -1;");
    gold.append("\n      __df81 = new DMaybe<DComplex>();");
    gold.append("\n      __gf82 = -1;");
    gold.append("\n      __df82 = new DMaybe<DComplex>();");
    gold.append("\n      __gf83 = -1;");
    gold.append("\n      __df83 = new DMaybe<DComplex>();");
    gold.append("\n      __gf84 = -1;");
    gold.append("\n      __df84 = new DMaybe<DComplex>();");
    gold.append("\n      __gf85 = -1;");
    gold.append("\n      __df85 = new DMaybe<DComplex>();");
    gold.append("\n      __gf86 = -1;");
    gold.append("\n      __df86 = new DMaybe<DComplex>();");
    gold.append("\n      __gf87 = -1;");
    gold.append("\n      __df87 = new DMaybe<DComplex>();");
    gold.append("\n      __gf88 = -1;");
    gold.append("\n      __df88 = new DMaybe<DComplex>();");
    gold.append("\n      __gf89 = -1;");
    gold.append("\n      __df89 = new DMaybe<DComplex>();");
    gold.append("\n      __gf90 = -1;");
    gold.append("\n      __df90 = new DMaybe<DComplex>();");
    gold.append("\n      __gf91 = -1;");
    gold.append("\n      __df91 = new DMaybe<DComplex>();");
    gold.append("\n      __gf92 = -1;");
    gold.append("\n      __df92 = new DMaybe<DComplex>();");
    gold.append("\n      __gf93 = -1;");
    gold.append("\n      __df93 = new DMaybe<DComplex>();");
    gold.append("\n      __gf94 = -1;");
    gold.append("\n      __df94 = new DMaybe<DComplex>();");
    gold.append("\n      __gf95 = -1;");
    gold.append("\n      __df95 = new DMaybe<DComplex>();");
    gold.append("\n      __gf96 = -1;");
    gold.append("\n      __df96 = new DMaybe<DComplex>();");
    gold.append("\n      __gf97 = -1;");
    gold.append("\n      __df97 = new DMaybe<DComplex>();");
    gold.append("\n      __gf98 = -1;");
    gold.append("\n      __df98 = new DMaybe<DComplex>();");
    gold.append("\n      __gf99 = -1;");
    gold.append("\n      __df99 = new DMaybe<DComplex>();");
    gold.append("\n      __gf100 = -1;");
    gold.append("\n      __df100 = new DMaybe<DComplex>();");
    gold.append("\n      __gf101 = -1;");
    gold.append("\n      __df101 = new DMaybe<DComplex>();");
    gold.append("\n      __gf102 = -1;");
    gold.append("\n      __df102 = new DMaybe<DComplex>();");
    gold.append("\n      __gf103 = -1;");
    gold.append("\n      __df103 = new DMaybe<DComplex>();");
    gold.append("\n      __gf104 = -1;");
    gold.append("\n      __df104 = new DMaybe<DDouble>();");
    gold.append("\n      __gf105 = -1;");
    gold.append("\n      __df105 = new DMaybe<DDouble>();");
    gold.append("\n      __gf106 = -1;");
    gold.append("\n      __df106 = new DMaybe<DDouble>();");
    gold.append("\n      __gf107 = -1;");
    gold.append("\n      __df107 = new DMaybe<DDouble>();");
    gold.append("\n      __gf108 = -1;");
    gold.append("\n      __df108 = new DMaybe<DDouble>();");
    gold.append("\n      __gf109 = -1;");
    gold.append("\n      __df109 = new DMaybe<DComplex>();");
    gold.append("\n      __gf110 = -1;");
    gold.append("\n      __df110 = new DMaybe<DComplex>();");
    gold.append("\n      __gf111 = -1;");
    gold.append("\n      __df111 = new DMaybe<DComplex>();");
    gold.append("\n      __gf112 = -1;");
    gold.append("\n      __df112 = new DMaybe<DDouble>();");
    gold.append("\n      __gf113 = -1;");
    gold.append("\n      __df113 = new DMaybe<DDouble>();");
    gold.append("\n      __gf114 = -1;");
    gold.append("\n      __df114 = new DMaybe<DDouble>();");
    gold.append("\n      __gf115 = -1;");
    gold.append("\n      __df115 = new DMaybe<DComplex>();");
    gold.append("\n      __gf116 = -1;");
    gold.append("\n      __df116 = new DMaybe<DComplex>();");
    gold.append("\n      __gf117 = -1;");
    gold.append("\n      __df117 = new DMaybe<DDouble>();");
    gold.append("\n      __gf118 = -1;");
    gold.append("\n      __df118 = new DMaybe<DDouble>();");
    gold.append("\n      __gf119 = -1;");
    gold.append("\n      __df119 = new DMaybe<DDouble>();");
    gold.append("\n      __gf120 = -1;");
    gold.append("\n      __df120 = new DMaybe<DDouble>();");
    gold.append("\n      __gf121 = -1;");
    gold.append("\n      __df121 = new DMaybe<DDouble>();");
    gold.append("\n      __gf122 = -1;");
    gold.append("\n      __df122 = new DMaybe<DComplex>();");
    gold.append("\n      __gf123 = -1;");
    gold.append("\n      __df123 = new DMaybe<DComplex>();");
    gold.append("\n      __gf124 = -1;");
    gold.append("\n      __df124 = new DMaybe<DComplex>();");
    gold.append("\n      __gf125 = -1;");
    gold.append("\n      __df125 = new DMaybe<DDouble>();");
    gold.append("\n      __gf126 = -1;");
    gold.append("\n      __df126 = new DMaybe<DDouble>();");
    gold.append("\n      __gf127 = -1;");
    gold.append("\n      __df127 = new DMaybe<DDouble>();");
    gold.append("\n      __gf128 = -1;");
    gold.append("\n      __df128 = new DMaybe<DComplex>();");
    gold.append("\n      __gf129 = -1;");
    gold.append("\n      __df129 = new DMaybe<DComplex>();");
    gold.append("\n      __gf130 = -1;");
    gold.append("\n      __df130 = new DMaybe<DDouble>();");
    gold.append("\n      __gf131 = -1;");
    gold.append("\n      __df131 = new DMaybe<DDouble>();");
    gold.append("\n      __gf132 = -1;");
    gold.append("\n      __df132 = new DMaybe<DDouble>();");
    gold.append("\n      __gf133 = -1;");
    gold.append("\n      __df133 = new DMaybe<DDouble>();");
    gold.append("\n      __gf134 = -1;");
    gold.append("\n      __df134 = new DMaybe<DDouble>();");
    gold.append("\n      __gf135 = -1;");
    gold.append("\n      __df135 = new DMaybe<DComplex>();");
    gold.append("\n      __gf136 = -1;");
    gold.append("\n      __df136 = new DMaybe<DComplex>();");
    gold.append("\n      __gf137 = -1;");
    gold.append("\n      __df137 = new DMaybe<DComplex>();");
    gold.append("\n      __gf138 = -1;");
    gold.append("\n      __df138 = new DMaybe<DDouble>();");
    gold.append("\n      __gf139 = -1;");
    gold.append("\n      __df139 = new DMaybe<DDouble>();");
    gold.append("\n      __gf140 = -1;");
    gold.append("\n      __df140 = new DMaybe<DDouble>();");
    gold.append("\n      __gf141 = -1;");
    gold.append("\n      __df141 = new DMaybe<DComplex>();");
    gold.append("\n      __gf142 = -1;");
    gold.append("\n      __df142 = new DMaybe<DComplex>();");
    gold.append("\n      __gf143 = -1;");
    gold.append("\n      __df143 = new DMaybe<DComplex>();");
    gold.append("\n      __gf144 = -1;");
    gold.append("\n      __df144 = new DMaybe<DComplex>();");
    gold.append("\n      __gf145 = -1;");
    gold.append("\n      __df145 = new DMaybe<DComplex>();");
    gold.append("\n      __gf146 = -1;");
    gold.append("\n      __df146 = new DMaybe<DComplex>();");
    gold.append("\n      __gf147 = -1;");
    gold.append("\n      __df147 = new DMaybe<DComplex>();");
    gold.append("\n      __gf148 = -1;");
    gold.append("\n      __df148 = new DMaybe<DComplex>();");
    gold.append("\n      __gf149 = -1;");
    gold.append("\n      __df149 = new DMaybe<DComplex>();");
    gold.append("\n      __gf150 = -1;");
    gold.append("\n      __df150 = new DMaybe<DComplex>();");
    gold.append("\n      __gf151 = -1;");
    gold.append("\n      __df151 = new DMaybe<DComplex>();");
    gold.append("\n      __gf152 = -1;");
    gold.append("\n      __df152 = new DMaybe<DComplex>();");
    gold.append("\n      __gf153 = -1;");
    gold.append("\n      __df153 = new DMaybe<DComplex>();");
    gold.append("\n      __gf154 = -1;");
    gold.append("\n      __df154 = new DMaybe<DComplex>();");
    gold.append("\n      __gf155 = -1;");
    gold.append("\n      __df155 = new DMaybe<DComplex>();");
    gold.append("\n      __gf156 = -1;");
    gold.append("\n      __df156 = new DMaybe<DComplex>();");
    gold.append("\n      __gf157 = -1;");
    gold.append("\n      __df157 = new DMaybe<DComplex>();");
    gold.append("\n      __gf158 = -1;");
    gold.append("\n      __df158 = new DMaybe<DComplex>();");
    gold.append("\n      __gf159 = -1;");
    gold.append("\n      __df159 = new DMaybe<DComplex>();");
    gold.append("\n      __gf160 = -1;");
    gold.append("\n      __df160 = new DMaybe<DComplex>();");
    gold.append("\n      __gf161 = -1;");
    gold.append("\n      __df161 = new DMaybe<DComplex>();");
    gold.append("\n      __gf162 = -1;");
    gold.append("\n      __df162 = new DMaybe<DComplex>();");
    gold.append("\n      __gf163 = -1;");
    gold.append("\n      __df163 = new DMaybe<DComplex>();");
    gold.append("\n      __gf164 = -1;");
    gold.append("\n      __df164 = new DMaybe<DComplex>();");
    gold.append("\n      __gf165 = -1;");
    gold.append("\n      __df165 = new DMaybe<DComplex>();");
    gold.append("\n      __gf166 = -1;");
    gold.append("\n      __df166 = new DMaybe<DComplex>();");
    gold.append("\n      __gf167 = -1;");
    gold.append("\n      __df167 = new DMaybe<DComplex>();");
    gold.append("\n      __gf168 = -1;");
    gold.append("\n      __df168 = new DMaybe<DComplex>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __df0.__memory();");
    gold.append("\n      __sum += __df1.__memory();");
    gold.append("\n      __sum += __df2.__memory();");
    gold.append("\n      __sum += __df3.__memory();");
    gold.append("\n      __sum += __df4.__memory();");
    gold.append("\n      __sum += __df5.__memory();");
    gold.append("\n      __sum += __df6.__memory();");
    gold.append("\n      __sum += __df7.__memory();");
    gold.append("\n      __sum += __df8.__memory();");
    gold.append("\n      __sum += __df9.__memory();");
    gold.append("\n      __sum += __df10.__memory();");
    gold.append("\n      __sum += __df11.__memory();");
    gold.append("\n      __sum += __df12.__memory();");
    gold.append("\n      __sum += __df13.__memory();");
    gold.append("\n      __sum += __df14.__memory();");
    gold.append("\n      __sum += __df15.__memory();");
    gold.append("\n      __sum += __df16.__memory();");
    gold.append("\n      __sum += __df17.__memory();");
    gold.append("\n      __sum += __df18.__memory();");
    gold.append("\n      __sum += __df19.__memory();");
    gold.append("\n      __sum += __df20.__memory();");
    gold.append("\n      __sum += __df21.__memory();");
    gold.append("\n      __sum += __df22.__memory();");
    gold.append("\n      __sum += __df23.__memory();");
    gold.append("\n      __sum += __df24.__memory();");
    gold.append("\n      __sum += __df25.__memory();");
    gold.append("\n      __sum += __df26.__memory();");
    gold.append("\n      __sum += __df27.__memory();");
    gold.append("\n      __sum += __df28.__memory();");
    gold.append("\n      __sum += __df29.__memory();");
    gold.append("\n      __sum += __df30.__memory();");
    gold.append("\n      __sum += __df31.__memory();");
    gold.append("\n      __sum += __df32.__memory();");
    gold.append("\n      __sum += __df33.__memory();");
    gold.append("\n      __sum += __df34.__memory();");
    gold.append("\n      __sum += __df35.__memory();");
    gold.append("\n      __sum += __df36.__memory();");
    gold.append("\n      __sum += __df37.__memory();");
    gold.append("\n      __sum += __df38.__memory();");
    gold.append("\n      __sum += __df39.__memory();");
    gold.append("\n      __sum += __df40.__memory();");
    gold.append("\n      __sum += __df41.__memory();");
    gold.append("\n      __sum += __df42.__memory();");
    gold.append("\n      __sum += __df43.__memory();");
    gold.append("\n      __sum += __df44.__memory();");
    gold.append("\n      __sum += __df45.__memory();");
    gold.append("\n      __sum += __df46.__memory();");
    gold.append("\n      __sum += __df47.__memory();");
    gold.append("\n      __sum += __df48.__memory();");
    gold.append("\n      __sum += __df49.__memory();");
    gold.append("\n      __sum += __df50.__memory();");
    gold.append("\n      __sum += __df51.__memory();");
    gold.append("\n      __sum += __df52.__memory();");
    gold.append("\n      __sum += __df53.__memory();");
    gold.append("\n      __sum += __df54.__memory();");
    gold.append("\n      __sum += __df55.__memory();");
    gold.append("\n      __sum += __df56.__memory();");
    gold.append("\n      __sum += __df57.__memory();");
    gold.append("\n      __sum += __df58.__memory();");
    gold.append("\n      __sum += __df59.__memory();");
    gold.append("\n      __sum += __df60.__memory();");
    gold.append("\n      __sum += __df61.__memory();");
    gold.append("\n      __sum += __df62.__memory();");
    gold.append("\n      __sum += __df63.__memory();");
    gold.append("\n      __sum += __df64.__memory();");
    gold.append("\n      __sum += __df65.__memory();");
    gold.append("\n      __sum += __df66.__memory();");
    gold.append("\n      __sum += __df67.__memory();");
    gold.append("\n      __sum += __df68.__memory();");
    gold.append("\n      __sum += __df69.__memory();");
    gold.append("\n      __sum += __df70.__memory();");
    gold.append("\n      __sum += __df71.__memory();");
    gold.append("\n      __sum += __df72.__memory();");
    gold.append("\n      __sum += __df73.__memory();");
    gold.append("\n      __sum += __df74.__memory();");
    gold.append("\n      __sum += __df75.__memory();");
    gold.append("\n      __sum += __df76.__memory();");
    gold.append("\n      __sum += __df77.__memory();");
    gold.append("\n      __sum += __df78.__memory();");
    gold.append("\n      __sum += __df79.__memory();");
    gold.append("\n      __sum += __df80.__memory();");
    gold.append("\n      __sum += __df81.__memory();");
    gold.append("\n      __sum += __df82.__memory();");
    gold.append("\n      __sum += __df83.__memory();");
    gold.append("\n      __sum += __df84.__memory();");
    gold.append("\n      __sum += __df85.__memory();");
    gold.append("\n      __sum += __df86.__memory();");
    gold.append("\n      __sum += __df87.__memory();");
    gold.append("\n      __sum += __df88.__memory();");
    gold.append("\n      __sum += __df89.__memory();");
    gold.append("\n      __sum += __df90.__memory();");
    gold.append("\n      __sum += __df91.__memory();");
    gold.append("\n      __sum += __df92.__memory();");
    gold.append("\n      __sum += __df93.__memory();");
    gold.append("\n      __sum += __df94.__memory();");
    gold.append("\n      __sum += __df95.__memory();");
    gold.append("\n      __sum += __df96.__memory();");
    gold.append("\n      __sum += __df97.__memory();");
    gold.append("\n      __sum += __df98.__memory();");
    gold.append("\n      __sum += __df99.__memory();");
    gold.append("\n      __sum += __df100.__memory();");
    gold.append("\n      __sum += __df101.__memory();");
    gold.append("\n      __sum += __df102.__memory();");
    gold.append("\n      __sum += __df103.__memory();");
    gold.append("\n      __sum += __df104.__memory();");
    gold.append("\n      __sum += __df105.__memory();");
    gold.append("\n      __sum += __df106.__memory();");
    gold.append("\n      __sum += __df107.__memory();");
    gold.append("\n      __sum += __df108.__memory();");
    gold.append("\n      __sum += __df109.__memory();");
    gold.append("\n      __sum += __df110.__memory();");
    gold.append("\n      __sum += __df111.__memory();");
    gold.append("\n      __sum += __df112.__memory();");
    gold.append("\n      __sum += __df113.__memory();");
    gold.append("\n      __sum += __df114.__memory();");
    gold.append("\n      __sum += __df115.__memory();");
    gold.append("\n      __sum += __df116.__memory();");
    gold.append("\n      __sum += __df117.__memory();");
    gold.append("\n      __sum += __df118.__memory();");
    gold.append("\n      __sum += __df119.__memory();");
    gold.append("\n      __sum += __df120.__memory();");
    gold.append("\n      __sum += __df121.__memory();");
    gold.append("\n      __sum += __df122.__memory();");
    gold.append("\n      __sum += __df123.__memory();");
    gold.append("\n      __sum += __df124.__memory();");
    gold.append("\n      __sum += __df125.__memory();");
    gold.append("\n      __sum += __df126.__memory();");
    gold.append("\n      __sum += __df127.__memory();");
    gold.append("\n      __sum += __df128.__memory();");
    gold.append("\n      __sum += __df129.__memory();");
    gold.append("\n      __sum += __df130.__memory();");
    gold.append("\n      __sum += __df131.__memory();");
    gold.append("\n      __sum += __df132.__memory();");
    gold.append("\n      __sum += __df133.__memory();");
    gold.append("\n      __sum += __df134.__memory();");
    gold.append("\n      __sum += __df135.__memory();");
    gold.append("\n      __sum += __df136.__memory();");
    gold.append("\n      __sum += __df137.__memory();");
    gold.append("\n      __sum += __df138.__memory();");
    gold.append("\n      __sum += __df139.__memory();");
    gold.append("\n      __sum += __df140.__memory();");
    gold.append("\n      __sum += __df141.__memory();");
    gold.append("\n      __sum += __df142.__memory();");
    gold.append("\n      __sum += __df143.__memory();");
    gold.append("\n      __sum += __df144.__memory();");
    gold.append("\n      __sum += __df145.__memory();");
    gold.append("\n      __sum += __df146.__memory();");
    gold.append("\n      __sum += __df147.__memory();");
    gold.append("\n      __sum += __df148.__memory();");
    gold.append("\n      __sum += __df149.__memory();");
    gold.append("\n      __sum += __df150.__memory();");
    gold.append("\n      __sum += __df151.__memory();");
    gold.append("\n      __sum += __df152.__memory();");
    gold.append("\n      __sum += __df153.__memory();");
    gold.append("\n      __sum += __df154.__memory();");
    gold.append("\n      __sum += __df155.__memory();");
    gold.append("\n      __sum += __df156.__memory();");
    gold.append("\n      __sum += __df157.__memory();");
    gold.append("\n      __sum += __df158.__memory();");
    gold.append("\n      __sum += __df159.__memory();");
    gold.append("\n      __sum += __df160.__memory();");
    gold.append("\n      __sum += __df161.__memory();");
    gold.append("\n      __sum += __df162.__memory();");
    gold.append("\n      __sum += __df163.__memory();");
    gold.append("\n      __sum += __df164.__memory();");
    gold.append("\n      __sum += __df165.__memory();");
    gold.append("\n      __sum += __df166.__memory();");
    gold.append("\n      __sum += __df167.__memory();");
    gold.append("\n      __sum += __df168.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(OperationsDivideCases_4 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 169;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gf0 != __item.f0.getGeneration()) {");
    gold.append("\n        if (__item.f0.get().has()) {");
    gold.append("\n          Double __maybeElement0 = (Double)(__item.f0.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement1 = __df0.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement1.show(__maybeElement0, __obj.planField(\"f0\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df0.hide(__obj.planField(\"f0\"));");
    gold.append("\n        }");
    gold.append("\n        __gf0 = __item.f0.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf1 != __item.f1.getGeneration()) {");
    gold.append("\n        if (__item.f1.get().has()) {");
    gold.append("\n          Double __maybeElement2 = (Double)(__item.f1.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement3 = __df1.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement3.show(__maybeElement2, __obj.planField(\"f1\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df1.hide(__obj.planField(\"f1\"));");
    gold.append("\n        }");
    gold.append("\n        __gf1 = __item.f1.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf2 != __item.f2.getGeneration()) {");
    gold.append("\n        if (__item.f2.get().has()) {");
    gold.append("\n          Double __maybeElement4 = (Double)(__item.f2.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement5 = __df2.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement5.show(__maybeElement4, __obj.planField(\"f2\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df2.hide(__obj.planField(\"f2\"));");
    gold.append("\n        }");
    gold.append("\n        __gf2 = __item.f2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf3 != __item.f3.getGeneration()) {");
    gold.append("\n        if (__item.f3.get().has()) {");
    gold.append("\n          Double __maybeElement6 = (Double)(__item.f3.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement7 = __df3.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement7.show(__maybeElement6, __obj.planField(\"f3\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df3.hide(__obj.planField(\"f3\"));");
    gold.append("\n        }");
    gold.append("\n        __gf3 = __item.f3.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf4 != __item.f4.getGeneration()) {");
    gold.append("\n        if (__item.f4.get().has()) {");
    gold.append("\n          Double __maybeElement8 = (Double)(__item.f4.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement9 = __df4.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement9.show(__maybeElement8, __obj.planField(\"f4\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df4.hide(__obj.planField(\"f4\"));");
    gold.append("\n        }");
    gold.append("\n        __gf4 = __item.f4.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf5 != __item.f5.getGeneration()) {");
    gold.append("\n        if (__item.f5.get().has()) {");
    gold.append("\n          NtComplex __maybeElement10 = (NtComplex)(__item.f5.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement11 = __df5.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement11.show(__maybeElement10, __obj.planField(\"f5\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df5.hide(__obj.planField(\"f5\"));");
    gold.append("\n        }");
    gold.append("\n        __gf5 = __item.f5.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf6 != __item.f6.getGeneration()) {");
    gold.append("\n        if (__item.f6.get().has()) {");
    gold.append("\n          NtComplex __maybeElement12 = (NtComplex)(__item.f6.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement13 = __df6.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement13.show(__maybeElement12, __obj.planField(\"f6\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df6.hide(__obj.planField(\"f6\"));");
    gold.append("\n        }");
    gold.append("\n        __gf6 = __item.f6.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf7 != __item.f7.getGeneration()) {");
    gold.append("\n        if (__item.f7.get().has()) {");
    gold.append("\n          NtComplex __maybeElement14 = (NtComplex)(__item.f7.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement15 = __df7.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement15.show(__maybeElement14, __obj.planField(\"f7\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df7.hide(__obj.planField(\"f7\"));");
    gold.append("\n        }");
    gold.append("\n        __gf7 = __item.f7.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf8 != __item.f8.getGeneration()) {");
    gold.append("\n        if (__item.f8.get().has()) {");
    gold.append("\n          Double __maybeElement16 = (Double)(__item.f8.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement17 = __df8.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement17.show(__maybeElement16, __obj.planField(\"f8\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df8.hide(__obj.planField(\"f8\"));");
    gold.append("\n        }");
    gold.append("\n        __gf8 = __item.f8.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf9 != __item.f9.getGeneration()) {");
    gold.append("\n        if (__item.f9.get().has()) {");
    gold.append("\n          Double __maybeElement18 = (Double)(__item.f9.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement19 = __df9.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement19.show(__maybeElement18, __obj.planField(\"f9\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df9.hide(__obj.planField(\"f9\"));");
    gold.append("\n        }");
    gold.append("\n        __gf9 = __item.f9.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf10 != __item.f10.getGeneration()) {");
    gold.append("\n        if (__item.f10.get().has()) {");
    gold.append("\n          Double __maybeElement20 = (Double)(__item.f10.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement21 = __df10.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement21.show(__maybeElement20, __obj.planField(\"f10\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df10.hide(__obj.planField(\"f10\"));");
    gold.append("\n        }");
    gold.append("\n        __gf10 = __item.f10.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf11 != __item.f11.getGeneration()) {");
    gold.append("\n        if (__item.f11.get().has()) {");
    gold.append("\n          NtComplex __maybeElement22 = (NtComplex)(__item.f11.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement23 = __df11.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement23.show(__maybeElement22, __obj.planField(\"f11\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df11.hide(__obj.planField(\"f11\"));");
    gold.append("\n        }");
    gold.append("\n        __gf11 = __item.f11.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf12 != __item.f12.getGeneration()) {");
    gold.append("\n        if (__item.f12.get().has()) {");
    gold.append("\n          NtComplex __maybeElement24 = (NtComplex)(__item.f12.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement25 = __df12.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement25.show(__maybeElement24, __obj.planField(\"f12\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df12.hide(__obj.planField(\"f12\"));");
    gold.append("\n        }");
    gold.append("\n        __gf12 = __item.f12.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf13 != __item.f13.getGeneration()) {");
    gold.append("\n        if (__item.f13.get().has()) {");
    gold.append("\n          Double __maybeElement26 = (Double)(__item.f13.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement27 = __df13.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement27.show(__maybeElement26, __obj.planField(\"f13\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df13.hide(__obj.planField(\"f13\"));");
    gold.append("\n        }");
    gold.append("\n        __gf13 = __item.f13.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf14 != __item.f14.getGeneration()) {");
    gold.append("\n        if (__item.f14.get().has()) {");
    gold.append("\n          Double __maybeElement28 = (Double)(__item.f14.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement29 = __df14.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement29.show(__maybeElement28, __obj.planField(\"f14\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df14.hide(__obj.planField(\"f14\"));");
    gold.append("\n        }");
    gold.append("\n        __gf14 = __item.f14.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf15 != __item.f15.getGeneration()) {");
    gold.append("\n        if (__item.f15.get().has()) {");
    gold.append("\n          Double __maybeElement30 = (Double)(__item.f15.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement31 = __df15.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement31.show(__maybeElement30, __obj.planField(\"f15\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df15.hide(__obj.planField(\"f15\"));");
    gold.append("\n        }");
    gold.append("\n        __gf15 = __item.f15.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf16 != __item.f16.getGeneration()) {");
    gold.append("\n        if (__item.f16.get().has()) {");
    gold.append("\n          Double __maybeElement32 = (Double)(__item.f16.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement33 = __df16.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement33.show(__maybeElement32, __obj.planField(\"f16\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df16.hide(__obj.planField(\"f16\"));");
    gold.append("\n        }");
    gold.append("\n        __gf16 = __item.f16.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf17 != __item.f17.getGeneration()) {");
    gold.append("\n        if (__item.f17.get().has()) {");
    gold.append("\n          Double __maybeElement34 = (Double)(__item.f17.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement35 = __df17.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement35.show(__maybeElement34, __obj.planField(\"f17\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df17.hide(__obj.planField(\"f17\"));");
    gold.append("\n        }");
    gold.append("\n        __gf17 = __item.f17.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf18 != __item.f18.getGeneration()) {");
    gold.append("\n        if (__item.f18.get().has()) {");
    gold.append("\n          NtComplex __maybeElement36 = (NtComplex)(__item.f18.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement37 = __df18.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement37.show(__maybeElement36, __obj.planField(\"f18\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df18.hide(__obj.planField(\"f18\"));");
    gold.append("\n        }");
    gold.append("\n        __gf18 = __item.f18.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf19 != __item.f19.getGeneration()) {");
    gold.append("\n        if (__item.f19.get().has()) {");
    gold.append("\n          NtComplex __maybeElement38 = (NtComplex)(__item.f19.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement39 = __df19.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement39.show(__maybeElement38, __obj.planField(\"f19\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df19.hide(__obj.planField(\"f19\"));");
    gold.append("\n        }");
    gold.append("\n        __gf19 = __item.f19.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf20 != __item.f20.getGeneration()) {");
    gold.append("\n        if (__item.f20.get().has()) {");
    gold.append("\n          NtComplex __maybeElement40 = (NtComplex)(__item.f20.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement41 = __df20.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement41.show(__maybeElement40, __obj.planField(\"f20\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df20.hide(__obj.planField(\"f20\"));");
    gold.append("\n        }");
    gold.append("\n        __gf20 = __item.f20.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf21 != __item.f21.getGeneration()) {");
    gold.append("\n        if (__item.f21.get().has()) {");
    gold.append("\n          Double __maybeElement42 = (Double)(__item.f21.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement43 = __df21.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement43.show(__maybeElement42, __obj.planField(\"f21\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df21.hide(__obj.planField(\"f21\"));");
    gold.append("\n        }");
    gold.append("\n        __gf21 = __item.f21.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf22 != __item.f22.getGeneration()) {");
    gold.append("\n        if (__item.f22.get().has()) {");
    gold.append("\n          Double __maybeElement44 = (Double)(__item.f22.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement45 = __df22.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement45.show(__maybeElement44, __obj.planField(\"f22\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df22.hide(__obj.planField(\"f22\"));");
    gold.append("\n        }");
    gold.append("\n        __gf22 = __item.f22.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf23 != __item.f23.getGeneration()) {");
    gold.append("\n        if (__item.f23.get().has()) {");
    gold.append("\n          Double __maybeElement46 = (Double)(__item.f23.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement47 = __df23.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement47.show(__maybeElement46, __obj.planField(\"f23\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df23.hide(__obj.planField(\"f23\"));");
    gold.append("\n        }");
    gold.append("\n        __gf23 = __item.f23.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf24 != __item.f24.getGeneration()) {");
    gold.append("\n        if (__item.f24.get().has()) {");
    gold.append("\n          NtComplex __maybeElement48 = (NtComplex)(__item.f24.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement49 = __df24.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement49.show(__maybeElement48, __obj.planField(\"f24\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df24.hide(__obj.planField(\"f24\"));");
    gold.append("\n        }");
    gold.append("\n        __gf24 = __item.f24.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf25 != __item.f25.getGeneration()) {");
    gold.append("\n        if (__item.f25.get().has()) {");
    gold.append("\n          NtComplex __maybeElement50 = (NtComplex)(__item.f25.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement51 = __df25.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement51.show(__maybeElement50, __obj.planField(\"f25\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df25.hide(__obj.planField(\"f25\"));");
    gold.append("\n        }");
    gold.append("\n        __gf25 = __item.f25.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf26 != __item.f26.getGeneration()) {");
    gold.append("\n        if (__item.f26.get().has()) {");
    gold.append("\n          Double __maybeElement52 = (Double)(__item.f26.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement53 = __df26.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement53.show(__maybeElement52, __obj.planField(\"f26\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df26.hide(__obj.planField(\"f26\"));");
    gold.append("\n        }");
    gold.append("\n        __gf26 = __item.f26.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf27 != __item.f27.getGeneration()) {");
    gold.append("\n        if (__item.f27.get().has()) {");
    gold.append("\n          Double __maybeElement54 = (Double)(__item.f27.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement55 = __df27.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement55.show(__maybeElement54, __obj.planField(\"f27\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df27.hide(__obj.planField(\"f27\"));");
    gold.append("\n        }");
    gold.append("\n        __gf27 = __item.f27.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf28 != __item.f28.getGeneration()) {");
    gold.append("\n        if (__item.f28.get().has()) {");
    gold.append("\n          Double __maybeElement56 = (Double)(__item.f28.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement57 = __df28.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement57.show(__maybeElement56, __obj.planField(\"f28\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df28.hide(__obj.planField(\"f28\"));");
    gold.append("\n        }");
    gold.append("\n        __gf28 = __item.f28.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf29 != __item.f29.getGeneration()) {");
    gold.append("\n        if (__item.f29.get().has()) {");
    gold.append("\n          Double __maybeElement58 = (Double)(__item.f29.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement59 = __df29.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement59.show(__maybeElement58, __obj.planField(\"f29\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df29.hide(__obj.planField(\"f29\"));");
    gold.append("\n        }");
    gold.append("\n        __gf29 = __item.f29.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf30 != __item.f30.getGeneration()) {");
    gold.append("\n        if (__item.f30.get().has()) {");
    gold.append("\n          Double __maybeElement60 = (Double)(__item.f30.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement61 = __df30.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement61.show(__maybeElement60, __obj.planField(\"f30\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df30.hide(__obj.planField(\"f30\"));");
    gold.append("\n        }");
    gold.append("\n        __gf30 = __item.f30.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf31 != __item.f31.getGeneration()) {");
    gold.append("\n        if (__item.f31.get().has()) {");
    gold.append("\n          NtComplex __maybeElement62 = (NtComplex)(__item.f31.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement63 = __df31.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement63.show(__maybeElement62, __obj.planField(\"f31\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df31.hide(__obj.planField(\"f31\"));");
    gold.append("\n        }");
    gold.append("\n        __gf31 = __item.f31.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf32 != __item.f32.getGeneration()) {");
    gold.append("\n        if (__item.f32.get().has()) {");
    gold.append("\n          NtComplex __maybeElement64 = (NtComplex)(__item.f32.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement65 = __df32.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement65.show(__maybeElement64, __obj.planField(\"f32\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df32.hide(__obj.planField(\"f32\"));");
    gold.append("\n        }");
    gold.append("\n        __gf32 = __item.f32.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf33 != __item.f33.getGeneration()) {");
    gold.append("\n        if (__item.f33.get().has()) {");
    gold.append("\n          NtComplex __maybeElement66 = (NtComplex)(__item.f33.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement67 = __df33.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement67.show(__maybeElement66, __obj.planField(\"f33\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df33.hide(__obj.planField(\"f33\"));");
    gold.append("\n        }");
    gold.append("\n        __gf33 = __item.f33.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf34 != __item.f34.getGeneration()) {");
    gold.append("\n        if (__item.f34.get().has()) {");
    gold.append("\n          Double __maybeElement68 = (Double)(__item.f34.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement69 = __df34.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement69.show(__maybeElement68, __obj.planField(\"f34\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df34.hide(__obj.planField(\"f34\"));");
    gold.append("\n        }");
    gold.append("\n        __gf34 = __item.f34.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf35 != __item.f35.getGeneration()) {");
    gold.append("\n        if (__item.f35.get().has()) {");
    gold.append("\n          Double __maybeElement70 = (Double)(__item.f35.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement71 = __df35.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement71.show(__maybeElement70, __obj.planField(\"f35\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df35.hide(__obj.planField(\"f35\"));");
    gold.append("\n        }");
    gold.append("\n        __gf35 = __item.f35.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf36 != __item.f36.getGeneration()) {");
    gold.append("\n        if (__item.f36.get().has()) {");
    gold.append("\n          Double __maybeElement72 = (Double)(__item.f36.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement73 = __df36.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement73.show(__maybeElement72, __obj.planField(\"f36\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df36.hide(__obj.planField(\"f36\"));");
    gold.append("\n        }");
    gold.append("\n        __gf36 = __item.f36.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf37 != __item.f37.getGeneration()) {");
    gold.append("\n        if (__item.f37.get().has()) {");
    gold.append("\n          NtComplex __maybeElement74 = (NtComplex)(__item.f37.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement75 = __df37.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement75.show(__maybeElement74, __obj.planField(\"f37\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df37.hide(__obj.planField(\"f37\"));");
    gold.append("\n        }");
    gold.append("\n        __gf37 = __item.f37.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf38 != __item.f38.getGeneration()) {");
    gold.append("\n        if (__item.f38.get().has()) {");
    gold.append("\n          NtComplex __maybeElement76 = (NtComplex)(__item.f38.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement77 = __df38.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement77.show(__maybeElement76, __obj.planField(\"f38\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df38.hide(__obj.planField(\"f38\"));");
    gold.append("\n        }");
    gold.append("\n        __gf38 = __item.f38.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf39 != __item.f39.getGeneration()) {");
    gold.append("\n        if (__item.f39.get().has()) {");
    gold.append("\n          Double __maybeElement78 = (Double)(__item.f39.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement79 = __df39.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement79.show(__maybeElement78, __obj.planField(\"f39\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df39.hide(__obj.planField(\"f39\"));");
    gold.append("\n        }");
    gold.append("\n        __gf39 = __item.f39.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf40 != __item.f40.getGeneration()) {");
    gold.append("\n        if (__item.f40.get().has()) {");
    gold.append("\n          Double __maybeElement80 = (Double)(__item.f40.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement81 = __df40.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement81.show(__maybeElement80, __obj.planField(\"f40\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df40.hide(__obj.planField(\"f40\"));");
    gold.append("\n        }");
    gold.append("\n        __gf40 = __item.f40.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf41 != __item.f41.getGeneration()) {");
    gold.append("\n        if (__item.f41.get().has()) {");
    gold.append("\n          Double __maybeElement82 = (Double)(__item.f41.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement83 = __df41.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement83.show(__maybeElement82, __obj.planField(\"f41\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df41.hide(__obj.planField(\"f41\"));");
    gold.append("\n        }");
    gold.append("\n        __gf41 = __item.f41.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf42 != __item.f42.getGeneration()) {");
    gold.append("\n        if (__item.f42.get().has()) {");
    gold.append("\n          Double __maybeElement84 = (Double)(__item.f42.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement85 = __df42.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement85.show(__maybeElement84, __obj.planField(\"f42\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df42.hide(__obj.planField(\"f42\"));");
    gold.append("\n        }");
    gold.append("\n        __gf42 = __item.f42.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf43 != __item.f43.getGeneration()) {");
    gold.append("\n        if (__item.f43.get().has()) {");
    gold.append("\n          Double __maybeElement86 = (Double)(__item.f43.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement87 = __df43.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement87.show(__maybeElement86, __obj.planField(\"f43\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df43.hide(__obj.planField(\"f43\"));");
    gold.append("\n        }");
    gold.append("\n        __gf43 = __item.f43.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf44 != __item.f44.getGeneration()) {");
    gold.append("\n        if (__item.f44.get().has()) {");
    gold.append("\n          NtComplex __maybeElement88 = (NtComplex)(__item.f44.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement89 = __df44.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement89.show(__maybeElement88, __obj.planField(\"f44\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df44.hide(__obj.planField(\"f44\"));");
    gold.append("\n        }");
    gold.append("\n        __gf44 = __item.f44.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf45 != __item.f45.getGeneration()) {");
    gold.append("\n        if (__item.f45.get().has()) {");
    gold.append("\n          NtComplex __maybeElement90 = (NtComplex)(__item.f45.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement91 = __df45.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement91.show(__maybeElement90, __obj.planField(\"f45\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df45.hide(__obj.planField(\"f45\"));");
    gold.append("\n        }");
    gold.append("\n        __gf45 = __item.f45.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf46 != __item.f46.getGeneration()) {");
    gold.append("\n        if (__item.f46.get().has()) {");
    gold.append("\n          NtComplex __maybeElement92 = (NtComplex)(__item.f46.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement93 = __df46.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement93.show(__maybeElement92, __obj.planField(\"f46\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df46.hide(__obj.planField(\"f46\"));");
    gold.append("\n        }");
    gold.append("\n        __gf46 = __item.f46.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf47 != __item.f47.getGeneration()) {");
    gold.append("\n        if (__item.f47.get().has()) {");
    gold.append("\n          Double __maybeElement94 = (Double)(__item.f47.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement95 = __df47.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement95.show(__maybeElement94, __obj.planField(\"f47\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df47.hide(__obj.planField(\"f47\"));");
    gold.append("\n        }");
    gold.append("\n        __gf47 = __item.f47.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf48 != __item.f48.getGeneration()) {");
    gold.append("\n        if (__item.f48.get().has()) {");
    gold.append("\n          Double __maybeElement96 = (Double)(__item.f48.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement97 = __df48.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement97.show(__maybeElement96, __obj.planField(\"f48\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df48.hide(__obj.planField(\"f48\"));");
    gold.append("\n        }");
    gold.append("\n        __gf48 = __item.f48.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf49 != __item.f49.getGeneration()) {");
    gold.append("\n        if (__item.f49.get().has()) {");
    gold.append("\n          Double __maybeElement98 = (Double)(__item.f49.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement99 = __df49.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement99.show(__maybeElement98, __obj.planField(\"f49\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df49.hide(__obj.planField(\"f49\"));");
    gold.append("\n        }");
    gold.append("\n        __gf49 = __item.f49.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf50 != __item.f50.getGeneration()) {");
    gold.append("\n        if (__item.f50.get().has()) {");
    gold.append("\n          NtComplex __maybeElement100 = (NtComplex)(__item.f50.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement101 = __df50.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement101.show(__maybeElement100, __obj.planField(\"f50\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df50.hide(__obj.planField(\"f50\"));");
    gold.append("\n        }");
    gold.append("\n        __gf50 = __item.f50.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf51 != __item.f51.getGeneration()) {");
    gold.append("\n        if (__item.f51.get().has()) {");
    gold.append("\n          NtComplex __maybeElement102 = (NtComplex)(__item.f51.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement103 = __df51.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement103.show(__maybeElement102, __obj.planField(\"f51\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df51.hide(__obj.planField(\"f51\"));");
    gold.append("\n        }");
    gold.append("\n        __gf51 = __item.f51.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf52 != __item.f52.getGeneration()) {");
    gold.append("\n        if (__item.f52.get().has()) {");
    gold.append("\n          Double __maybeElement104 = (Double)(__item.f52.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement105 = __df52.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement105.show(__maybeElement104, __obj.planField(\"f52\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df52.hide(__obj.planField(\"f52\"));");
    gold.append("\n        }");
    gold.append("\n        __gf52 = __item.f52.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf53 != __item.f53.getGeneration()) {");
    gold.append("\n        if (__item.f53.get().has()) {");
    gold.append("\n          Double __maybeElement106 = (Double)(__item.f53.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement107 = __df53.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement107.show(__maybeElement106, __obj.planField(\"f53\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df53.hide(__obj.planField(\"f53\"));");
    gold.append("\n        }");
    gold.append("\n        __gf53 = __item.f53.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf54 != __item.f54.getGeneration()) {");
    gold.append("\n        if (__item.f54.get().has()) {");
    gold.append("\n          Double __maybeElement108 = (Double)(__item.f54.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement109 = __df54.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement109.show(__maybeElement108, __obj.planField(\"f54\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df54.hide(__obj.planField(\"f54\"));");
    gold.append("\n        }");
    gold.append("\n        __gf54 = __item.f54.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf55 != __item.f55.getGeneration()) {");
    gold.append("\n        if (__item.f55.get().has()) {");
    gold.append("\n          Double __maybeElement110 = (Double)(__item.f55.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement111 = __df55.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement111.show(__maybeElement110, __obj.planField(\"f55\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df55.hide(__obj.planField(\"f55\"));");
    gold.append("\n        }");
    gold.append("\n        __gf55 = __item.f55.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf56 != __item.f56.getGeneration()) {");
    gold.append("\n        if (__item.f56.get().has()) {");
    gold.append("\n          Double __maybeElement112 = (Double)(__item.f56.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement113 = __df56.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement113.show(__maybeElement112, __obj.planField(\"f56\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df56.hide(__obj.planField(\"f56\"));");
    gold.append("\n        }");
    gold.append("\n        __gf56 = __item.f56.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf57 != __item.f57.getGeneration()) {");
    gold.append("\n        if (__item.f57.get().has()) {");
    gold.append("\n          NtComplex __maybeElement114 = (NtComplex)(__item.f57.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement115 = __df57.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement115.show(__maybeElement114, __obj.planField(\"f57\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df57.hide(__obj.planField(\"f57\"));");
    gold.append("\n        }");
    gold.append("\n        __gf57 = __item.f57.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf58 != __item.f58.getGeneration()) {");
    gold.append("\n        if (__item.f58.get().has()) {");
    gold.append("\n          NtComplex __maybeElement116 = (NtComplex)(__item.f58.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement117 = __df58.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement117.show(__maybeElement116, __obj.planField(\"f58\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df58.hide(__obj.planField(\"f58\"));");
    gold.append("\n        }");
    gold.append("\n        __gf58 = __item.f58.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf59 != __item.f59.getGeneration()) {");
    gold.append("\n        if (__item.f59.get().has()) {");
    gold.append("\n          NtComplex __maybeElement118 = (NtComplex)(__item.f59.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement119 = __df59.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement119.show(__maybeElement118, __obj.planField(\"f59\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df59.hide(__obj.planField(\"f59\"));");
    gold.append("\n        }");
    gold.append("\n        __gf59 = __item.f59.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf60 != __item.f60.getGeneration()) {");
    gold.append("\n        if (__item.f60.get().has()) {");
    gold.append("\n          Double __maybeElement120 = (Double)(__item.f60.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement121 = __df60.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement121.show(__maybeElement120, __obj.planField(\"f60\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df60.hide(__obj.planField(\"f60\"));");
    gold.append("\n        }");
    gold.append("\n        __gf60 = __item.f60.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf61 != __item.f61.getGeneration()) {");
    gold.append("\n        if (__item.f61.get().has()) {");
    gold.append("\n          Double __maybeElement122 = (Double)(__item.f61.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement123 = __df61.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement123.show(__maybeElement122, __obj.planField(\"f61\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df61.hide(__obj.planField(\"f61\"));");
    gold.append("\n        }");
    gold.append("\n        __gf61 = __item.f61.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf62 != __item.f62.getGeneration()) {");
    gold.append("\n        if (__item.f62.get().has()) {");
    gold.append("\n          Double __maybeElement124 = (Double)(__item.f62.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement125 = __df62.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement125.show(__maybeElement124, __obj.planField(\"f62\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df62.hide(__obj.planField(\"f62\"));");
    gold.append("\n        }");
    gold.append("\n        __gf62 = __item.f62.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf63 != __item.f63.getGeneration()) {");
    gold.append("\n        if (__item.f63.get().has()) {");
    gold.append("\n          NtComplex __maybeElement126 = (NtComplex)(__item.f63.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement127 = __df63.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement127.show(__maybeElement126, __obj.planField(\"f63\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df63.hide(__obj.planField(\"f63\"));");
    gold.append("\n        }");
    gold.append("\n        __gf63 = __item.f63.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf64 != __item.f64.getGeneration()) {");
    gold.append("\n        if (__item.f64.get().has()) {");
    gold.append("\n          NtComplex __maybeElement128 = (NtComplex)(__item.f64.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement129 = __df64.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement129.show(__maybeElement128, __obj.planField(\"f64\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df64.hide(__obj.planField(\"f64\"));");
    gold.append("\n        }");
    gold.append("\n        __gf64 = __item.f64.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf65 != __item.f65.getGeneration()) {");
    gold.append("\n        if (__item.f65.get().has()) {");
    gold.append("\n          NtComplex __maybeElement130 = (NtComplex)(__item.f65.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement131 = __df65.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement131.show(__maybeElement130, __obj.planField(\"f65\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df65.hide(__obj.planField(\"f65\"));");
    gold.append("\n        }");
    gold.append("\n        __gf65 = __item.f65.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf66 != __item.f66.getGeneration()) {");
    gold.append("\n        if (__item.f66.get().has()) {");
    gold.append("\n          NtComplex __maybeElement132 = (NtComplex)(__item.f66.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement133 = __df66.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement133.show(__maybeElement132, __obj.planField(\"f66\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df66.hide(__obj.planField(\"f66\"));");
    gold.append("\n        }");
    gold.append("\n        __gf66 = __item.f66.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf67 != __item.f67.getGeneration()) {");
    gold.append("\n        if (__item.f67.get().has()) {");
    gold.append("\n          NtComplex __maybeElement134 = (NtComplex)(__item.f67.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement135 = __df67.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement135.show(__maybeElement134, __obj.planField(\"f67\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df67.hide(__obj.planField(\"f67\"));");
    gold.append("\n        }");
    gold.append("\n        __gf67 = __item.f67.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf68 != __item.f68.getGeneration()) {");
    gold.append("\n        if (__item.f68.get().has()) {");
    gold.append("\n          NtComplex __maybeElement136 = (NtComplex)(__item.f68.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement137 = __df68.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement137.show(__maybeElement136, __obj.planField(\"f68\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df68.hide(__obj.planField(\"f68\"));");
    gold.append("\n        }");
    gold.append("\n        __gf68 = __item.f68.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf69 != __item.f69.getGeneration()) {");
    gold.append("\n        if (__item.f69.get().has()) {");
    gold.append("\n          NtComplex __maybeElement138 = (NtComplex)(__item.f69.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement139 = __df69.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement139.show(__maybeElement138, __obj.planField(\"f69\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df69.hide(__obj.planField(\"f69\"));");
    gold.append("\n        }");
    gold.append("\n        __gf69 = __item.f69.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf70 != __item.f70.getGeneration()) {");
    gold.append("\n        if (__item.f70.get().has()) {");
    gold.append("\n          NtComplex __maybeElement140 = (NtComplex)(__item.f70.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement141 = __df70.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement141.show(__maybeElement140, __obj.planField(\"f70\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df70.hide(__obj.planField(\"f70\"));");
    gold.append("\n        }");
    gold.append("\n        __gf70 = __item.f70.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf71 != __item.f71.getGeneration()) {");
    gold.append("\n        if (__item.f71.get().has()) {");
    gold.append("\n          NtComplex __maybeElement142 = (NtComplex)(__item.f71.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement143 = __df71.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement143.show(__maybeElement142, __obj.planField(\"f71\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df71.hide(__obj.planField(\"f71\"));");
    gold.append("\n        }");
    gold.append("\n        __gf71 = __item.f71.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf72 != __item.f72.getGeneration()) {");
    gold.append("\n        if (__item.f72.get().has()) {");
    gold.append("\n          NtComplex __maybeElement144 = (NtComplex)(__item.f72.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement145 = __df72.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement145.show(__maybeElement144, __obj.planField(\"f72\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df72.hide(__obj.planField(\"f72\"));");
    gold.append("\n        }");
    gold.append("\n        __gf72 = __item.f72.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf73 != __item.f73.getGeneration()) {");
    gold.append("\n        if (__item.f73.get().has()) {");
    gold.append("\n          NtComplex __maybeElement146 = (NtComplex)(__item.f73.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement147 = __df73.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement147.show(__maybeElement146, __obj.planField(\"f73\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df73.hide(__obj.planField(\"f73\"));");
    gold.append("\n        }");
    gold.append("\n        __gf73 = __item.f73.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf74 != __item.f74.getGeneration()) {");
    gold.append("\n        if (__item.f74.get().has()) {");
    gold.append("\n          NtComplex __maybeElement148 = (NtComplex)(__item.f74.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement149 = __df74.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement149.show(__maybeElement148, __obj.planField(\"f74\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df74.hide(__obj.planField(\"f74\"));");
    gold.append("\n        }");
    gold.append("\n        __gf74 = __item.f74.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf75 != __item.f75.getGeneration()) {");
    gold.append("\n        if (__item.f75.get().has()) {");
    gold.append("\n          NtComplex __maybeElement150 = (NtComplex)(__item.f75.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement151 = __df75.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement151.show(__maybeElement150, __obj.planField(\"f75\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df75.hide(__obj.planField(\"f75\"));");
    gold.append("\n        }");
    gold.append("\n        __gf75 = __item.f75.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf76 != __item.f76.getGeneration()) {");
    gold.append("\n        if (__item.f76.get().has()) {");
    gold.append("\n          NtComplex __maybeElement152 = (NtComplex)(__item.f76.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement153 = __df76.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement153.show(__maybeElement152, __obj.planField(\"f76\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df76.hide(__obj.planField(\"f76\"));");
    gold.append("\n        }");
    gold.append("\n        __gf76 = __item.f76.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf77 != __item.f77.getGeneration()) {");
    gold.append("\n        if (__item.f77.get().has()) {");
    gold.append("\n          NtComplex __maybeElement154 = (NtComplex)(__item.f77.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement155 = __df77.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement155.show(__maybeElement154, __obj.planField(\"f77\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df77.hide(__obj.planField(\"f77\"));");
    gold.append("\n        }");
    gold.append("\n        __gf77 = __item.f77.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf78 != __item.f78.getGeneration()) {");
    gold.append("\n        if (__item.f78.get().has()) {");
    gold.append("\n          NtComplex __maybeElement156 = (NtComplex)(__item.f78.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement157 = __df78.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement157.show(__maybeElement156, __obj.planField(\"f78\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df78.hide(__obj.planField(\"f78\"));");
    gold.append("\n        }");
    gold.append("\n        __gf78 = __item.f78.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf79 != __item.f79.getGeneration()) {");
    gold.append("\n        if (__item.f79.get().has()) {");
    gold.append("\n          NtComplex __maybeElement158 = (NtComplex)(__item.f79.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement159 = __df79.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement159.show(__maybeElement158, __obj.planField(\"f79\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df79.hide(__obj.planField(\"f79\"));");
    gold.append("\n        }");
    gold.append("\n        __gf79 = __item.f79.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf80 != __item.f80.getGeneration()) {");
    gold.append("\n        if (__item.f80.get().has()) {");
    gold.append("\n          NtComplex __maybeElement160 = (NtComplex)(__item.f80.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement161 = __df80.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement161.show(__maybeElement160, __obj.planField(\"f80\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df80.hide(__obj.planField(\"f80\"));");
    gold.append("\n        }");
    gold.append("\n        __gf80 = __item.f80.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf81 != __item.f81.getGeneration()) {");
    gold.append("\n        if (__item.f81.get().has()) {");
    gold.append("\n          NtComplex __maybeElement162 = (NtComplex)(__item.f81.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement163 = __df81.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement163.show(__maybeElement162, __obj.planField(\"f81\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df81.hide(__obj.planField(\"f81\"));");
    gold.append("\n        }");
    gold.append("\n        __gf81 = __item.f81.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf82 != __item.f82.getGeneration()) {");
    gold.append("\n        if (__item.f82.get().has()) {");
    gold.append("\n          NtComplex __maybeElement164 = (NtComplex)(__item.f82.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement165 = __df82.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement165.show(__maybeElement164, __obj.planField(\"f82\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df82.hide(__obj.planField(\"f82\"));");
    gold.append("\n        }");
    gold.append("\n        __gf82 = __item.f82.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf83 != __item.f83.getGeneration()) {");
    gold.append("\n        if (__item.f83.get().has()) {");
    gold.append("\n          NtComplex __maybeElement166 = (NtComplex)(__item.f83.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement167 = __df83.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement167.show(__maybeElement166, __obj.planField(\"f83\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df83.hide(__obj.planField(\"f83\"));");
    gold.append("\n        }");
    gold.append("\n        __gf83 = __item.f83.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf84 != __item.f84.getGeneration()) {");
    gold.append("\n        if (__item.f84.get().has()) {");
    gold.append("\n          NtComplex __maybeElement168 = (NtComplex)(__item.f84.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement169 = __df84.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement169.show(__maybeElement168, __obj.planField(\"f84\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df84.hide(__obj.planField(\"f84\"));");
    gold.append("\n        }");
    gold.append("\n        __gf84 = __item.f84.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf85 != __item.f85.getGeneration()) {");
    gold.append("\n        if (__item.f85.get().has()) {");
    gold.append("\n          NtComplex __maybeElement170 = (NtComplex)(__item.f85.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement171 = __df85.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement171.show(__maybeElement170, __obj.planField(\"f85\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df85.hide(__obj.planField(\"f85\"));");
    gold.append("\n        }");
    gold.append("\n        __gf85 = __item.f85.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf86 != __item.f86.getGeneration()) {");
    gold.append("\n        if (__item.f86.get().has()) {");
    gold.append("\n          NtComplex __maybeElement172 = (NtComplex)(__item.f86.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement173 = __df86.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement173.show(__maybeElement172, __obj.planField(\"f86\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df86.hide(__obj.planField(\"f86\"));");
    gold.append("\n        }");
    gold.append("\n        __gf86 = __item.f86.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf87 != __item.f87.getGeneration()) {");
    gold.append("\n        if (__item.f87.get().has()) {");
    gold.append("\n          NtComplex __maybeElement174 = (NtComplex)(__item.f87.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement175 = __df87.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement175.show(__maybeElement174, __obj.planField(\"f87\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df87.hide(__obj.planField(\"f87\"));");
    gold.append("\n        }");
    gold.append("\n        __gf87 = __item.f87.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf88 != __item.f88.getGeneration()) {");
    gold.append("\n        if (__item.f88.get().has()) {");
    gold.append("\n          NtComplex __maybeElement176 = (NtComplex)(__item.f88.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement177 = __df88.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement177.show(__maybeElement176, __obj.planField(\"f88\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df88.hide(__obj.planField(\"f88\"));");
    gold.append("\n        }");
    gold.append("\n        __gf88 = __item.f88.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf89 != __item.f89.getGeneration()) {");
    gold.append("\n        if (__item.f89.get().has()) {");
    gold.append("\n          NtComplex __maybeElement178 = (NtComplex)(__item.f89.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement179 = __df89.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement179.show(__maybeElement178, __obj.planField(\"f89\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df89.hide(__obj.planField(\"f89\"));");
    gold.append("\n        }");
    gold.append("\n        __gf89 = __item.f89.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf90 != __item.f90.getGeneration()) {");
    gold.append("\n        if (__item.f90.get().has()) {");
    gold.append("\n          NtComplex __maybeElement180 = (NtComplex)(__item.f90.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement181 = __df90.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement181.show(__maybeElement180, __obj.planField(\"f90\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df90.hide(__obj.planField(\"f90\"));");
    gold.append("\n        }");
    gold.append("\n        __gf90 = __item.f90.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf91 != __item.f91.getGeneration()) {");
    gold.append("\n        if (__item.f91.get().has()) {");
    gold.append("\n          NtComplex __maybeElement182 = (NtComplex)(__item.f91.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement183 = __df91.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement183.show(__maybeElement182, __obj.planField(\"f91\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df91.hide(__obj.planField(\"f91\"));");
    gold.append("\n        }");
    gold.append("\n        __gf91 = __item.f91.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf92 != __item.f92.getGeneration()) {");
    gold.append("\n        if (__item.f92.get().has()) {");
    gold.append("\n          NtComplex __maybeElement184 = (NtComplex)(__item.f92.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement185 = __df92.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement185.show(__maybeElement184, __obj.planField(\"f92\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df92.hide(__obj.planField(\"f92\"));");
    gold.append("\n        }");
    gold.append("\n        __gf92 = __item.f92.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf93 != __item.f93.getGeneration()) {");
    gold.append("\n        if (__item.f93.get().has()) {");
    gold.append("\n          NtComplex __maybeElement186 = (NtComplex)(__item.f93.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement187 = __df93.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement187.show(__maybeElement186, __obj.planField(\"f93\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df93.hide(__obj.planField(\"f93\"));");
    gold.append("\n        }");
    gold.append("\n        __gf93 = __item.f93.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf94 != __item.f94.getGeneration()) {");
    gold.append("\n        if (__item.f94.get().has()) {");
    gold.append("\n          NtComplex __maybeElement188 = (NtComplex)(__item.f94.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement189 = __df94.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement189.show(__maybeElement188, __obj.planField(\"f94\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df94.hide(__obj.planField(\"f94\"));");
    gold.append("\n        }");
    gold.append("\n        __gf94 = __item.f94.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf95 != __item.f95.getGeneration()) {");
    gold.append("\n        if (__item.f95.get().has()) {");
    gold.append("\n          NtComplex __maybeElement190 = (NtComplex)(__item.f95.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement191 = __df95.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement191.show(__maybeElement190, __obj.planField(\"f95\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df95.hide(__obj.planField(\"f95\"));");
    gold.append("\n        }");
    gold.append("\n        __gf95 = __item.f95.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf96 != __item.f96.getGeneration()) {");
    gold.append("\n        if (__item.f96.get().has()) {");
    gold.append("\n          NtComplex __maybeElement192 = (NtComplex)(__item.f96.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement193 = __df96.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement193.show(__maybeElement192, __obj.planField(\"f96\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df96.hide(__obj.planField(\"f96\"));");
    gold.append("\n        }");
    gold.append("\n        __gf96 = __item.f96.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf97 != __item.f97.getGeneration()) {");
    gold.append("\n        if (__item.f97.get().has()) {");
    gold.append("\n          NtComplex __maybeElement194 = (NtComplex)(__item.f97.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement195 = __df97.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement195.show(__maybeElement194, __obj.planField(\"f97\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df97.hide(__obj.planField(\"f97\"));");
    gold.append("\n        }");
    gold.append("\n        __gf97 = __item.f97.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf98 != __item.f98.getGeneration()) {");
    gold.append("\n        if (__item.f98.get().has()) {");
    gold.append("\n          NtComplex __maybeElement196 = (NtComplex)(__item.f98.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement197 = __df98.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement197.show(__maybeElement196, __obj.planField(\"f98\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df98.hide(__obj.planField(\"f98\"));");
    gold.append("\n        }");
    gold.append("\n        __gf98 = __item.f98.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf99 != __item.f99.getGeneration()) {");
    gold.append("\n        if (__item.f99.get().has()) {");
    gold.append("\n          NtComplex __maybeElement198 = (NtComplex)(__item.f99.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement199 = __df99.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement199.show(__maybeElement198, __obj.planField(\"f99\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df99.hide(__obj.planField(\"f99\"));");
    gold.append("\n        }");
    gold.append("\n        __gf99 = __item.f99.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf100 != __item.f100.getGeneration()) {");
    gold.append("\n        if (__item.f100.get().has()) {");
    gold.append("\n          NtComplex __maybeElement200 = (NtComplex)(__item.f100.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement201 = __df100.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement201.show(__maybeElement200, __obj.planField(\"f100\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df100.hide(__obj.planField(\"f100\"));");
    gold.append("\n        }");
    gold.append("\n        __gf100 = __item.f100.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf101 != __item.f101.getGeneration()) {");
    gold.append("\n        if (__item.f101.get().has()) {");
    gold.append("\n          NtComplex __maybeElement202 = (NtComplex)(__item.f101.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement203 = __df101.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement203.show(__maybeElement202, __obj.planField(\"f101\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df101.hide(__obj.planField(\"f101\"));");
    gold.append("\n        }");
    gold.append("\n        __gf101 = __item.f101.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf102 != __item.f102.getGeneration()) {");
    gold.append("\n        if (__item.f102.get().has()) {");
    gold.append("\n          NtComplex __maybeElement204 = (NtComplex)(__item.f102.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement205 = __df102.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement205.show(__maybeElement204, __obj.planField(\"f102\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df102.hide(__obj.planField(\"f102\"));");
    gold.append("\n        }");
    gold.append("\n        __gf102 = __item.f102.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf103 != __item.f103.getGeneration()) {");
    gold.append("\n        if (__item.f103.get().has()) {");
    gold.append("\n          NtComplex __maybeElement206 = (NtComplex)(__item.f103.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement207 = __df103.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement207.show(__maybeElement206, __obj.planField(\"f103\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df103.hide(__obj.planField(\"f103\"));");
    gold.append("\n        }");
    gold.append("\n        __gf103 = __item.f103.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf104 != __item.f104.getGeneration()) {");
    gold.append("\n        if (__item.f104.get().has()) {");
    gold.append("\n          Double __maybeElement208 = (Double)(__item.f104.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement209 = __df104.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement209.show(__maybeElement208, __obj.planField(\"f104\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df104.hide(__obj.planField(\"f104\"));");
    gold.append("\n        }");
    gold.append("\n        __gf104 = __item.f104.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf105 != __item.f105.getGeneration()) {");
    gold.append("\n        if (__item.f105.get().has()) {");
    gold.append("\n          Double __maybeElement210 = (Double)(__item.f105.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement211 = __df105.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement211.show(__maybeElement210, __obj.planField(\"f105\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df105.hide(__obj.planField(\"f105\"));");
    gold.append("\n        }");
    gold.append("\n        __gf105 = __item.f105.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf106 != __item.f106.getGeneration()) {");
    gold.append("\n        if (__item.f106.get().has()) {");
    gold.append("\n          Double __maybeElement212 = (Double)(__item.f106.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement213 = __df106.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement213.show(__maybeElement212, __obj.planField(\"f106\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df106.hide(__obj.planField(\"f106\"));");
    gold.append("\n        }");
    gold.append("\n        __gf106 = __item.f106.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf107 != __item.f107.getGeneration()) {");
    gold.append("\n        if (__item.f107.get().has()) {");
    gold.append("\n          Double __maybeElement214 = (Double)(__item.f107.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement215 = __df107.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement215.show(__maybeElement214, __obj.planField(\"f107\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df107.hide(__obj.planField(\"f107\"));");
    gold.append("\n        }");
    gold.append("\n        __gf107 = __item.f107.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf108 != __item.f108.getGeneration()) {");
    gold.append("\n        if (__item.f108.get().has()) {");
    gold.append("\n          Double __maybeElement216 = (Double)(__item.f108.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement217 = __df108.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement217.show(__maybeElement216, __obj.planField(\"f108\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df108.hide(__obj.planField(\"f108\"));");
    gold.append("\n        }");
    gold.append("\n        __gf108 = __item.f108.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf109 != __item.f109.getGeneration()) {");
    gold.append("\n        if (__item.f109.get().has()) {");
    gold.append("\n          NtComplex __maybeElement218 = (NtComplex)(__item.f109.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement219 = __df109.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement219.show(__maybeElement218, __obj.planField(\"f109\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df109.hide(__obj.planField(\"f109\"));");
    gold.append("\n        }");
    gold.append("\n        __gf109 = __item.f109.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf110 != __item.f110.getGeneration()) {");
    gold.append("\n        if (__item.f110.get().has()) {");
    gold.append("\n          NtComplex __maybeElement220 = (NtComplex)(__item.f110.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement221 = __df110.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement221.show(__maybeElement220, __obj.planField(\"f110\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df110.hide(__obj.planField(\"f110\"));");
    gold.append("\n        }");
    gold.append("\n        __gf110 = __item.f110.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf111 != __item.f111.getGeneration()) {");
    gold.append("\n        if (__item.f111.get().has()) {");
    gold.append("\n          NtComplex __maybeElement222 = (NtComplex)(__item.f111.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement223 = __df111.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement223.show(__maybeElement222, __obj.planField(\"f111\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df111.hide(__obj.planField(\"f111\"));");
    gold.append("\n        }");
    gold.append("\n        __gf111 = __item.f111.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf112 != __item.f112.getGeneration()) {");
    gold.append("\n        if (__item.f112.get().has()) {");
    gold.append("\n          Double __maybeElement224 = (Double)(__item.f112.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement225 = __df112.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement225.show(__maybeElement224, __obj.planField(\"f112\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df112.hide(__obj.planField(\"f112\"));");
    gold.append("\n        }");
    gold.append("\n        __gf112 = __item.f112.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf113 != __item.f113.getGeneration()) {");
    gold.append("\n        if (__item.f113.get().has()) {");
    gold.append("\n          Double __maybeElement226 = (Double)(__item.f113.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement227 = __df113.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement227.show(__maybeElement226, __obj.planField(\"f113\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df113.hide(__obj.planField(\"f113\"));");
    gold.append("\n        }");
    gold.append("\n        __gf113 = __item.f113.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf114 != __item.f114.getGeneration()) {");
    gold.append("\n        if (__item.f114.get().has()) {");
    gold.append("\n          Double __maybeElement228 = (Double)(__item.f114.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement229 = __df114.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement229.show(__maybeElement228, __obj.planField(\"f114\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df114.hide(__obj.planField(\"f114\"));");
    gold.append("\n        }");
    gold.append("\n        __gf114 = __item.f114.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf115 != __item.f115.getGeneration()) {");
    gold.append("\n        if (__item.f115.get().has()) {");
    gold.append("\n          NtComplex __maybeElement230 = (NtComplex)(__item.f115.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement231 = __df115.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement231.show(__maybeElement230, __obj.planField(\"f115\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df115.hide(__obj.planField(\"f115\"));");
    gold.append("\n        }");
    gold.append("\n        __gf115 = __item.f115.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf116 != __item.f116.getGeneration()) {");
    gold.append("\n        if (__item.f116.get().has()) {");
    gold.append("\n          NtComplex __maybeElement232 = (NtComplex)(__item.f116.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement233 = __df116.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement233.show(__maybeElement232, __obj.planField(\"f116\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df116.hide(__obj.planField(\"f116\"));");
    gold.append("\n        }");
    gold.append("\n        __gf116 = __item.f116.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf117 != __item.f117.getGeneration()) {");
    gold.append("\n        if (__item.f117.get().has()) {");
    gold.append("\n          Double __maybeElement234 = (Double)(__item.f117.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement235 = __df117.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement235.show(__maybeElement234, __obj.planField(\"f117\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df117.hide(__obj.planField(\"f117\"));");
    gold.append("\n        }");
    gold.append("\n        __gf117 = __item.f117.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf118 != __item.f118.getGeneration()) {");
    gold.append("\n        if (__item.f118.get().has()) {");
    gold.append("\n          Double __maybeElement236 = (Double)(__item.f118.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement237 = __df118.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement237.show(__maybeElement236, __obj.planField(\"f118\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df118.hide(__obj.planField(\"f118\"));");
    gold.append("\n        }");
    gold.append("\n        __gf118 = __item.f118.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf119 != __item.f119.getGeneration()) {");
    gold.append("\n        if (__item.f119.get().has()) {");
    gold.append("\n          Double __maybeElement238 = (Double)(__item.f119.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement239 = __df119.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement239.show(__maybeElement238, __obj.planField(\"f119\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df119.hide(__obj.planField(\"f119\"));");
    gold.append("\n        }");
    gold.append("\n        __gf119 = __item.f119.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf120 != __item.f120.getGeneration()) {");
    gold.append("\n        if (__item.f120.get().has()) {");
    gold.append("\n          Double __maybeElement240 = (Double)(__item.f120.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement241 = __df120.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement241.show(__maybeElement240, __obj.planField(\"f120\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df120.hide(__obj.planField(\"f120\"));");
    gold.append("\n        }");
    gold.append("\n        __gf120 = __item.f120.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf121 != __item.f121.getGeneration()) {");
    gold.append("\n        if (__item.f121.get().has()) {");
    gold.append("\n          Double __maybeElement242 = (Double)(__item.f121.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement243 = __df121.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement243.show(__maybeElement242, __obj.planField(\"f121\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df121.hide(__obj.planField(\"f121\"));");
    gold.append("\n        }");
    gold.append("\n        __gf121 = __item.f121.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf122 != __item.f122.getGeneration()) {");
    gold.append("\n        if (__item.f122.get().has()) {");
    gold.append("\n          NtComplex __maybeElement244 = (NtComplex)(__item.f122.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement245 = __df122.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement245.show(__maybeElement244, __obj.planField(\"f122\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df122.hide(__obj.planField(\"f122\"));");
    gold.append("\n        }");
    gold.append("\n        __gf122 = __item.f122.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf123 != __item.f123.getGeneration()) {");
    gold.append("\n        if (__item.f123.get().has()) {");
    gold.append("\n          NtComplex __maybeElement246 = (NtComplex)(__item.f123.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement247 = __df123.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement247.show(__maybeElement246, __obj.planField(\"f123\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df123.hide(__obj.planField(\"f123\"));");
    gold.append("\n        }");
    gold.append("\n        __gf123 = __item.f123.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf124 != __item.f124.getGeneration()) {");
    gold.append("\n        if (__item.f124.get().has()) {");
    gold.append("\n          NtComplex __maybeElement248 = (NtComplex)(__item.f124.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement249 = __df124.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement249.show(__maybeElement248, __obj.planField(\"f124\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df124.hide(__obj.planField(\"f124\"));");
    gold.append("\n        }");
    gold.append("\n        __gf124 = __item.f124.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf125 != __item.f125.getGeneration()) {");
    gold.append("\n        if (__item.f125.get().has()) {");
    gold.append("\n          Double __maybeElement250 = (Double)(__item.f125.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement251 = __df125.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement251.show(__maybeElement250, __obj.planField(\"f125\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df125.hide(__obj.planField(\"f125\"));");
    gold.append("\n        }");
    gold.append("\n        __gf125 = __item.f125.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf126 != __item.f126.getGeneration()) {");
    gold.append("\n        if (__item.f126.get().has()) {");
    gold.append("\n          Double __maybeElement252 = (Double)(__item.f126.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement253 = __df126.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement253.show(__maybeElement252, __obj.planField(\"f126\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df126.hide(__obj.planField(\"f126\"));");
    gold.append("\n        }");
    gold.append("\n        __gf126 = __item.f126.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf127 != __item.f127.getGeneration()) {");
    gold.append("\n        if (__item.f127.get().has()) {");
    gold.append("\n          Double __maybeElement254 = (Double)(__item.f127.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement255 = __df127.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement255.show(__maybeElement254, __obj.planField(\"f127\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df127.hide(__obj.planField(\"f127\"));");
    gold.append("\n        }");
    gold.append("\n        __gf127 = __item.f127.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf128 != __item.f128.getGeneration()) {");
    gold.append("\n        if (__item.f128.get().has()) {");
    gold.append("\n          NtComplex __maybeElement256 = (NtComplex)(__item.f128.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement257 = __df128.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement257.show(__maybeElement256, __obj.planField(\"f128\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df128.hide(__obj.planField(\"f128\"));");
    gold.append("\n        }");
    gold.append("\n        __gf128 = __item.f128.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf129 != __item.f129.getGeneration()) {");
    gold.append("\n        if (__item.f129.get().has()) {");
    gold.append("\n          NtComplex __maybeElement258 = (NtComplex)(__item.f129.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement259 = __df129.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement259.show(__maybeElement258, __obj.planField(\"f129\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df129.hide(__obj.planField(\"f129\"));");
    gold.append("\n        }");
    gold.append("\n        __gf129 = __item.f129.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf130 != __item.f130.getGeneration()) {");
    gold.append("\n        if (__item.f130.get().has()) {");
    gold.append("\n          Double __maybeElement260 = (Double)(__item.f130.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement261 = __df130.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement261.show(__maybeElement260, __obj.planField(\"f130\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df130.hide(__obj.planField(\"f130\"));");
    gold.append("\n        }");
    gold.append("\n        __gf130 = __item.f130.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf131 != __item.f131.getGeneration()) {");
    gold.append("\n        if (__item.f131.get().has()) {");
    gold.append("\n          Double __maybeElement262 = (Double)(__item.f131.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement263 = __df131.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement263.show(__maybeElement262, __obj.planField(\"f131\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df131.hide(__obj.planField(\"f131\"));");
    gold.append("\n        }");
    gold.append("\n        __gf131 = __item.f131.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf132 != __item.f132.getGeneration()) {");
    gold.append("\n        if (__item.f132.get().has()) {");
    gold.append("\n          Double __maybeElement264 = (Double)(__item.f132.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement265 = __df132.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement265.show(__maybeElement264, __obj.planField(\"f132\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df132.hide(__obj.planField(\"f132\"));");
    gold.append("\n        }");
    gold.append("\n        __gf132 = __item.f132.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf133 != __item.f133.getGeneration()) {");
    gold.append("\n        if (__item.f133.get().has()) {");
    gold.append("\n          Double __maybeElement266 = (Double)(__item.f133.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement267 = __df133.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement267.show(__maybeElement266, __obj.planField(\"f133\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df133.hide(__obj.planField(\"f133\"));");
    gold.append("\n        }");
    gold.append("\n        __gf133 = __item.f133.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf134 != __item.f134.getGeneration()) {");
    gold.append("\n        if (__item.f134.get().has()) {");
    gold.append("\n          Double __maybeElement268 = (Double)(__item.f134.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement269 = __df134.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement269.show(__maybeElement268, __obj.planField(\"f134\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df134.hide(__obj.planField(\"f134\"));");
    gold.append("\n        }");
    gold.append("\n        __gf134 = __item.f134.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf135 != __item.f135.getGeneration()) {");
    gold.append("\n        if (__item.f135.get().has()) {");
    gold.append("\n          NtComplex __maybeElement270 = (NtComplex)(__item.f135.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement271 = __df135.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement271.show(__maybeElement270, __obj.planField(\"f135\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df135.hide(__obj.planField(\"f135\"));");
    gold.append("\n        }");
    gold.append("\n        __gf135 = __item.f135.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf136 != __item.f136.getGeneration()) {");
    gold.append("\n        if (__item.f136.get().has()) {");
    gold.append("\n          NtComplex __maybeElement272 = (NtComplex)(__item.f136.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement273 = __df136.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement273.show(__maybeElement272, __obj.planField(\"f136\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df136.hide(__obj.planField(\"f136\"));");
    gold.append("\n        }");
    gold.append("\n        __gf136 = __item.f136.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf137 != __item.f137.getGeneration()) {");
    gold.append("\n        if (__item.f137.get().has()) {");
    gold.append("\n          NtComplex __maybeElement274 = (NtComplex)(__item.f137.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement275 = __df137.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement275.show(__maybeElement274, __obj.planField(\"f137\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df137.hide(__obj.planField(\"f137\"));");
    gold.append("\n        }");
    gold.append("\n        __gf137 = __item.f137.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf138 != __item.f138.getGeneration()) {");
    gold.append("\n        if (__item.f138.get().has()) {");
    gold.append("\n          Double __maybeElement276 = (Double)(__item.f138.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement277 = __df138.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement277.show(__maybeElement276, __obj.planField(\"f138\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df138.hide(__obj.planField(\"f138\"));");
    gold.append("\n        }");
    gold.append("\n        __gf138 = __item.f138.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf139 != __item.f139.getGeneration()) {");
    gold.append("\n        if (__item.f139.get().has()) {");
    gold.append("\n          Double __maybeElement278 = (Double)(__item.f139.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement279 = __df139.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement279.show(__maybeElement278, __obj.planField(\"f139\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df139.hide(__obj.planField(\"f139\"));");
    gold.append("\n        }");
    gold.append("\n        __gf139 = __item.f139.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf140 != __item.f140.getGeneration()) {");
    gold.append("\n        if (__item.f140.get().has()) {");
    gold.append("\n          Double __maybeElement280 = (Double)(__item.f140.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement281 = __df140.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement281.show(__maybeElement280, __obj.planField(\"f140\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df140.hide(__obj.planField(\"f140\"));");
    gold.append("\n        }");
    gold.append("\n        __gf140 = __item.f140.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf141 != __item.f141.getGeneration()) {");
    gold.append("\n        if (__item.f141.get().has()) {");
    gold.append("\n          NtComplex __maybeElement282 = (NtComplex)(__item.f141.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement283 = __df141.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement283.show(__maybeElement282, __obj.planField(\"f141\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df141.hide(__obj.planField(\"f141\"));");
    gold.append("\n        }");
    gold.append("\n        __gf141 = __item.f141.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf142 != __item.f142.getGeneration()) {");
    gold.append("\n        if (__item.f142.get().has()) {");
    gold.append("\n          NtComplex __maybeElement284 = (NtComplex)(__item.f142.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement285 = __df142.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement285.show(__maybeElement284, __obj.planField(\"f142\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df142.hide(__obj.planField(\"f142\"));");
    gold.append("\n        }");
    gold.append("\n        __gf142 = __item.f142.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf143 != __item.f143.getGeneration()) {");
    gold.append("\n        if (__item.f143.get().has()) {");
    gold.append("\n          NtComplex __maybeElement286 = (NtComplex)(__item.f143.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement287 = __df143.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement287.show(__maybeElement286, __obj.planField(\"f143\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df143.hide(__obj.planField(\"f143\"));");
    gold.append("\n        }");
    gold.append("\n        __gf143 = __item.f143.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf144 != __item.f144.getGeneration()) {");
    gold.append("\n        if (__item.f144.get().has()) {");
    gold.append("\n          NtComplex __maybeElement288 = (NtComplex)(__item.f144.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement289 = __df144.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement289.show(__maybeElement288, __obj.planField(\"f144\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df144.hide(__obj.planField(\"f144\"));");
    gold.append("\n        }");
    gold.append("\n        __gf144 = __item.f144.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf145 != __item.f145.getGeneration()) {");
    gold.append("\n        if (__item.f145.get().has()) {");
    gold.append("\n          NtComplex __maybeElement290 = (NtComplex)(__item.f145.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement291 = __df145.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement291.show(__maybeElement290, __obj.planField(\"f145\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df145.hide(__obj.planField(\"f145\"));");
    gold.append("\n        }");
    gold.append("\n        __gf145 = __item.f145.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf146 != __item.f146.getGeneration()) {");
    gold.append("\n        if (__item.f146.get().has()) {");
    gold.append("\n          NtComplex __maybeElement292 = (NtComplex)(__item.f146.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement293 = __df146.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement293.show(__maybeElement292, __obj.planField(\"f146\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df146.hide(__obj.planField(\"f146\"));");
    gold.append("\n        }");
    gold.append("\n        __gf146 = __item.f146.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf147 != __item.f147.getGeneration()) {");
    gold.append("\n        if (__item.f147.get().has()) {");
    gold.append("\n          NtComplex __maybeElement294 = (NtComplex)(__item.f147.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement295 = __df147.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement295.show(__maybeElement294, __obj.planField(\"f147\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df147.hide(__obj.planField(\"f147\"));");
    gold.append("\n        }");
    gold.append("\n        __gf147 = __item.f147.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf148 != __item.f148.getGeneration()) {");
    gold.append("\n        if (__item.f148.get().has()) {");
    gold.append("\n          NtComplex __maybeElement296 = (NtComplex)(__item.f148.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement297 = __df148.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement297.show(__maybeElement296, __obj.planField(\"f148\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df148.hide(__obj.planField(\"f148\"));");
    gold.append("\n        }");
    gold.append("\n        __gf148 = __item.f148.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf149 != __item.f149.getGeneration()) {");
    gold.append("\n        if (__item.f149.get().has()) {");
    gold.append("\n          NtComplex __maybeElement298 = (NtComplex)(__item.f149.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement299 = __df149.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement299.show(__maybeElement298, __obj.planField(\"f149\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df149.hide(__obj.planField(\"f149\"));");
    gold.append("\n        }");
    gold.append("\n        __gf149 = __item.f149.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf150 != __item.f150.getGeneration()) {");
    gold.append("\n        if (__item.f150.get().has()) {");
    gold.append("\n          NtComplex __maybeElement300 = (NtComplex)(__item.f150.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement301 = __df150.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement301.show(__maybeElement300, __obj.planField(\"f150\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df150.hide(__obj.planField(\"f150\"));");
    gold.append("\n        }");
    gold.append("\n        __gf150 = __item.f150.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf151 != __item.f151.getGeneration()) {");
    gold.append("\n        if (__item.f151.get().has()) {");
    gold.append("\n          NtComplex __maybeElement302 = (NtComplex)(__item.f151.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement303 = __df151.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement303.show(__maybeElement302, __obj.planField(\"f151\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df151.hide(__obj.planField(\"f151\"));");
    gold.append("\n        }");
    gold.append("\n        __gf151 = __item.f151.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf152 != __item.f152.getGeneration()) {");
    gold.append("\n        if (__item.f152.get().has()) {");
    gold.append("\n          NtComplex __maybeElement304 = (NtComplex)(__item.f152.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement305 = __df152.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement305.show(__maybeElement304, __obj.planField(\"f152\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df152.hide(__obj.planField(\"f152\"));");
    gold.append("\n        }");
    gold.append("\n        __gf152 = __item.f152.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf153 != __item.f153.getGeneration()) {");
    gold.append("\n        if (__item.f153.get().has()) {");
    gold.append("\n          NtComplex __maybeElement306 = (NtComplex)(__item.f153.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement307 = __df153.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement307.show(__maybeElement306, __obj.planField(\"f153\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df153.hide(__obj.planField(\"f153\"));");
    gold.append("\n        }");
    gold.append("\n        __gf153 = __item.f153.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf154 != __item.f154.getGeneration()) {");
    gold.append("\n        if (__item.f154.get().has()) {");
    gold.append("\n          NtComplex __maybeElement308 = (NtComplex)(__item.f154.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement309 = __df154.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement309.show(__maybeElement308, __obj.planField(\"f154\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df154.hide(__obj.planField(\"f154\"));");
    gold.append("\n        }");
    gold.append("\n        __gf154 = __item.f154.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf155 != __item.f155.getGeneration()) {");
    gold.append("\n        if (__item.f155.get().has()) {");
    gold.append("\n          NtComplex __maybeElement310 = (NtComplex)(__item.f155.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement311 = __df155.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement311.show(__maybeElement310, __obj.planField(\"f155\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df155.hide(__obj.planField(\"f155\"));");
    gold.append("\n        }");
    gold.append("\n        __gf155 = __item.f155.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf156 != __item.f156.getGeneration()) {");
    gold.append("\n        if (__item.f156.get().has()) {");
    gold.append("\n          NtComplex __maybeElement312 = (NtComplex)(__item.f156.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement313 = __df156.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement313.show(__maybeElement312, __obj.planField(\"f156\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df156.hide(__obj.planField(\"f156\"));");
    gold.append("\n        }");
    gold.append("\n        __gf156 = __item.f156.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf157 != __item.f157.getGeneration()) {");
    gold.append("\n        if (__item.f157.get().has()) {");
    gold.append("\n          NtComplex __maybeElement314 = (NtComplex)(__item.f157.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement315 = __df157.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement315.show(__maybeElement314, __obj.planField(\"f157\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df157.hide(__obj.planField(\"f157\"));");
    gold.append("\n        }");
    gold.append("\n        __gf157 = __item.f157.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf158 != __item.f158.getGeneration()) {");
    gold.append("\n        if (__item.f158.get().has()) {");
    gold.append("\n          NtComplex __maybeElement316 = (NtComplex)(__item.f158.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement317 = __df158.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement317.show(__maybeElement316, __obj.planField(\"f158\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df158.hide(__obj.planField(\"f158\"));");
    gold.append("\n        }");
    gold.append("\n        __gf158 = __item.f158.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf159 != __item.f159.getGeneration()) {");
    gold.append("\n        if (__item.f159.get().has()) {");
    gold.append("\n          NtComplex __maybeElement318 = (NtComplex)(__item.f159.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement319 = __df159.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement319.show(__maybeElement318, __obj.planField(\"f159\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df159.hide(__obj.planField(\"f159\"));");
    gold.append("\n        }");
    gold.append("\n        __gf159 = __item.f159.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf160 != __item.f160.getGeneration()) {");
    gold.append("\n        if (__item.f160.get().has()) {");
    gold.append("\n          NtComplex __maybeElement320 = (NtComplex)(__item.f160.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement321 = __df160.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement321.show(__maybeElement320, __obj.planField(\"f160\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df160.hide(__obj.planField(\"f160\"));");
    gold.append("\n        }");
    gold.append("\n        __gf160 = __item.f160.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf161 != __item.f161.getGeneration()) {");
    gold.append("\n        if (__item.f161.get().has()) {");
    gold.append("\n          NtComplex __maybeElement322 = (NtComplex)(__item.f161.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement323 = __df161.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement323.show(__maybeElement322, __obj.planField(\"f161\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df161.hide(__obj.planField(\"f161\"));");
    gold.append("\n        }");
    gold.append("\n        __gf161 = __item.f161.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf162 != __item.f162.getGeneration()) {");
    gold.append("\n        if (__item.f162.get().has()) {");
    gold.append("\n          NtComplex __maybeElement324 = (NtComplex)(__item.f162.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement325 = __df162.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement325.show(__maybeElement324, __obj.planField(\"f162\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df162.hide(__obj.planField(\"f162\"));");
    gold.append("\n        }");
    gold.append("\n        __gf162 = __item.f162.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf163 != __item.f163.getGeneration()) {");
    gold.append("\n        if (__item.f163.get().has()) {");
    gold.append("\n          NtComplex __maybeElement326 = (NtComplex)(__item.f163.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement327 = __df163.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement327.show(__maybeElement326, __obj.planField(\"f163\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df163.hide(__obj.planField(\"f163\"));");
    gold.append("\n        }");
    gold.append("\n        __gf163 = __item.f163.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf164 != __item.f164.getGeneration()) {");
    gold.append("\n        if (__item.f164.get().has()) {");
    gold.append("\n          NtComplex __maybeElement328 = (NtComplex)(__item.f164.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement329 = __df164.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement329.show(__maybeElement328, __obj.planField(\"f164\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df164.hide(__obj.planField(\"f164\"));");
    gold.append("\n        }");
    gold.append("\n        __gf164 = __item.f164.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf165 != __item.f165.getGeneration()) {");
    gold.append("\n        if (__item.f165.get().has()) {");
    gold.append("\n          NtComplex __maybeElement330 = (NtComplex)(__item.f165.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement331 = __df165.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement331.show(__maybeElement330, __obj.planField(\"f165\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df165.hide(__obj.planField(\"f165\"));");
    gold.append("\n        }");
    gold.append("\n        __gf165 = __item.f165.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf166 != __item.f166.getGeneration()) {");
    gold.append("\n        if (__item.f166.get().has()) {");
    gold.append("\n          NtComplex __maybeElement332 = (NtComplex)(__item.f166.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement333 = __df166.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement333.show(__maybeElement332, __obj.planField(\"f166\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df166.hide(__obj.planField(\"f166\"));");
    gold.append("\n        }");
    gold.append("\n        __gf166 = __item.f166.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf167 != __item.f167.getGeneration()) {");
    gold.append("\n        if (__item.f167.get().has()) {");
    gold.append("\n          NtComplex __maybeElement334 = (NtComplex)(__item.f167.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement335 = __df167.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement335.show(__maybeElement334, __obj.planField(\"f167\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df167.hide(__obj.planField(\"f167\"));");
    gold.append("\n        }");
    gold.append("\n        __gf167 = __item.f167.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf168 != __item.f168.getGeneration()) {");
    gold.append("\n        if (__item.f168.get().has()) {");
    gold.append("\n          NtComplex __maybeElement336 = (NtComplex)(__item.f168.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement337 = __df168.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement337.show(__maybeElement336, __obj.planField(\"f168\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df168.hide(__obj.planField(\"f168\"));");
    gold.append("\n        }");
    gold.append("\n        __gf168 = __item.f168.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    OperationsDivideCases_4 __self = this;");
    gold.append("\n    DeltaOperationsDivideCases_4 __state = new DeltaOperationsDivideCases_4();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, NtMessageBase message) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"f0\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f1\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f2\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f3\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f4\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f5\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f6\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f7\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f8\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f9\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f10\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f11\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f12\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f13\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f14\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f15\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f16\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f17\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f18\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f19\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f20\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f21\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f22\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f23\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f24\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f25\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f26\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f27\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f28\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f29\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f30\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f31\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f32\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f33\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f34\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f35\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f36\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f37\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f38\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f39\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f40\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f41\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f42\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f43\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f44\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f45\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f46\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f47\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f48\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f49\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f50\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f51\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f52\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f53\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f54\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f55\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f56\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f57\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f58\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f59\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f60\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f61\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f62\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f63\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f64\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f65\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f66\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f67\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f68\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f69\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f70\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f71\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f72\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f73\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f74\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f75\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f76\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f77\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f78\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f79\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f80\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f81\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f82\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f83\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f84\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f85\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f86\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f87\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f88\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f89\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f90\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f91\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f92\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f93\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f94\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f95\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f96\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f97\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f98\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f99\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f100\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f101\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f102\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f103\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f104\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f105\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f106\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f107\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f108\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f109\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f110\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f111\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f112\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f113\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f114\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f115\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f116\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f117\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f118\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f119\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f120\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f121\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f122\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f123\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f124\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f125\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f126\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f127\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f128\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f129\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f130\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f131\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f132\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f133\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f134\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f135\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f136\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f137\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f138\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f139\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f140\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f141\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f142\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f143\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f144\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f145\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f146\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f147\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f148\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f149\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f150\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f151\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f152\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f153\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f154\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f155\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f156\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f157\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f158\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f159\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f160\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f161\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f162\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f163\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f164\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f165\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f166\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f167\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f168\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:7144");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"f0\":1.0,\"f1\":1.0,\"f2\":2.0,\"f3\":2.0,\"f5\":{\"r\":0.0,\"i\":-1.0},\"f6\":{\"r\":0.0,\"i\":1.0},\"f13\":1.0,\"f14\":1.0,\"f15\":2.0,\"f16\":2.0,\"f18\":{\"r\":0.0,\"i\":-1.0},\"f19\":{\"r\":0.0,\"i\":1.0},\"f26\":0.5,\"f27\":0.5,\"f28\":1.0,\"f29\":1.0,\"f31\":{\"r\":0.0,\"i\":-0.5},\"f32\":{\"r\":0.0,\"i\":0.5},\"f39\":0.5,\"f40\":0.5,\"f41\":1.0,\"f42\":1.0,\"f44\":{\"r\":0.0,\"i\":-0.5},\"f45\":{\"r\":0.0,\"i\":0.5},\"f65\":{\"r\":0.0,\"i\":1.0},\"f66\":{\"r\":0.0,\"i\":1.0},\"f67\":{\"r\":0.0,\"i\":2.0},\"f68\":{\"r\":0.0,\"i\":2.0},\"f70\":{\"r\":-1.0,\"i\":0.0},\"f71\":{\"r\":1.0,\"i\":0.0},\"f78\":{\"r\":0.0,\"i\":-1.0},\"f79\":{\"r\":0.0,\"i\":-1.0},\"f80\":{\"r\":0.0,\"i\":-2.0},\"f81\":{\"r\":0.0,\"i\":-2.0},\"f83\":{\"r\":1.0,\"i\":0.0},\"f84\":{\"r\":-1.0,\"i\":-0.0},\"f97\":{\"r\":0.0,\"i\":-1.0},\"f104\":0.0,\"f105\":0.0,\"f106\":0.0,\"f107\":0.0,\"f109\":{\"r\":0.0,\"i\":-0.0},\"f110\":{\"r\":0.0,\"i\":0.0},\"f117\":0.0,\"f118\":0.0,\"f119\":0.0,\"f120\":0.0,\"f122\":{\"r\":0.0,\"i\":-0.0},\"f123\":{\"r\":0.0,\"i\":0.0},\"f130\":0.0,\"f131\":0.0,\"f132\":0.0,\"f133\":0.0,\"f135\":{\"r\":0.0,\"i\":-0.0},\"f136\":{\"r\":0.0,\"i\":0.0},\"f143\":{\"r\":0.0,\"i\":0.0},\"f144\":{\"r\":0.0,\"i\":0.0},\"f145\":{\"r\":0.0,\"i\":0.0},\"f146\":{\"r\":0.0,\"i\":0.0},\"f148\":{\"r\":0.0,\"i\":0.0},\"f149\":{\"r\":0.0,\"i\":0.0},\"f162\":{\"r\":0.0,\"i\":-1.0}},\"seq\":2}");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"f0\":1.0,\"f1\":1.0,\"f2\":2.0,\"f3\":2.0,\"f5\":{\"r\":0.0,\"i\":-1.0},\"f6\":{\"r\":0.0,\"i\":1.0},\"f13\":1.0,\"f14\":1.0,\"f15\":2.0,\"f16\":2.0,\"f18\":{\"r\":0.0,\"i\":-1.0},\"f19\":{\"r\":0.0,\"i\":1.0},\"f26\":0.5,\"f27\":0.5,\"f28\":1.0,\"f29\":1.0,\"f31\":{\"r\":0.0,\"i\":-0.5},\"f32\":{\"r\":0.0,\"i\":0.5},\"f39\":0.5,\"f40\":0.5,\"f41\":1.0,\"f42\":1.0,\"f44\":{\"r\":0.0,\"i\":-0.5},\"f45\":{\"r\":0.0,\"i\":0.5},\"f65\":{\"r\":0.0,\"i\":1.0},\"f66\":{\"r\":0.0,\"i\":1.0},\"f67\":{\"r\":0.0,\"i\":2.0},\"f68\":{\"r\":0.0,\"i\":2.0},\"f70\":{\"r\":-1.0,\"i\":0.0},\"f71\":{\"r\":1.0,\"i\":0.0},\"f78\":{\"r\":0.0,\"i\":-1.0},\"f79\":{\"r\":0.0,\"i\":-1.0},\"f80\":{\"r\":0.0,\"i\":-2.0},\"f81\":{\"r\":0.0,\"i\":-2.0},\"f83\":{\"r\":1.0,\"i\":0.0},\"f84\":{\"r\":-1.0,\"i\":-0.0},\"f97\":{\"r\":0.0,\"i\":-1.0},\"f104\":0.0,\"f105\":0.0,\"f106\":0.0,\"f107\":0.0,\"f109\":{\"r\":0.0,\"i\":-0.0},\"f110\":{\"r\":0.0,\"i\":0.0},\"f117\":0.0,\"f118\":0.0,\"f119\":0.0,\"f120\":0.0,\"f122\":{\"r\":0.0,\"i\":-0.0},\"f123\":{\"r\":0.0,\"i\":0.0},\"f130\":0.0,\"f131\":0.0,\"f132\":0.0,\"f133\":0.0,\"f135\":{\"r\":0.0,\"i\":-0.0},\"f136\":{\"r\":0.0,\"i\":0.0},\"f143\":{\"r\":0.0,\"i\":0.0},\"f144\":{\"r\":0.0,\"i\":0.0},\"f145\":{\"r\":0.0,\"i\":0.0},\"f146\":{\"r\":0.0,\"i\":0.0},\"f148\":{\"r\":0.0,\"i\":0.0},\"f149\":{\"r\":0.0,\"i\":0.0},\"f162\":{\"r\":0.0,\"i\":-1.0}},\"seq\":3}");
    gold.append("\nRANDO was DENIED:");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nMEMORY:26286");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_OperationsHappy_5 = null;
  private String get_OperationsHappy_5() {
    if (cached_OperationsHappy_5 != null) {
      return cached_OperationsHappy_5;
    }
    cached_OperationsHappy_5 = generateTestOutput(true, "OperationsHappy_5", "./test_code/BinaryExpression_OperationsHappy_success.a");
    return cached_OperationsHappy_5;
  }

  @Test
  public void testOperationsHappyEmission() {
    assertEmissionGood(get_OperationsHappy_5());
  }

  @Test
  public void testOperationsHappySuccess() {
    assertLivePass(get_OperationsHappy_5());
  }

  @Test
  public void testOperationsHappyGoodWillHappy() {
    assertGoodWillHappy(get_OperationsHappy_5());
  }

  @Test
  public void testOperationsHappyExceptionFree() {
    assertExceptionFree(get_OperationsHappy_5());
  }

  @Test
  public void testOperationsHappyTODOFree() {
    assertTODOFree(get_OperationsHappy_5());
  }

  @Test
  public void stable_OperationsHappy_5() {
    String live = get_OperationsHappy_5();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_OperationsHappy_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class OperationsHappy_5 extends LivingDocument {");
    gold.append("\n  private final RxClient other;");
    gold.append("\n  private final RxString s;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += other.__memory();");
    gold.append("\n    __sum += s.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public OperationsHappy_5(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    other = new RxClient(this, NtClient.NO_ONE);");
    gold.append("\n    s = new RxString(this, \"\");");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"other\":");
    gold.append("\n            other.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"s\":");
    gold.append("\n            s.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"other\":");
    gold.append("\n            other.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"s\":");
    gold.append("\n            s.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"other\");");
    gold.append("\n    other.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"s\");");
    gold.append("\n    s.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    other.__commit(\"other\", __forward, __reverse);");
    gold.append("\n    s.__commit(\"s\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    other.__revert();");
    gold.append("\n    s.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaOperationsHappy_5 implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaOperationsHappy_5() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(OperationsHappy_5 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    OperationsHappy_5 __self = this;");
    gold.append("\n    DeltaOperationsHappy_5 __state = new DeltaOperationsHappy_5();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  public void __test_Addition(TestReportBuilder report) {");
    gold.append("\n    report.begin(\"Addition\");");
    gold.append("\n    {");
    gold.append("\n      __code_cost += 12;");
    gold.append("\n      __track(0);");
    gold.append("\n      __assert_truth(LibString.equality(\"xy\", \"x\" + \"y\"), 1, 2, 1, 27);");
    gold.append("\n      __track(1);");
    gold.append("\n      __assert_truth(LibString.equality(\"xtrue\", \"x\" + true), 2, 2, 2, 31);");
    gold.append("\n      __track(2);");
    gold.append("\n      __assert_truth(LibString.equality(\"falsex\", false + \"x\"), 3, 2, 3, 33);");
    gold.append("\n      __track(3);");
    gold.append("\n      __assert_truth(LibString.equality(\"x1\", \"x\" + 1), 4, 2, 4, 25);");
    gold.append("\n      __track(4);");
    gold.append("\n      __assert_truth(LibString.equality(\"1x\", 1 + \"x\"), 5, 2, 5, 25);");
    gold.append("\n      __track(5);");
    gold.append("\n      __assert_truth(LibString.equality(\"x3.14\", \"x\" + 3.14), 6, 2, 6, 31);");
    gold.append("\n      __track(6);");
    gold.append("\n      __assert_truth(LibString.equality(\"3.14x\", 3.14 + \"x\"), 7, 2, 7, 31);");
    gold.append("\n      __track(7);");
    gold.append("\n      __assert_truth(3 == 1 + 2, 8, 2, 8, 20);");
    gold.append("\n      __track(8);");
    gold.append("\n      __assert_truth(3 == 2.0 + 1, 9, 2, 9, 22);");
    gold.append("\n      __track(9);");
    gold.append("\n      __assert_truth(3 == 1 + 2.0, 10, 2, 10, 22);");
    gold.append("\n      __track(10);");
    gold.append("\n      __assert_truth(LibMath.near(3.0, 2.0 + 1.0), 11, 2, 11, 26);");
    gold.append("\n    }");
    gold.append("\n    report.end(getAndResetAssertions());");
    gold.append("\n  }");
    gold.append("\n  public void __test_Subtraction(TestReportBuilder report) {");
    gold.append("\n    report.begin(\"Subtraction\");");
    gold.append("\n    {");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n      __track(11);");
    gold.append("\n      __assert_truth(5 == 10 - 5, 15, 2, 15, 21);");
    gold.append("\n      __track(12);");
    gold.append("\n      __assert_truth(LibMath.near(3.0, 6 - 3), 16, 2, 16, 22);");
    gold.append("\n      __track(13);");
    gold.append("\n      __assert_truth(LibMath.near(3.0, 6.0 - 3.0), 17, 2, 17, 26);");
    gold.append("\n      __track(14);");
    gold.append("\n      __assert_truth(LibMath.near(3.0, 6.0 - 3), 18, 2, 18, 24);");
    gold.append("\n    }");
    gold.append("\n    report.end(getAndResetAssertions());");
    gold.append("\n  }");
    gold.append("\n  public void __test_Multiply(TestReportBuilder report) {");
    gold.append("\n    report.begin(\"Multiply\");");
    gold.append("\n    {");
    gold.append("\n      __code_cost += 6;");
    gold.append("\n      __track(15);");
    gold.append("\n      __assert_truth(LibString.equality(\"xxx\", LibString.multiply(\"x\", 3)), 22, 2, 22, 26);");
    gold.append("\n      __track(16);");
    gold.append("\n      __assert_truth(6 == 2 * 3, 23, 2, 23, 20);");
    gold.append("\n      __track(17);");
    gold.append("\n      __assert_truth(10 == 2.0 * 5.0, 24, 2, 24, 25);");
    gold.append("\n      __track(18);");
    gold.append("\n      __assert_truth(10 == 2.0 * 5, 25, 2, 25, 23);");
    gold.append("\n      __track(19);");
    gold.append("\n      __assert_truth(10 == 2 * 5.0, 26, 2, 26, 23);");
    gold.append("\n    }");
    gold.append("\n    report.end(getAndResetAssertions());");
    gold.append("\n  }");
    gold.append("\n  public void __test_Divide(TestReportBuilder report) {");
    gold.append("\n    report.begin(\"Divide\");");
    gold.append("\n    {");
    gold.append("\n      __code_cost += 5;");
    gold.append("\n      __track(20);");
    gold.append("\n      __assert_truth(2 == (LibArithmetic.Divide.II(4, 2)).getOrDefaultTo(-100.0), 30, 2, 30, 45);");
    gold.append("\n      __track(21);");
    gold.append("\n      __assert_truth(LibMath.near(2.0, (LibArithmetic.Divide.ID(4, 2.0)).getOrDefaultTo(-100.0)), 31, 2, 31, 49);");
    gold.append("\n      __track(22);");
    gold.append("\n      __assert_truth(LibMath.near(2.0, (LibArithmetic.Divide.DD(4.0, 2.0)).getOrDefaultTo(-100.0)), 32, 2, 32, 51);");
    gold.append("\n      __track(23);");
    gold.append("\n      __assert_truth(LibMath.near(1.5, (LibArithmetic.Divide.DI(3.0, 2)).getOrDefaultTo(-100.0)), 33, 2, 33, 49);");
    gold.append("\n    }");
    gold.append("\n    report.end(getAndResetAssertions());");
    gold.append("\n  }");
    gold.append("\n  public void __test_Mod(TestReportBuilder report) {");
    gold.append("\n    report.begin(\"Mod\");");
    gold.append("\n    {");
    gold.append("\n      __code_cost += 2;");
    gold.append("\n      __track(24);");
    gold.append("\n      __assert_truth(2 == 7 % 5, 37, 2, 37, 20);");
    gold.append("\n    }");
    gold.append("\n    report.end(getAndResetAssertions());");
    gold.append("\n  }");
    gold.append("\n  public void __test_Relate(TestReportBuilder report) {");
    gold.append("\n    report.begin(\"Relate\");");
    gold.append("\n    {");
    gold.append("\n      __code_cost += 3;");
    gold.append("\n      __track(25);");
    gold.append("\n      __assert_truth(1 < 2, 41, 2, 41, 15);");
    gold.append("\n      __track(26);");
    gold.append("\n      __assert_truth(1.5 < 4.3, 42, 2, 42, 19);");
    gold.append("\n    }");
    gold.append("\n    report.end(getAndResetAssertions());");
    gold.append("\n  }");
    gold.append("\n  public void __test_Logic(TestReportBuilder report) {");
    gold.append("\n    report.begin(\"Logic\");");
    gold.append("\n    {");
    gold.append("\n      __code_cost += 11;");
    gold.append("\n      __track(27);");
    gold.append("\n      __assert_truth(true == true, 46, 2, 46, 22);");
    gold.append("\n      __track(28);");
    gold.append("\n      __assert_truth(false != true, 47, 2, 47, 23);");
    gold.append("\n      __track(29);");
    gold.append("\n      __assert_truth(true && true, 48, 2, 48, 22);");
    gold.append("\n      __track(30);");
    gold.append("\n      __assert_truth(!(true && false), 49, 2, 49, 26);");
    gold.append("\n      __track(31);");
    gold.append("\n      __assert_truth(!(false && true), 50, 2, 50, 26);");
    gold.append("\n      __track(32);");
    gold.append("\n      __assert_truth(!(false && false), 51, 2, 51, 27);");
    gold.append("\n      __track(33);");
    gold.append("\n      __assert_truth(true || true, 52, 2, 52, 22);");
    gold.append("\n      __track(34);");
    gold.append("\n      __assert_truth(true || false, 53, 2, 53, 23);");
    gold.append("\n      __track(35);");
    gold.append("\n      __assert_truth(false || true, 54, 2, 54, 23);");
    gold.append("\n      __track(36);");
    gold.append("\n      __assert_truth(!(false || false), 55, 2, 55, 27);");
    gold.append("\n    }");
    gold.append("\n    report.end(getAndResetAssertions());");
    gold.append("\n  }");
    gold.append("\n  public void __test_Equals(TestReportBuilder report) {");
    gold.append("\n    report.begin(\"Equals\");");
    gold.append("\n    {");
    gold.append("\n      __code_cost += 11;");
    gold.append("\n      __track(37);");
    gold.append("\n      __assert_truth((NtClient.NO_ONE.equals(NtClient.NO_ONE)), 62, 2, 62, 28);");
    gold.append("\n      __track(38);");
    gold.append("\n      __assert_truth((NtClient.NO_ONE.equals(other.get())), 63, 2, 63, 26);");
    gold.append("\n      __track(39);");
    gold.append("\n      __assert_truth((other.get().equals(NtClient.NO_ONE)), 64, 2, 64, 26);");
    gold.append("\n      __track(40);");
    gold.append("\n      __assert_truth(!(!(NtClient.NO_ONE.equals(NtClient.NO_ONE))), 65, 2, 65, 31);");
    gold.append("\n      __track(41);");
    gold.append("\n      __assert_truth(LibString.equality(s.get(), \"\"), 66, 2, 66, 17);");
    gold.append("\n      __track(42);");
    gold.append("\n      __assert_truth(LibString.equality(\"\", s.get()), 67, 2, 67, 17);");
    gold.append("\n      __track(43);");
    gold.append("\n      __assert_truth(LibString.equality(s.get(), s.get()), 68, 2, 68, 16);");
    gold.append("\n      __track(44);");
    gold.append("\n      int x = 123;");
    gold.append("\n      __track(45);");
    gold.append("\n      long y = 123;");
    gold.append("\n      __track(46);");
    gold.append("\n      __assert_truth(x == y, 71, 2, 71, 16);");
    gold.append("\n    }");
    gold.append("\n    report.end(getAndResetAssertions());");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {\"Addition\", \"Subtraction\", \"Multiply\", \"Divide\", \"Mod\", \"Relate\", \"Logic\", \"Equals\"};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {");
    gold.append("\n    switch(testName) {");
    gold.append("\n      case \"Addition\":");
    gold.append("\n          __test_Addition(report);");
    gold.append("\n          return;");
    gold.append("\n      case \"Subtraction\":");
    gold.append("\n          __test_Subtraction(report);");
    gold.append("\n          return;");
    gold.append("\n      case \"Multiply\":");
    gold.append("\n          __test_Multiply(report);");
    gold.append("\n          return;");
    gold.append("\n      case \"Divide\":");
    gold.append("\n          __test_Divide(report);");
    gold.append("\n          return;");
    gold.append("\n      case \"Mod\":");
    gold.append("\n          __test_Mod(report);");
    gold.append("\n          return;");
    gold.append("\n      case \"Relate\":");
    gold.append("\n          __test_Relate(report);");
    gold.append("\n          return;");
    gold.append("\n      case \"Logic\":");
    gold.append("\n          __test_Logic(report);");
    gold.append("\n          return;");
    gold.append("\n      case \"Equals\":");
    gold.append("\n          __test_Equals(report);");
    gold.append("\n          return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, NtMessageBase message) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:504");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":2}");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"seq\":3}");
    gold.append("\nRANDO was DENIED:");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nMEMORY:622");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"other\":{\"agent\":\"?\",\"authority\":\"?\"},\"s\":\"\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"other\":{\"agent\":\"?\",\"authority\":\"?\"},\"s\":\"\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n{\"other\":{\"agent\":\"?\",\"authority\":\"?\"},\"s\":\"\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\nTEST[Addition] = 100.0%");
    gold.append("\nTEST[Subtraction] = 100.0%");
    gold.append("\nTEST[Multiply] = 100.0%");
    gold.append("\nTEST[Divide] = 100.0%");
    gold.append("\nTEST[Mod] = 100.0%");
    gold.append("\nTEST[Relate] = 100.0%");
    gold.append("\nTEST[Logic] = 100.0%");
    gold.append("\nTEST[Equals] = 100.0%");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_OperationsMultiplyCases_6 = null;
  private String get_OperationsMultiplyCases_6() {
    if (cached_OperationsMultiplyCases_6 != null) {
      return cached_OperationsMultiplyCases_6;
    }
    cached_OperationsMultiplyCases_6 = generateTestOutput(true, "OperationsMultiplyCases_6", "./test_code/BinaryExpression_OperationsMultiplyCases_success.a");
    return cached_OperationsMultiplyCases_6;
  }

  @Test
  public void testOperationsMultiplyCasesEmission() {
    assertEmissionGood(get_OperationsMultiplyCases_6());
  }

  @Test
  public void testOperationsMultiplyCasesSuccess() {
    assertLivePass(get_OperationsMultiplyCases_6());
  }

  @Test
  public void testOperationsMultiplyCasesGoodWillHappy() {
    assertGoodWillHappy(get_OperationsMultiplyCases_6());
  }

  @Test
  public void testOperationsMultiplyCasesExceptionFree() {
    assertExceptionFree(get_OperationsMultiplyCases_6());
  }

  @Test
  public void testOperationsMultiplyCasesTODOFree() {
    assertTODOFree(get_OperationsMultiplyCases_6());
  }

  @Test
  public void stable_OperationsMultiplyCases_6() {
    String live = get_OperationsMultiplyCases_6();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_OperationsMultiplyCases_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class OperationsMultiplyCases_6 extends LivingDocument {");
    gold.append("\n  private final RxLazy<Integer> f0;");
    gold.append("\n  private final RxLazy<Long> f1;");
    gold.append("\n  private final RxLazy<Double> f2;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f3;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f4;");
    gold.append("\n  private final RxLazy<NtComplex> f5;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f6;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f7;");
    gold.append("\n  private final RxLazy<Integer> f8;");
    gold.append("\n  private final RxLazy<Long> f9;");
    gold.append("\n  private final RxLazy<Double> f10;");
    gold.append("\n  private final RxLazy<NtComplex> f11;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f12;");
    gold.append("\n  private final RxLazy<Long> f13;");
    gold.append("\n  private final RxLazy<Long> f14;");
    gold.append("\n  private final RxLazy<Double> f15;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f16;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f17;");
    gold.append("\n  private final RxLazy<NtComplex> f18;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f19;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f20;");
    gold.append("\n  private final RxLazy<Long> f21;");
    gold.append("\n  private final RxLazy<Long> f22;");
    gold.append("\n  private final RxLazy<Double> f23;");
    gold.append("\n  private final RxLazy<NtComplex> f24;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f25;");
    gold.append("\n  private final RxLazy<Double> f26;");
    gold.append("\n  private final RxLazy<Double> f27;");
    gold.append("\n  private final RxLazy<Double> f28;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f29;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f30;");
    gold.append("\n  private final RxLazy<NtComplex> f31;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f32;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f33;");
    gold.append("\n  private final RxLazy<Double> f34;");
    gold.append("\n  private final RxLazy<Double> f35;");
    gold.append("\n  private final RxLazy<Double> f36;");
    gold.append("\n  private final RxLazy<NtComplex> f37;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f38;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f39;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f40;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f41;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f42;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f43;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f44;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f45;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f46;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f47;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f48;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f49;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f50;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f51;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f52;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f53;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f54;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f55;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f56;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f57;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f58;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f59;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f60;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f61;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f62;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f63;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f64;");
    gold.append("\n  private final RxLazy<NtComplex> f65;");
    gold.append("\n  private final RxLazy<NtComplex> f66;");
    gold.append("\n  private final RxLazy<NtComplex> f67;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f68;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f69;");
    gold.append("\n  private final RxLazy<NtComplex> f70;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f71;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f72;");
    gold.append("\n  private final RxLazy<NtComplex> f73;");
    gold.append("\n  private final RxLazy<NtComplex> f74;");
    gold.append("\n  private final RxLazy<NtComplex> f75;");
    gold.append("\n  private final RxLazy<NtComplex> f76;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f77;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f78;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f79;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f80;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f81;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f82;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f83;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f84;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f85;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f86;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f87;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f88;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f89;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f90;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f91;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f92;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f93;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f94;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f95;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f96;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f97;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f98;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f99;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f100;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f101;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f102;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f103;");
    gold.append("\n  private final RxLazy<Integer> f104;");
    gold.append("\n  private final RxLazy<Long> f105;");
    gold.append("\n  private final RxLazy<Double> f106;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f107;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f108;");
    gold.append("\n  private final RxLazy<NtComplex> f109;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f110;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f111;");
    gold.append("\n  private final RxLazy<Integer> f112;");
    gold.append("\n  private final RxLazy<Long> f113;");
    gold.append("\n  private final RxLazy<Double> f114;");
    gold.append("\n  private final RxLazy<NtComplex> f115;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f116;");
    gold.append("\n  private final RxLazy<Long> f117;");
    gold.append("\n  private final RxLazy<Long> f118;");
    gold.append("\n  private final RxLazy<Double> f119;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f120;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f121;");
    gold.append("\n  private final RxLazy<NtComplex> f122;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f123;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f124;");
    gold.append("\n  private final RxLazy<Long> f125;");
    gold.append("\n  private final RxLazy<Long> f126;");
    gold.append("\n  private final RxLazy<Double> f127;");
    gold.append("\n  private final RxLazy<NtComplex> f128;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f129;");
    gold.append("\n  private final RxLazy<Double> f130;");
    gold.append("\n  private final RxLazy<Double> f131;");
    gold.append("\n  private final RxLazy<Double> f132;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f133;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f134;");
    gold.append("\n  private final RxLazy<NtComplex> f135;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f136;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f137;");
    gold.append("\n  private final RxLazy<Double> f138;");
    gold.append("\n  private final RxLazy<Double> f139;");
    gold.append("\n  private final RxLazy<Double> f140;");
    gold.append("\n  private final RxLazy<NtComplex> f141;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f142;");
    gold.append("\n  private final RxLazy<NtComplex> f143;");
    gold.append("\n  private final RxLazy<NtComplex> f144;");
    gold.append("\n  private final RxLazy<NtComplex> f145;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f146;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f147;");
    gold.append("\n  private final RxLazy<NtComplex> f148;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f149;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f150;");
    gold.append("\n  private final RxLazy<NtComplex> f151;");
    gold.append("\n  private final RxLazy<NtComplex> f152;");
    gold.append("\n  private final RxLazy<NtComplex> f153;");
    gold.append("\n  private final RxLazy<NtComplex> f154;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f155;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f156;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f157;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f158;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f159;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f160;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f161;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f162;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f163;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f164;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f165;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f166;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f167;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f168;");
    gold.append("\n  private final RxLazy<String> f169;");
    gold.append("\n  private final RxLazy<String> f170;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += f0.__memory();");
    gold.append("\n    __sum += f1.__memory();");
    gold.append("\n    __sum += f2.__memory();");
    gold.append("\n    __sum += f3.__memory();");
    gold.append("\n    __sum += f4.__memory();");
    gold.append("\n    __sum += f5.__memory();");
    gold.append("\n    __sum += f6.__memory();");
    gold.append("\n    __sum += f7.__memory();");
    gold.append("\n    __sum += f8.__memory();");
    gold.append("\n    __sum += f9.__memory();");
    gold.append("\n    __sum += f10.__memory();");
    gold.append("\n    __sum += f11.__memory();");
    gold.append("\n    __sum += f12.__memory();");
    gold.append("\n    __sum += f13.__memory();");
    gold.append("\n    __sum += f14.__memory();");
    gold.append("\n    __sum += f15.__memory();");
    gold.append("\n    __sum += f16.__memory();");
    gold.append("\n    __sum += f17.__memory();");
    gold.append("\n    __sum += f18.__memory();");
    gold.append("\n    __sum += f19.__memory();");
    gold.append("\n    __sum += f20.__memory();");
    gold.append("\n    __sum += f21.__memory();");
    gold.append("\n    __sum += f22.__memory();");
    gold.append("\n    __sum += f23.__memory();");
    gold.append("\n    __sum += f24.__memory();");
    gold.append("\n    __sum += f25.__memory();");
    gold.append("\n    __sum += f26.__memory();");
    gold.append("\n    __sum += f27.__memory();");
    gold.append("\n    __sum += f28.__memory();");
    gold.append("\n    __sum += f29.__memory();");
    gold.append("\n    __sum += f30.__memory();");
    gold.append("\n    __sum += f31.__memory();");
    gold.append("\n    __sum += f32.__memory();");
    gold.append("\n    __sum += f33.__memory();");
    gold.append("\n    __sum += f34.__memory();");
    gold.append("\n    __sum += f35.__memory();");
    gold.append("\n    __sum += f36.__memory();");
    gold.append("\n    __sum += f37.__memory();");
    gold.append("\n    __sum += f38.__memory();");
    gold.append("\n    __sum += f39.__memory();");
    gold.append("\n    __sum += f40.__memory();");
    gold.append("\n    __sum += f41.__memory();");
    gold.append("\n    __sum += f42.__memory();");
    gold.append("\n    __sum += f43.__memory();");
    gold.append("\n    __sum += f44.__memory();");
    gold.append("\n    __sum += f45.__memory();");
    gold.append("\n    __sum += f46.__memory();");
    gold.append("\n    __sum += f47.__memory();");
    gold.append("\n    __sum += f48.__memory();");
    gold.append("\n    __sum += f49.__memory();");
    gold.append("\n    __sum += f50.__memory();");
    gold.append("\n    __sum += f51.__memory();");
    gold.append("\n    __sum += f52.__memory();");
    gold.append("\n    __sum += f53.__memory();");
    gold.append("\n    __sum += f54.__memory();");
    gold.append("\n    __sum += f55.__memory();");
    gold.append("\n    __sum += f56.__memory();");
    gold.append("\n    __sum += f57.__memory();");
    gold.append("\n    __sum += f58.__memory();");
    gold.append("\n    __sum += f59.__memory();");
    gold.append("\n    __sum += f60.__memory();");
    gold.append("\n    __sum += f61.__memory();");
    gold.append("\n    __sum += f62.__memory();");
    gold.append("\n    __sum += f63.__memory();");
    gold.append("\n    __sum += f64.__memory();");
    gold.append("\n    __sum += f65.__memory();");
    gold.append("\n    __sum += f66.__memory();");
    gold.append("\n    __sum += f67.__memory();");
    gold.append("\n    __sum += f68.__memory();");
    gold.append("\n    __sum += f69.__memory();");
    gold.append("\n    __sum += f70.__memory();");
    gold.append("\n    __sum += f71.__memory();");
    gold.append("\n    __sum += f72.__memory();");
    gold.append("\n    __sum += f73.__memory();");
    gold.append("\n    __sum += f74.__memory();");
    gold.append("\n    __sum += f75.__memory();");
    gold.append("\n    __sum += f76.__memory();");
    gold.append("\n    __sum += f77.__memory();");
    gold.append("\n    __sum += f78.__memory();");
    gold.append("\n    __sum += f79.__memory();");
    gold.append("\n    __sum += f80.__memory();");
    gold.append("\n    __sum += f81.__memory();");
    gold.append("\n    __sum += f82.__memory();");
    gold.append("\n    __sum += f83.__memory();");
    gold.append("\n    __sum += f84.__memory();");
    gold.append("\n    __sum += f85.__memory();");
    gold.append("\n    __sum += f86.__memory();");
    gold.append("\n    __sum += f87.__memory();");
    gold.append("\n    __sum += f88.__memory();");
    gold.append("\n    __sum += f89.__memory();");
    gold.append("\n    __sum += f90.__memory();");
    gold.append("\n    __sum += f91.__memory();");
    gold.append("\n    __sum += f92.__memory();");
    gold.append("\n    __sum += f93.__memory();");
    gold.append("\n    __sum += f94.__memory();");
    gold.append("\n    __sum += f95.__memory();");
    gold.append("\n    __sum += f96.__memory();");
    gold.append("\n    __sum += f97.__memory();");
    gold.append("\n    __sum += f98.__memory();");
    gold.append("\n    __sum += f99.__memory();");
    gold.append("\n    __sum += f100.__memory();");
    gold.append("\n    __sum += f101.__memory();");
    gold.append("\n    __sum += f102.__memory();");
    gold.append("\n    __sum += f103.__memory();");
    gold.append("\n    __sum += f104.__memory();");
    gold.append("\n    __sum += f105.__memory();");
    gold.append("\n    __sum += f106.__memory();");
    gold.append("\n    __sum += f107.__memory();");
    gold.append("\n    __sum += f108.__memory();");
    gold.append("\n    __sum += f109.__memory();");
    gold.append("\n    __sum += f110.__memory();");
    gold.append("\n    __sum += f111.__memory();");
    gold.append("\n    __sum += f112.__memory();");
    gold.append("\n    __sum += f113.__memory();");
    gold.append("\n    __sum += f114.__memory();");
    gold.append("\n    __sum += f115.__memory();");
    gold.append("\n    __sum += f116.__memory();");
    gold.append("\n    __sum += f117.__memory();");
    gold.append("\n    __sum += f118.__memory();");
    gold.append("\n    __sum += f119.__memory();");
    gold.append("\n    __sum += f120.__memory();");
    gold.append("\n    __sum += f121.__memory();");
    gold.append("\n    __sum += f122.__memory();");
    gold.append("\n    __sum += f123.__memory();");
    gold.append("\n    __sum += f124.__memory();");
    gold.append("\n    __sum += f125.__memory();");
    gold.append("\n    __sum += f126.__memory();");
    gold.append("\n    __sum += f127.__memory();");
    gold.append("\n    __sum += f128.__memory();");
    gold.append("\n    __sum += f129.__memory();");
    gold.append("\n    __sum += f130.__memory();");
    gold.append("\n    __sum += f131.__memory();");
    gold.append("\n    __sum += f132.__memory();");
    gold.append("\n    __sum += f133.__memory();");
    gold.append("\n    __sum += f134.__memory();");
    gold.append("\n    __sum += f135.__memory();");
    gold.append("\n    __sum += f136.__memory();");
    gold.append("\n    __sum += f137.__memory();");
    gold.append("\n    __sum += f138.__memory();");
    gold.append("\n    __sum += f139.__memory();");
    gold.append("\n    __sum += f140.__memory();");
    gold.append("\n    __sum += f141.__memory();");
    gold.append("\n    __sum += f142.__memory();");
    gold.append("\n    __sum += f143.__memory();");
    gold.append("\n    __sum += f144.__memory();");
    gold.append("\n    __sum += f145.__memory();");
    gold.append("\n    __sum += f146.__memory();");
    gold.append("\n    __sum += f147.__memory();");
    gold.append("\n    __sum += f148.__memory();");
    gold.append("\n    __sum += f149.__memory();");
    gold.append("\n    __sum += f150.__memory();");
    gold.append("\n    __sum += f151.__memory();");
    gold.append("\n    __sum += f152.__memory();");
    gold.append("\n    __sum += f153.__memory();");
    gold.append("\n    __sum += f154.__memory();");
    gold.append("\n    __sum += f155.__memory();");
    gold.append("\n    __sum += f156.__memory();");
    gold.append("\n    __sum += f157.__memory();");
    gold.append("\n    __sum += f158.__memory();");
    gold.append("\n    __sum += f159.__memory();");
    gold.append("\n    __sum += f160.__memory();");
    gold.append("\n    __sum += f161.__memory();");
    gold.append("\n    __sum += f162.__memory();");
    gold.append("\n    __sum += f163.__memory();");
    gold.append("\n    __sum += f164.__memory();");
    gold.append("\n    __sum += f165.__memory();");
    gold.append("\n    __sum += f166.__memory();");
    gold.append("\n    __sum += f167.__memory();");
    gold.append("\n    __sum += f168.__memory();");
    gold.append("\n    __sum += f169.__memory();");
    gold.append("\n    __sum += f170.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public OperationsMultiplyCases_6(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    f0 = new RxLazy<Integer>(this, () -> (1 * 1));");
    gold.append("\n    f1 = new RxLazy<Long>(this, () -> (1 * 1L));");
    gold.append("\n    f2 = new RxLazy<Double>(this, () -> (1 * 0.5));");
    gold.append("\n    f3 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDI((LibArithmetic.Divide.II(1, 2)), 1)));");
    gold.append("\n    f4 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDI((LibArithmetic.Divide.II(1, 0)), 1)));");
    gold.append("\n    f5 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 1)));");
    gold.append("\n    f6 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1)));");
    gold.append("\n    f7 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f8 = new RxLazy<Integer>(this, () -> (1 * 0));");
    gold.append("\n    f9 = new RxLazy<Long>(this, () -> (1 * 0L));");
    gold.append("\n    f10 = new RxLazy<Double>(this, () -> (1 * 0.0));");
    gold.append("\n    f11 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f12 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1)));");
    gold.append("\n    f13 = new RxLazy<Long>(this, () -> (1L * 1));");
    gold.append("\n    f14 = new RxLazy<Long>(this, () -> (1L * 1L));");
    gold.append("\n    f15 = new RxLazy<Double>(this, () -> (1L * 0.5));");
    gold.append("\n    f16 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDL((LibArithmetic.Divide.II(1, 2)), 1L)));");
    gold.append("\n    f17 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDL((LibArithmetic.Divide.II(1, 0)), 1L)));");
    gold.append("\n    f18 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CL(new NtComplex(0.0, 1.0), 1L)));");
    gold.append("\n    f19 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1L)));");
    gold.append("\n    f20 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f21 = new RxLazy<Long>(this, () -> (1L * 0));");
    gold.append("\n    f22 = new RxLazy<Long>(this, () -> (1L * 0L));");
    gold.append("\n    f23 = new RxLazy<Double>(this, () -> (1L * 0.0));");
    gold.append("\n    f24 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f25 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1L)));");
    gold.append("\n    f26 = new RxLazy<Double>(this, () -> (0.5 * 1));");
    gold.append("\n    f27 = new RxLazy<Double>(this, () -> (0.5 * 1L));");
    gold.append("\n    f28 = new RxLazy<Double>(this, () -> (0.5 * 0.5));");
    gold.append("\n    f29 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDD((LibArithmetic.Divide.II(1, 2)), 0.5)));");
    gold.append("\n    f30 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDD((LibArithmetic.Divide.II(1, 0)), 0.5)));");
    gold.append("\n    f31 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CD(new NtComplex(0.0, 1.0), 0.5)));");
    gold.append("\n    f32 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.5)));");
    gold.append("\n    f33 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f34 = new RxLazy<Double>(this, () -> (0.5 * 0));");
    gold.append("\n    f35 = new RxLazy<Double>(this, () -> (0.5 * 0L));");
    gold.append("\n    f36 = new RxLazy<Double>(this, () -> (0.5 * 0.0));");
    gold.append("\n    f37 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f38 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.5)));");
    gold.append("\n    f39 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDI((LibArithmetic.Divide.II(1, 2)), 1)));");
    gold.append("\n    f40 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDL((LibArithmetic.Divide.II(1, 2)), 1L)));");
    gold.append("\n    f41 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDD((LibArithmetic.Divide.II(1, 2)), 0.5)));");
    gold.append("\n    f42 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDmD((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f43 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDmD((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f44 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f45 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f46 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f47 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDI((LibArithmetic.Divide.II(1, 2)), 0)));");
    gold.append("\n    f48 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDL((LibArithmetic.Divide.II(1, 2)), 0L)));");
    gold.append("\n    f49 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDD((LibArithmetic.Divide.II(1, 2)), 0.0)));");
    gold.append("\n    f50 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f51 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f52 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDI((LibArithmetic.Divide.II(1, 0)), 1)));");
    gold.append("\n    f53 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDL((LibArithmetic.Divide.II(1, 0)), 1L)));");
    gold.append("\n    f54 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDD((LibArithmetic.Divide.II(1, 0)), 0.5)));");
    gold.append("\n    f55 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDmD((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f56 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDmD((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f57 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f58 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f59 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f60 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDI((LibArithmetic.Divide.II(1, 0)), 0)));");
    gold.append("\n    f61 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDL((LibArithmetic.Divide.II(1, 0)), 0L)));");
    gold.append("\n    f62 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDD((LibArithmetic.Divide.II(1, 0)), 0.0)));");
    gold.append("\n    f63 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f64 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f65 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 1)));");
    gold.append("\n    f66 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CL(new NtComplex(0.0, 1.0), 1L)));");
    gold.append("\n    f67 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CD(new NtComplex(0.0, 1.0), 0.5)));");
    gold.append("\n    f68 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f69 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f70 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CC(new NtComplex(0.0, 1.0), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f71 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmC(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f72 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmC(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f73 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)));");
    gold.append("\n    f74 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CL(new NtComplex(0.0, 1.0), 0L)));");
    gold.append("\n    f75 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CD(new NtComplex(0.0, 1.0), 0.0)));");
    gold.append("\n    f76 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CC(new NtComplex(0.0, 1.0), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f77 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmC(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f78 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1)));");
    gold.append("\n    f79 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1L)));");
    gold.append("\n    f80 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.5)));");
    gold.append("\n    f81 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f82 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f83 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f84 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f85 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f86 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0)));");
    gold.append("\n    f87 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0L)));");
    gold.append("\n    f88 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.0)));");
    gold.append("\n    f89 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f90 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f91 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f92 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f93 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f94 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f95 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f96 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f97 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f98 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f99 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f100 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f101 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f102 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f103 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f104 = new RxLazy<Integer>(this, () -> (0 * 1));");
    gold.append("\n    f105 = new RxLazy<Long>(this, () -> (0 * 1L));");
    gold.append("\n    f106 = new RxLazy<Double>(this, () -> (0 * 0.5));");
    gold.append("\n    f107 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDI((LibArithmetic.Divide.II(1, 2)), 0)));");
    gold.append("\n    f108 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDI((LibArithmetic.Divide.II(1, 0)), 0)));");
    gold.append("\n    f109 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)));");
    gold.append("\n    f110 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0)));");
    gold.append("\n    f111 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f112 = new RxLazy<Integer>(this, () -> (0 * 0));");
    gold.append("\n    f113 = new RxLazy<Long>(this, () -> (0 * 0L));");
    gold.append("\n    f114 = new RxLazy<Double>(this, () -> (0 * 0.0));");
    gold.append("\n    f115 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f116 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0)));");
    gold.append("\n    f117 = new RxLazy<Long>(this, () -> (0L * 1));");
    gold.append("\n    f118 = new RxLazy<Long>(this, () -> (0L * 1L));");
    gold.append("\n    f119 = new RxLazy<Double>(this, () -> (0L * 0.5));");
    gold.append("\n    f120 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDL((LibArithmetic.Divide.II(1, 2)), 0L)));");
    gold.append("\n    f121 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDL((LibArithmetic.Divide.II(1, 0)), 0L)));");
    gold.append("\n    f122 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CL(new NtComplex(0.0, 1.0), 0L)));");
    gold.append("\n    f123 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0L)));");
    gold.append("\n    f124 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f125 = new RxLazy<Long>(this, () -> (0L * 0));");
    gold.append("\n    f126 = new RxLazy<Long>(this, () -> (0L * 0L));");
    gold.append("\n    f127 = new RxLazy<Double>(this, () -> (0L * 0.0));");
    gold.append("\n    f128 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f129 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0L)));");
    gold.append("\n    f130 = new RxLazy<Double>(this, () -> (0.0 * 1));");
    gold.append("\n    f131 = new RxLazy<Double>(this, () -> (0.0 * 1L));");
    gold.append("\n    f132 = new RxLazy<Double>(this, () -> (0.0 * 0.5));");
    gold.append("\n    f133 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDD((LibArithmetic.Divide.II(1, 2)), 0.0)));");
    gold.append("\n    f134 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Multiply.mDD((LibArithmetic.Divide.II(1, 0)), 0.0)));");
    gold.append("\n    f135 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CD(new NtComplex(0.0, 1.0), 0.0)));");
    gold.append("\n    f136 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.0)));");
    gold.append("\n    f137 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f138 = new RxLazy<Double>(this, () -> (0.0 * 0));");
    gold.append("\n    f139 = new RxLazy<Double>(this, () -> (0.0 * 0L));");
    gold.append("\n    f140 = new RxLazy<Double>(this, () -> (0.0 * 0.0));");
    gold.append("\n    f141 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f142 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.0)));");
    gold.append("\n    f143 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f144 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f145 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f146 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f147 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f148 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f149 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f150 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f151 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f152 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f153 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f154 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Multiply.CC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f155 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.CmC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f156 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1)));");
    gold.append("\n    f157 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1L)));");
    gold.append("\n    f158 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.5)));");
    gold.append("\n    f159 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f160 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f161 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f162 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f163 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f164 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0)));");
    gold.append("\n    f165 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0L)));");
    gold.append("\n    f166 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.0)));");
    gold.append("\n    f167 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f168 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Multiply.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f169 = new RxLazy<String>(this, () -> (LibString.multiply(\"x\", 3)));");
    gold.append("\n    f170 = new RxLazy<String>(this, () -> (LibString.multiply(\"x\", 3)));");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaOperationsMultiplyCases_6 implements DeltaNode {");
    gold.append("\n    private int __gf0;");
    gold.append("\n    private DInt32 __df0;");
    gold.append("\n    private int __gf1;");
    gold.append("\n    private DInt64 __df1;");
    gold.append("\n    private int __gf2;");
    gold.append("\n    private DDouble __df2;");
    gold.append("\n    private int __gf3;");
    gold.append("\n    private DMaybe<DDouble> __df3;");
    gold.append("\n    private int __gf4;");
    gold.append("\n    private DMaybe<DDouble> __df4;");
    gold.append("\n    private int __gf5;");
    gold.append("\n    private DComplex __df5;");
    gold.append("\n    private int __gf6;");
    gold.append("\n    private DMaybe<DComplex> __df6;");
    gold.append("\n    private int __gf7;");
    gold.append("\n    private DMaybe<DComplex> __df7;");
    gold.append("\n    private int __gf8;");
    gold.append("\n    private DInt32 __df8;");
    gold.append("\n    private int __gf9;");
    gold.append("\n    private DInt64 __df9;");
    gold.append("\n    private int __gf10;");
    gold.append("\n    private DDouble __df10;");
    gold.append("\n    private int __gf11;");
    gold.append("\n    private DComplex __df11;");
    gold.append("\n    private int __gf12;");
    gold.append("\n    private DMaybe<DComplex> __df12;");
    gold.append("\n    private int __gf13;");
    gold.append("\n    private DInt64 __df13;");
    gold.append("\n    private int __gf14;");
    gold.append("\n    private DInt64 __df14;");
    gold.append("\n    private int __gf15;");
    gold.append("\n    private DDouble __df15;");
    gold.append("\n    private int __gf16;");
    gold.append("\n    private DMaybe<DDouble> __df16;");
    gold.append("\n    private int __gf17;");
    gold.append("\n    private DMaybe<DDouble> __df17;");
    gold.append("\n    private int __gf18;");
    gold.append("\n    private DComplex __df18;");
    gold.append("\n    private int __gf19;");
    gold.append("\n    private DMaybe<DComplex> __df19;");
    gold.append("\n    private int __gf20;");
    gold.append("\n    private DMaybe<DComplex> __df20;");
    gold.append("\n    private int __gf21;");
    gold.append("\n    private DInt64 __df21;");
    gold.append("\n    private int __gf22;");
    gold.append("\n    private DInt64 __df22;");
    gold.append("\n    private int __gf23;");
    gold.append("\n    private DDouble __df23;");
    gold.append("\n    private int __gf24;");
    gold.append("\n    private DComplex __df24;");
    gold.append("\n    private int __gf25;");
    gold.append("\n    private DMaybe<DComplex> __df25;");
    gold.append("\n    private int __gf26;");
    gold.append("\n    private DDouble __df26;");
    gold.append("\n    private int __gf27;");
    gold.append("\n    private DDouble __df27;");
    gold.append("\n    private int __gf28;");
    gold.append("\n    private DDouble __df28;");
    gold.append("\n    private int __gf29;");
    gold.append("\n    private DMaybe<DDouble> __df29;");
    gold.append("\n    private int __gf30;");
    gold.append("\n    private DMaybe<DDouble> __df30;");
    gold.append("\n    private int __gf31;");
    gold.append("\n    private DComplex __df31;");
    gold.append("\n    private int __gf32;");
    gold.append("\n    private DMaybe<DComplex> __df32;");
    gold.append("\n    private int __gf33;");
    gold.append("\n    private DMaybe<DComplex> __df33;");
    gold.append("\n    private int __gf34;");
    gold.append("\n    private DDouble __df34;");
    gold.append("\n    private int __gf35;");
    gold.append("\n    private DDouble __df35;");
    gold.append("\n    private int __gf36;");
    gold.append("\n    private DDouble __df36;");
    gold.append("\n    private int __gf37;");
    gold.append("\n    private DComplex __df37;");
    gold.append("\n    private int __gf38;");
    gold.append("\n    private DMaybe<DComplex> __df38;");
    gold.append("\n    private int __gf39;");
    gold.append("\n    private DMaybe<DDouble> __df39;");
    gold.append("\n    private int __gf40;");
    gold.append("\n    private DMaybe<DDouble> __df40;");
    gold.append("\n    private int __gf41;");
    gold.append("\n    private DMaybe<DDouble> __df41;");
    gold.append("\n    private int __gf42;");
    gold.append("\n    private DMaybe<DDouble> __df42;");
    gold.append("\n    private int __gf43;");
    gold.append("\n    private DMaybe<DDouble> __df43;");
    gold.append("\n    private int __gf44;");
    gold.append("\n    private DMaybe<DComplex> __df44;");
    gold.append("\n    private int __gf45;");
    gold.append("\n    private DMaybe<DComplex> __df45;");
    gold.append("\n    private int __gf46;");
    gold.append("\n    private DMaybe<DComplex> __df46;");
    gold.append("\n    private int __gf47;");
    gold.append("\n    private DMaybe<DDouble> __df47;");
    gold.append("\n    private int __gf48;");
    gold.append("\n    private DMaybe<DDouble> __df48;");
    gold.append("\n    private int __gf49;");
    gold.append("\n    private DMaybe<DDouble> __df49;");
    gold.append("\n    private int __gf50;");
    gold.append("\n    private DMaybe<DComplex> __df50;");
    gold.append("\n    private int __gf51;");
    gold.append("\n    private DMaybe<DComplex> __df51;");
    gold.append("\n    private int __gf52;");
    gold.append("\n    private DMaybe<DDouble> __df52;");
    gold.append("\n    private int __gf53;");
    gold.append("\n    private DMaybe<DDouble> __df53;");
    gold.append("\n    private int __gf54;");
    gold.append("\n    private DMaybe<DDouble> __df54;");
    gold.append("\n    private int __gf55;");
    gold.append("\n    private DMaybe<DDouble> __df55;");
    gold.append("\n    private int __gf56;");
    gold.append("\n    private DMaybe<DDouble> __df56;");
    gold.append("\n    private int __gf57;");
    gold.append("\n    private DMaybe<DComplex> __df57;");
    gold.append("\n    private int __gf58;");
    gold.append("\n    private DMaybe<DComplex> __df58;");
    gold.append("\n    private int __gf59;");
    gold.append("\n    private DMaybe<DComplex> __df59;");
    gold.append("\n    private int __gf60;");
    gold.append("\n    private DMaybe<DDouble> __df60;");
    gold.append("\n    private int __gf61;");
    gold.append("\n    private DMaybe<DDouble> __df61;");
    gold.append("\n    private int __gf62;");
    gold.append("\n    private DMaybe<DDouble> __df62;");
    gold.append("\n    private int __gf63;");
    gold.append("\n    private DMaybe<DComplex> __df63;");
    gold.append("\n    private int __gf64;");
    gold.append("\n    private DMaybe<DComplex> __df64;");
    gold.append("\n    private int __gf65;");
    gold.append("\n    private DComplex __df65;");
    gold.append("\n    private int __gf66;");
    gold.append("\n    private DComplex __df66;");
    gold.append("\n    private int __gf67;");
    gold.append("\n    private DComplex __df67;");
    gold.append("\n    private int __gf68;");
    gold.append("\n    private DMaybe<DComplex> __df68;");
    gold.append("\n    private int __gf69;");
    gold.append("\n    private DMaybe<DComplex> __df69;");
    gold.append("\n    private int __gf70;");
    gold.append("\n    private DComplex __df70;");
    gold.append("\n    private int __gf71;");
    gold.append("\n    private DMaybe<DComplex> __df71;");
    gold.append("\n    private int __gf72;");
    gold.append("\n    private DMaybe<DComplex> __df72;");
    gold.append("\n    private int __gf73;");
    gold.append("\n    private DComplex __df73;");
    gold.append("\n    private int __gf74;");
    gold.append("\n    private DComplex __df74;");
    gold.append("\n    private int __gf75;");
    gold.append("\n    private DComplex __df75;");
    gold.append("\n    private int __gf76;");
    gold.append("\n    private DComplex __df76;");
    gold.append("\n    private int __gf77;");
    gold.append("\n    private DMaybe<DComplex> __df77;");
    gold.append("\n    private int __gf78;");
    gold.append("\n    private DMaybe<DComplex> __df78;");
    gold.append("\n    private int __gf79;");
    gold.append("\n    private DMaybe<DComplex> __df79;");
    gold.append("\n    private int __gf80;");
    gold.append("\n    private DMaybe<DComplex> __df80;");
    gold.append("\n    private int __gf81;");
    gold.append("\n    private DMaybe<DComplex> __df81;");
    gold.append("\n    private int __gf82;");
    gold.append("\n    private DMaybe<DComplex> __df82;");
    gold.append("\n    private int __gf83;");
    gold.append("\n    private DMaybe<DComplex> __df83;");
    gold.append("\n    private int __gf84;");
    gold.append("\n    private DMaybe<DComplex> __df84;");
    gold.append("\n    private int __gf85;");
    gold.append("\n    private DMaybe<DComplex> __df85;");
    gold.append("\n    private int __gf86;");
    gold.append("\n    private DMaybe<DComplex> __df86;");
    gold.append("\n    private int __gf87;");
    gold.append("\n    private DMaybe<DComplex> __df87;");
    gold.append("\n    private int __gf88;");
    gold.append("\n    private DMaybe<DComplex> __df88;");
    gold.append("\n    private int __gf89;");
    gold.append("\n    private DMaybe<DComplex> __df89;");
    gold.append("\n    private int __gf90;");
    gold.append("\n    private DMaybe<DComplex> __df90;");
    gold.append("\n    private int __gf91;");
    gold.append("\n    private DMaybe<DComplex> __df91;");
    gold.append("\n    private int __gf92;");
    gold.append("\n    private DMaybe<DComplex> __df92;");
    gold.append("\n    private int __gf93;");
    gold.append("\n    private DMaybe<DComplex> __df93;");
    gold.append("\n    private int __gf94;");
    gold.append("\n    private DMaybe<DComplex> __df94;");
    gold.append("\n    private int __gf95;");
    gold.append("\n    private DMaybe<DComplex> __df95;");
    gold.append("\n    private int __gf96;");
    gold.append("\n    private DMaybe<DComplex> __df96;");
    gold.append("\n    private int __gf97;");
    gold.append("\n    private DMaybe<DComplex> __df97;");
    gold.append("\n    private int __gf98;");
    gold.append("\n    private DMaybe<DComplex> __df98;");
    gold.append("\n    private int __gf99;");
    gold.append("\n    private DMaybe<DComplex> __df99;");
    gold.append("\n    private int __gf100;");
    gold.append("\n    private DMaybe<DComplex> __df100;");
    gold.append("\n    private int __gf101;");
    gold.append("\n    private DMaybe<DComplex> __df101;");
    gold.append("\n    private int __gf102;");
    gold.append("\n    private DMaybe<DComplex> __df102;");
    gold.append("\n    private int __gf103;");
    gold.append("\n    private DMaybe<DComplex> __df103;");
    gold.append("\n    private int __gf104;");
    gold.append("\n    private DInt32 __df104;");
    gold.append("\n    private int __gf105;");
    gold.append("\n    private DInt64 __df105;");
    gold.append("\n    private int __gf106;");
    gold.append("\n    private DDouble __df106;");
    gold.append("\n    private int __gf107;");
    gold.append("\n    private DMaybe<DDouble> __df107;");
    gold.append("\n    private int __gf108;");
    gold.append("\n    private DMaybe<DDouble> __df108;");
    gold.append("\n    private int __gf109;");
    gold.append("\n    private DComplex __df109;");
    gold.append("\n    private int __gf110;");
    gold.append("\n    private DMaybe<DComplex> __df110;");
    gold.append("\n    private int __gf111;");
    gold.append("\n    private DMaybe<DComplex> __df111;");
    gold.append("\n    private int __gf112;");
    gold.append("\n    private DInt32 __df112;");
    gold.append("\n    private int __gf113;");
    gold.append("\n    private DInt64 __df113;");
    gold.append("\n    private int __gf114;");
    gold.append("\n    private DDouble __df114;");
    gold.append("\n    private int __gf115;");
    gold.append("\n    private DComplex __df115;");
    gold.append("\n    private int __gf116;");
    gold.append("\n    private DMaybe<DComplex> __df116;");
    gold.append("\n    private int __gf117;");
    gold.append("\n    private DInt64 __df117;");
    gold.append("\n    private int __gf118;");
    gold.append("\n    private DInt64 __df118;");
    gold.append("\n    private int __gf119;");
    gold.append("\n    private DDouble __df119;");
    gold.append("\n    private int __gf120;");
    gold.append("\n    private DMaybe<DDouble> __df120;");
    gold.append("\n    private int __gf121;");
    gold.append("\n    private DMaybe<DDouble> __df121;");
    gold.append("\n    private int __gf122;");
    gold.append("\n    private DComplex __df122;");
    gold.append("\n    private int __gf123;");
    gold.append("\n    private DMaybe<DComplex> __df123;");
    gold.append("\n    private int __gf124;");
    gold.append("\n    private DMaybe<DComplex> __df124;");
    gold.append("\n    private int __gf125;");
    gold.append("\n    private DInt64 __df125;");
    gold.append("\n    private int __gf126;");
    gold.append("\n    private DInt64 __df126;");
    gold.append("\n    private int __gf127;");
    gold.append("\n    private DDouble __df127;");
    gold.append("\n    private int __gf128;");
    gold.append("\n    private DComplex __df128;");
    gold.append("\n    private int __gf129;");
    gold.append("\n    private DMaybe<DComplex> __df129;");
    gold.append("\n    private int __gf130;");
    gold.append("\n    private DDouble __df130;");
    gold.append("\n    private int __gf131;");
    gold.append("\n    private DDouble __df131;");
    gold.append("\n    private int __gf132;");
    gold.append("\n    private DDouble __df132;");
    gold.append("\n    private int __gf133;");
    gold.append("\n    private DMaybe<DDouble> __df133;");
    gold.append("\n    private int __gf134;");
    gold.append("\n    private DMaybe<DDouble> __df134;");
    gold.append("\n    private int __gf135;");
    gold.append("\n    private DComplex __df135;");
    gold.append("\n    private int __gf136;");
    gold.append("\n    private DMaybe<DComplex> __df136;");
    gold.append("\n    private int __gf137;");
    gold.append("\n    private DMaybe<DComplex> __df137;");
    gold.append("\n    private int __gf138;");
    gold.append("\n    private DDouble __df138;");
    gold.append("\n    private int __gf139;");
    gold.append("\n    private DDouble __df139;");
    gold.append("\n    private int __gf140;");
    gold.append("\n    private DDouble __df140;");
    gold.append("\n    private int __gf141;");
    gold.append("\n    private DComplex __df141;");
    gold.append("\n    private int __gf142;");
    gold.append("\n    private DMaybe<DComplex> __df142;");
    gold.append("\n    private int __gf143;");
    gold.append("\n    private DComplex __df143;");
    gold.append("\n    private int __gf144;");
    gold.append("\n    private DComplex __df144;");
    gold.append("\n    private int __gf145;");
    gold.append("\n    private DComplex __df145;");
    gold.append("\n    private int __gf146;");
    gold.append("\n    private DMaybe<DComplex> __df146;");
    gold.append("\n    private int __gf147;");
    gold.append("\n    private DMaybe<DComplex> __df147;");
    gold.append("\n    private int __gf148;");
    gold.append("\n    private DComplex __df148;");
    gold.append("\n    private int __gf149;");
    gold.append("\n    private DMaybe<DComplex> __df149;");
    gold.append("\n    private int __gf150;");
    gold.append("\n    private DMaybe<DComplex> __df150;");
    gold.append("\n    private int __gf151;");
    gold.append("\n    private DComplex __df151;");
    gold.append("\n    private int __gf152;");
    gold.append("\n    private DComplex __df152;");
    gold.append("\n    private int __gf153;");
    gold.append("\n    private DComplex __df153;");
    gold.append("\n    private int __gf154;");
    gold.append("\n    private DComplex __df154;");
    gold.append("\n    private int __gf155;");
    gold.append("\n    private DMaybe<DComplex> __df155;");
    gold.append("\n    private int __gf156;");
    gold.append("\n    private DMaybe<DComplex> __df156;");
    gold.append("\n    private int __gf157;");
    gold.append("\n    private DMaybe<DComplex> __df157;");
    gold.append("\n    private int __gf158;");
    gold.append("\n    private DMaybe<DComplex> __df158;");
    gold.append("\n    private int __gf159;");
    gold.append("\n    private DMaybe<DComplex> __df159;");
    gold.append("\n    private int __gf160;");
    gold.append("\n    private DMaybe<DComplex> __df160;");
    gold.append("\n    private int __gf161;");
    gold.append("\n    private DMaybe<DComplex> __df161;");
    gold.append("\n    private int __gf162;");
    gold.append("\n    private DMaybe<DComplex> __df162;");
    gold.append("\n    private int __gf163;");
    gold.append("\n    private DMaybe<DComplex> __df163;");
    gold.append("\n    private int __gf164;");
    gold.append("\n    private DMaybe<DComplex> __df164;");
    gold.append("\n    private int __gf165;");
    gold.append("\n    private DMaybe<DComplex> __df165;");
    gold.append("\n    private int __gf166;");
    gold.append("\n    private DMaybe<DComplex> __df166;");
    gold.append("\n    private int __gf167;");
    gold.append("\n    private DMaybe<DComplex> __df167;");
    gold.append("\n    private int __gf168;");
    gold.append("\n    private DMaybe<DComplex> __df168;");
    gold.append("\n    private int __gf169;");
    gold.append("\n    private DString __df169;");
    gold.append("\n    private int __gf170;");
    gold.append("\n    private DString __df170;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaOperationsMultiplyCases_6() {");
    gold.append("\n      __gf0 = -1;");
    gold.append("\n      __df0 = new DInt32();");
    gold.append("\n      __gf1 = -1;");
    gold.append("\n      __df1 = new DInt64();");
    gold.append("\n      __gf2 = -1;");
    gold.append("\n      __df2 = new DDouble();");
    gold.append("\n      __gf3 = -1;");
    gold.append("\n      __df3 = new DMaybe<DDouble>();");
    gold.append("\n      __gf4 = -1;");
    gold.append("\n      __df4 = new DMaybe<DDouble>();");
    gold.append("\n      __gf5 = -1;");
    gold.append("\n      __df5 = new DComplex();");
    gold.append("\n      __gf6 = -1;");
    gold.append("\n      __df6 = new DMaybe<DComplex>();");
    gold.append("\n      __gf7 = -1;");
    gold.append("\n      __df7 = new DMaybe<DComplex>();");
    gold.append("\n      __gf8 = -1;");
    gold.append("\n      __df8 = new DInt32();");
    gold.append("\n      __gf9 = -1;");
    gold.append("\n      __df9 = new DInt64();");
    gold.append("\n      __gf10 = -1;");
    gold.append("\n      __df10 = new DDouble();");
    gold.append("\n      __gf11 = -1;");
    gold.append("\n      __df11 = new DComplex();");
    gold.append("\n      __gf12 = -1;");
    gold.append("\n      __df12 = new DMaybe<DComplex>();");
    gold.append("\n      __gf13 = -1;");
    gold.append("\n      __df13 = new DInt64();");
    gold.append("\n      __gf14 = -1;");
    gold.append("\n      __df14 = new DInt64();");
    gold.append("\n      __gf15 = -1;");
    gold.append("\n      __df15 = new DDouble();");
    gold.append("\n      __gf16 = -1;");
    gold.append("\n      __df16 = new DMaybe<DDouble>();");
    gold.append("\n      __gf17 = -1;");
    gold.append("\n      __df17 = new DMaybe<DDouble>();");
    gold.append("\n      __gf18 = -1;");
    gold.append("\n      __df18 = new DComplex();");
    gold.append("\n      __gf19 = -1;");
    gold.append("\n      __df19 = new DMaybe<DComplex>();");
    gold.append("\n      __gf20 = -1;");
    gold.append("\n      __df20 = new DMaybe<DComplex>();");
    gold.append("\n      __gf21 = -1;");
    gold.append("\n      __df21 = new DInt64();");
    gold.append("\n      __gf22 = -1;");
    gold.append("\n      __df22 = new DInt64();");
    gold.append("\n      __gf23 = -1;");
    gold.append("\n      __df23 = new DDouble();");
    gold.append("\n      __gf24 = -1;");
    gold.append("\n      __df24 = new DComplex();");
    gold.append("\n      __gf25 = -1;");
    gold.append("\n      __df25 = new DMaybe<DComplex>();");
    gold.append("\n      __gf26 = -1;");
    gold.append("\n      __df26 = new DDouble();");
    gold.append("\n      __gf27 = -1;");
    gold.append("\n      __df27 = new DDouble();");
    gold.append("\n      __gf28 = -1;");
    gold.append("\n      __df28 = new DDouble();");
    gold.append("\n      __gf29 = -1;");
    gold.append("\n      __df29 = new DMaybe<DDouble>();");
    gold.append("\n      __gf30 = -1;");
    gold.append("\n      __df30 = new DMaybe<DDouble>();");
    gold.append("\n      __gf31 = -1;");
    gold.append("\n      __df31 = new DComplex();");
    gold.append("\n      __gf32 = -1;");
    gold.append("\n      __df32 = new DMaybe<DComplex>();");
    gold.append("\n      __gf33 = -1;");
    gold.append("\n      __df33 = new DMaybe<DComplex>();");
    gold.append("\n      __gf34 = -1;");
    gold.append("\n      __df34 = new DDouble();");
    gold.append("\n      __gf35 = -1;");
    gold.append("\n      __df35 = new DDouble();");
    gold.append("\n      __gf36 = -1;");
    gold.append("\n      __df36 = new DDouble();");
    gold.append("\n      __gf37 = -1;");
    gold.append("\n      __df37 = new DComplex();");
    gold.append("\n      __gf38 = -1;");
    gold.append("\n      __df38 = new DMaybe<DComplex>();");
    gold.append("\n      __gf39 = -1;");
    gold.append("\n      __df39 = new DMaybe<DDouble>();");
    gold.append("\n      __gf40 = -1;");
    gold.append("\n      __df40 = new DMaybe<DDouble>();");
    gold.append("\n      __gf41 = -1;");
    gold.append("\n      __df41 = new DMaybe<DDouble>();");
    gold.append("\n      __gf42 = -1;");
    gold.append("\n      __df42 = new DMaybe<DDouble>();");
    gold.append("\n      __gf43 = -1;");
    gold.append("\n      __df43 = new DMaybe<DDouble>();");
    gold.append("\n      __gf44 = -1;");
    gold.append("\n      __df44 = new DMaybe<DComplex>();");
    gold.append("\n      __gf45 = -1;");
    gold.append("\n      __df45 = new DMaybe<DComplex>();");
    gold.append("\n      __gf46 = -1;");
    gold.append("\n      __df46 = new DMaybe<DComplex>();");
    gold.append("\n      __gf47 = -1;");
    gold.append("\n      __df47 = new DMaybe<DDouble>();");
    gold.append("\n      __gf48 = -1;");
    gold.append("\n      __df48 = new DMaybe<DDouble>();");
    gold.append("\n      __gf49 = -1;");
    gold.append("\n      __df49 = new DMaybe<DDouble>();");
    gold.append("\n      __gf50 = -1;");
    gold.append("\n      __df50 = new DMaybe<DComplex>();");
    gold.append("\n      __gf51 = -1;");
    gold.append("\n      __df51 = new DMaybe<DComplex>();");
    gold.append("\n      __gf52 = -1;");
    gold.append("\n      __df52 = new DMaybe<DDouble>();");
    gold.append("\n      __gf53 = -1;");
    gold.append("\n      __df53 = new DMaybe<DDouble>();");
    gold.append("\n      __gf54 = -1;");
    gold.append("\n      __df54 = new DMaybe<DDouble>();");
    gold.append("\n      __gf55 = -1;");
    gold.append("\n      __df55 = new DMaybe<DDouble>();");
    gold.append("\n      __gf56 = -1;");
    gold.append("\n      __df56 = new DMaybe<DDouble>();");
    gold.append("\n      __gf57 = -1;");
    gold.append("\n      __df57 = new DMaybe<DComplex>();");
    gold.append("\n      __gf58 = -1;");
    gold.append("\n      __df58 = new DMaybe<DComplex>();");
    gold.append("\n      __gf59 = -1;");
    gold.append("\n      __df59 = new DMaybe<DComplex>();");
    gold.append("\n      __gf60 = -1;");
    gold.append("\n      __df60 = new DMaybe<DDouble>();");
    gold.append("\n      __gf61 = -1;");
    gold.append("\n      __df61 = new DMaybe<DDouble>();");
    gold.append("\n      __gf62 = -1;");
    gold.append("\n      __df62 = new DMaybe<DDouble>();");
    gold.append("\n      __gf63 = -1;");
    gold.append("\n      __df63 = new DMaybe<DComplex>();");
    gold.append("\n      __gf64 = -1;");
    gold.append("\n      __df64 = new DMaybe<DComplex>();");
    gold.append("\n      __gf65 = -1;");
    gold.append("\n      __df65 = new DComplex();");
    gold.append("\n      __gf66 = -1;");
    gold.append("\n      __df66 = new DComplex();");
    gold.append("\n      __gf67 = -1;");
    gold.append("\n      __df67 = new DComplex();");
    gold.append("\n      __gf68 = -1;");
    gold.append("\n      __df68 = new DMaybe<DComplex>();");
    gold.append("\n      __gf69 = -1;");
    gold.append("\n      __df69 = new DMaybe<DComplex>();");
    gold.append("\n      __gf70 = -1;");
    gold.append("\n      __df70 = new DComplex();");
    gold.append("\n      __gf71 = -1;");
    gold.append("\n      __df71 = new DMaybe<DComplex>();");
    gold.append("\n      __gf72 = -1;");
    gold.append("\n      __df72 = new DMaybe<DComplex>();");
    gold.append("\n      __gf73 = -1;");
    gold.append("\n      __df73 = new DComplex();");
    gold.append("\n      __gf74 = -1;");
    gold.append("\n      __df74 = new DComplex();");
    gold.append("\n      __gf75 = -1;");
    gold.append("\n      __df75 = new DComplex();");
    gold.append("\n      __gf76 = -1;");
    gold.append("\n      __df76 = new DComplex();");
    gold.append("\n      __gf77 = -1;");
    gold.append("\n      __df77 = new DMaybe<DComplex>();");
    gold.append("\n      __gf78 = -1;");
    gold.append("\n      __df78 = new DMaybe<DComplex>();");
    gold.append("\n      __gf79 = -1;");
    gold.append("\n      __df79 = new DMaybe<DComplex>();");
    gold.append("\n      __gf80 = -1;");
    gold.append("\n      __df80 = new DMaybe<DComplex>();");
    gold.append("\n      __gf81 = -1;");
    gold.append("\n      __df81 = new DMaybe<DComplex>();");
    gold.append("\n      __gf82 = -1;");
    gold.append("\n      __df82 = new DMaybe<DComplex>();");
    gold.append("\n      __gf83 = -1;");
    gold.append("\n      __df83 = new DMaybe<DComplex>();");
    gold.append("\n      __gf84 = -1;");
    gold.append("\n      __df84 = new DMaybe<DComplex>();");
    gold.append("\n      __gf85 = -1;");
    gold.append("\n      __df85 = new DMaybe<DComplex>();");
    gold.append("\n      __gf86 = -1;");
    gold.append("\n      __df86 = new DMaybe<DComplex>();");
    gold.append("\n      __gf87 = -1;");
    gold.append("\n      __df87 = new DMaybe<DComplex>();");
    gold.append("\n      __gf88 = -1;");
    gold.append("\n      __df88 = new DMaybe<DComplex>();");
    gold.append("\n      __gf89 = -1;");
    gold.append("\n      __df89 = new DMaybe<DComplex>();");
    gold.append("\n      __gf90 = -1;");
    gold.append("\n      __df90 = new DMaybe<DComplex>();");
    gold.append("\n      __gf91 = -1;");
    gold.append("\n      __df91 = new DMaybe<DComplex>();");
    gold.append("\n      __gf92 = -1;");
    gold.append("\n      __df92 = new DMaybe<DComplex>();");
    gold.append("\n      __gf93 = -1;");
    gold.append("\n      __df93 = new DMaybe<DComplex>();");
    gold.append("\n      __gf94 = -1;");
    gold.append("\n      __df94 = new DMaybe<DComplex>();");
    gold.append("\n      __gf95 = -1;");
    gold.append("\n      __df95 = new DMaybe<DComplex>();");
    gold.append("\n      __gf96 = -1;");
    gold.append("\n      __df96 = new DMaybe<DComplex>();");
    gold.append("\n      __gf97 = -1;");
    gold.append("\n      __df97 = new DMaybe<DComplex>();");
    gold.append("\n      __gf98 = -1;");
    gold.append("\n      __df98 = new DMaybe<DComplex>();");
    gold.append("\n      __gf99 = -1;");
    gold.append("\n      __df99 = new DMaybe<DComplex>();");
    gold.append("\n      __gf100 = -1;");
    gold.append("\n      __df100 = new DMaybe<DComplex>();");
    gold.append("\n      __gf101 = -1;");
    gold.append("\n      __df101 = new DMaybe<DComplex>();");
    gold.append("\n      __gf102 = -1;");
    gold.append("\n      __df102 = new DMaybe<DComplex>();");
    gold.append("\n      __gf103 = -1;");
    gold.append("\n      __df103 = new DMaybe<DComplex>();");
    gold.append("\n      __gf104 = -1;");
    gold.append("\n      __df104 = new DInt32();");
    gold.append("\n      __gf105 = -1;");
    gold.append("\n      __df105 = new DInt64();");
    gold.append("\n      __gf106 = -1;");
    gold.append("\n      __df106 = new DDouble();");
    gold.append("\n      __gf107 = -1;");
    gold.append("\n      __df107 = new DMaybe<DDouble>();");
    gold.append("\n      __gf108 = -1;");
    gold.append("\n      __df108 = new DMaybe<DDouble>();");
    gold.append("\n      __gf109 = -1;");
    gold.append("\n      __df109 = new DComplex();");
    gold.append("\n      __gf110 = -1;");
    gold.append("\n      __df110 = new DMaybe<DComplex>();");
    gold.append("\n      __gf111 = -1;");
    gold.append("\n      __df111 = new DMaybe<DComplex>();");
    gold.append("\n      __gf112 = -1;");
    gold.append("\n      __df112 = new DInt32();");
    gold.append("\n      __gf113 = -1;");
    gold.append("\n      __df113 = new DInt64();");
    gold.append("\n      __gf114 = -1;");
    gold.append("\n      __df114 = new DDouble();");
    gold.append("\n      __gf115 = -1;");
    gold.append("\n      __df115 = new DComplex();");
    gold.append("\n      __gf116 = -1;");
    gold.append("\n      __df116 = new DMaybe<DComplex>();");
    gold.append("\n      __gf117 = -1;");
    gold.append("\n      __df117 = new DInt64();");
    gold.append("\n      __gf118 = -1;");
    gold.append("\n      __df118 = new DInt64();");
    gold.append("\n      __gf119 = -1;");
    gold.append("\n      __df119 = new DDouble();");
    gold.append("\n      __gf120 = -1;");
    gold.append("\n      __df120 = new DMaybe<DDouble>();");
    gold.append("\n      __gf121 = -1;");
    gold.append("\n      __df121 = new DMaybe<DDouble>();");
    gold.append("\n      __gf122 = -1;");
    gold.append("\n      __df122 = new DComplex();");
    gold.append("\n      __gf123 = -1;");
    gold.append("\n      __df123 = new DMaybe<DComplex>();");
    gold.append("\n      __gf124 = -1;");
    gold.append("\n      __df124 = new DMaybe<DComplex>();");
    gold.append("\n      __gf125 = -1;");
    gold.append("\n      __df125 = new DInt64();");
    gold.append("\n      __gf126 = -1;");
    gold.append("\n      __df126 = new DInt64();");
    gold.append("\n      __gf127 = -1;");
    gold.append("\n      __df127 = new DDouble();");
    gold.append("\n      __gf128 = -1;");
    gold.append("\n      __df128 = new DComplex();");
    gold.append("\n      __gf129 = -1;");
    gold.append("\n      __df129 = new DMaybe<DComplex>();");
    gold.append("\n      __gf130 = -1;");
    gold.append("\n      __df130 = new DDouble();");
    gold.append("\n      __gf131 = -1;");
    gold.append("\n      __df131 = new DDouble();");
    gold.append("\n      __gf132 = -1;");
    gold.append("\n      __df132 = new DDouble();");
    gold.append("\n      __gf133 = -1;");
    gold.append("\n      __df133 = new DMaybe<DDouble>();");
    gold.append("\n      __gf134 = -1;");
    gold.append("\n      __df134 = new DMaybe<DDouble>();");
    gold.append("\n      __gf135 = -1;");
    gold.append("\n      __df135 = new DComplex();");
    gold.append("\n      __gf136 = -1;");
    gold.append("\n      __df136 = new DMaybe<DComplex>();");
    gold.append("\n      __gf137 = -1;");
    gold.append("\n      __df137 = new DMaybe<DComplex>();");
    gold.append("\n      __gf138 = -1;");
    gold.append("\n      __df138 = new DDouble();");
    gold.append("\n      __gf139 = -1;");
    gold.append("\n      __df139 = new DDouble();");
    gold.append("\n      __gf140 = -1;");
    gold.append("\n      __df140 = new DDouble();");
    gold.append("\n      __gf141 = -1;");
    gold.append("\n      __df141 = new DComplex();");
    gold.append("\n      __gf142 = -1;");
    gold.append("\n      __df142 = new DMaybe<DComplex>();");
    gold.append("\n      __gf143 = -1;");
    gold.append("\n      __df143 = new DComplex();");
    gold.append("\n      __gf144 = -1;");
    gold.append("\n      __df144 = new DComplex();");
    gold.append("\n      __gf145 = -1;");
    gold.append("\n      __df145 = new DComplex();");
    gold.append("\n      __gf146 = -1;");
    gold.append("\n      __df146 = new DMaybe<DComplex>();");
    gold.append("\n      __gf147 = -1;");
    gold.append("\n      __df147 = new DMaybe<DComplex>();");
    gold.append("\n      __gf148 = -1;");
    gold.append("\n      __df148 = new DComplex();");
    gold.append("\n      __gf149 = -1;");
    gold.append("\n      __df149 = new DMaybe<DComplex>();");
    gold.append("\n      __gf150 = -1;");
    gold.append("\n      __df150 = new DMaybe<DComplex>();");
    gold.append("\n      __gf151 = -1;");
    gold.append("\n      __df151 = new DComplex();");
    gold.append("\n      __gf152 = -1;");
    gold.append("\n      __df152 = new DComplex();");
    gold.append("\n      __gf153 = -1;");
    gold.append("\n      __df153 = new DComplex();");
    gold.append("\n      __gf154 = -1;");
    gold.append("\n      __df154 = new DComplex();");
    gold.append("\n      __gf155 = -1;");
    gold.append("\n      __df155 = new DMaybe<DComplex>();");
    gold.append("\n      __gf156 = -1;");
    gold.append("\n      __df156 = new DMaybe<DComplex>();");
    gold.append("\n      __gf157 = -1;");
    gold.append("\n      __df157 = new DMaybe<DComplex>();");
    gold.append("\n      __gf158 = -1;");
    gold.append("\n      __df158 = new DMaybe<DComplex>();");
    gold.append("\n      __gf159 = -1;");
    gold.append("\n      __df159 = new DMaybe<DComplex>();");
    gold.append("\n      __gf160 = -1;");
    gold.append("\n      __df160 = new DMaybe<DComplex>();");
    gold.append("\n      __gf161 = -1;");
    gold.append("\n      __df161 = new DMaybe<DComplex>();");
    gold.append("\n      __gf162 = -1;");
    gold.append("\n      __df162 = new DMaybe<DComplex>();");
    gold.append("\n      __gf163 = -1;");
    gold.append("\n      __df163 = new DMaybe<DComplex>();");
    gold.append("\n      __gf164 = -1;");
    gold.append("\n      __df164 = new DMaybe<DComplex>();");
    gold.append("\n      __gf165 = -1;");
    gold.append("\n      __df165 = new DMaybe<DComplex>();");
    gold.append("\n      __gf166 = -1;");
    gold.append("\n      __df166 = new DMaybe<DComplex>();");
    gold.append("\n      __gf167 = -1;");
    gold.append("\n      __df167 = new DMaybe<DComplex>();");
    gold.append("\n      __gf168 = -1;");
    gold.append("\n      __df168 = new DMaybe<DComplex>();");
    gold.append("\n      __gf169 = -1;");
    gold.append("\n      __df169 = new DString();");
    gold.append("\n      __gf170 = -1;");
    gold.append("\n      __df170 = new DString();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __df0.__memory();");
    gold.append("\n      __sum += __df1.__memory();");
    gold.append("\n      __sum += __df2.__memory();");
    gold.append("\n      __sum += __df3.__memory();");
    gold.append("\n      __sum += __df4.__memory();");
    gold.append("\n      __sum += __df5.__memory();");
    gold.append("\n      __sum += __df6.__memory();");
    gold.append("\n      __sum += __df7.__memory();");
    gold.append("\n      __sum += __df8.__memory();");
    gold.append("\n      __sum += __df9.__memory();");
    gold.append("\n      __sum += __df10.__memory();");
    gold.append("\n      __sum += __df11.__memory();");
    gold.append("\n      __sum += __df12.__memory();");
    gold.append("\n      __sum += __df13.__memory();");
    gold.append("\n      __sum += __df14.__memory();");
    gold.append("\n      __sum += __df15.__memory();");
    gold.append("\n      __sum += __df16.__memory();");
    gold.append("\n      __sum += __df17.__memory();");
    gold.append("\n      __sum += __df18.__memory();");
    gold.append("\n      __sum += __df19.__memory();");
    gold.append("\n      __sum += __df20.__memory();");
    gold.append("\n      __sum += __df21.__memory();");
    gold.append("\n      __sum += __df22.__memory();");
    gold.append("\n      __sum += __df23.__memory();");
    gold.append("\n      __sum += __df24.__memory();");
    gold.append("\n      __sum += __df25.__memory();");
    gold.append("\n      __sum += __df26.__memory();");
    gold.append("\n      __sum += __df27.__memory();");
    gold.append("\n      __sum += __df28.__memory();");
    gold.append("\n      __sum += __df29.__memory();");
    gold.append("\n      __sum += __df30.__memory();");
    gold.append("\n      __sum += __df31.__memory();");
    gold.append("\n      __sum += __df32.__memory();");
    gold.append("\n      __sum += __df33.__memory();");
    gold.append("\n      __sum += __df34.__memory();");
    gold.append("\n      __sum += __df35.__memory();");
    gold.append("\n      __sum += __df36.__memory();");
    gold.append("\n      __sum += __df37.__memory();");
    gold.append("\n      __sum += __df38.__memory();");
    gold.append("\n      __sum += __df39.__memory();");
    gold.append("\n      __sum += __df40.__memory();");
    gold.append("\n      __sum += __df41.__memory();");
    gold.append("\n      __sum += __df42.__memory();");
    gold.append("\n      __sum += __df43.__memory();");
    gold.append("\n      __sum += __df44.__memory();");
    gold.append("\n      __sum += __df45.__memory();");
    gold.append("\n      __sum += __df46.__memory();");
    gold.append("\n      __sum += __df47.__memory();");
    gold.append("\n      __sum += __df48.__memory();");
    gold.append("\n      __sum += __df49.__memory();");
    gold.append("\n      __sum += __df50.__memory();");
    gold.append("\n      __sum += __df51.__memory();");
    gold.append("\n      __sum += __df52.__memory();");
    gold.append("\n      __sum += __df53.__memory();");
    gold.append("\n      __sum += __df54.__memory();");
    gold.append("\n      __sum += __df55.__memory();");
    gold.append("\n      __sum += __df56.__memory();");
    gold.append("\n      __sum += __df57.__memory();");
    gold.append("\n      __sum += __df58.__memory();");
    gold.append("\n      __sum += __df59.__memory();");
    gold.append("\n      __sum += __df60.__memory();");
    gold.append("\n      __sum += __df61.__memory();");
    gold.append("\n      __sum += __df62.__memory();");
    gold.append("\n      __sum += __df63.__memory();");
    gold.append("\n      __sum += __df64.__memory();");
    gold.append("\n      __sum += __df65.__memory();");
    gold.append("\n      __sum += __df66.__memory();");
    gold.append("\n      __sum += __df67.__memory();");
    gold.append("\n      __sum += __df68.__memory();");
    gold.append("\n      __sum += __df69.__memory();");
    gold.append("\n      __sum += __df70.__memory();");
    gold.append("\n      __sum += __df71.__memory();");
    gold.append("\n      __sum += __df72.__memory();");
    gold.append("\n      __sum += __df73.__memory();");
    gold.append("\n      __sum += __df74.__memory();");
    gold.append("\n      __sum += __df75.__memory();");
    gold.append("\n      __sum += __df76.__memory();");
    gold.append("\n      __sum += __df77.__memory();");
    gold.append("\n      __sum += __df78.__memory();");
    gold.append("\n      __sum += __df79.__memory();");
    gold.append("\n      __sum += __df80.__memory();");
    gold.append("\n      __sum += __df81.__memory();");
    gold.append("\n      __sum += __df82.__memory();");
    gold.append("\n      __sum += __df83.__memory();");
    gold.append("\n      __sum += __df84.__memory();");
    gold.append("\n      __sum += __df85.__memory();");
    gold.append("\n      __sum += __df86.__memory();");
    gold.append("\n      __sum += __df87.__memory();");
    gold.append("\n      __sum += __df88.__memory();");
    gold.append("\n      __sum += __df89.__memory();");
    gold.append("\n      __sum += __df90.__memory();");
    gold.append("\n      __sum += __df91.__memory();");
    gold.append("\n      __sum += __df92.__memory();");
    gold.append("\n      __sum += __df93.__memory();");
    gold.append("\n      __sum += __df94.__memory();");
    gold.append("\n      __sum += __df95.__memory();");
    gold.append("\n      __sum += __df96.__memory();");
    gold.append("\n      __sum += __df97.__memory();");
    gold.append("\n      __sum += __df98.__memory();");
    gold.append("\n      __sum += __df99.__memory();");
    gold.append("\n      __sum += __df100.__memory();");
    gold.append("\n      __sum += __df101.__memory();");
    gold.append("\n      __sum += __df102.__memory();");
    gold.append("\n      __sum += __df103.__memory();");
    gold.append("\n      __sum += __df104.__memory();");
    gold.append("\n      __sum += __df105.__memory();");
    gold.append("\n      __sum += __df106.__memory();");
    gold.append("\n      __sum += __df107.__memory();");
    gold.append("\n      __sum += __df108.__memory();");
    gold.append("\n      __sum += __df109.__memory();");
    gold.append("\n      __sum += __df110.__memory();");
    gold.append("\n      __sum += __df111.__memory();");
    gold.append("\n      __sum += __df112.__memory();");
    gold.append("\n      __sum += __df113.__memory();");
    gold.append("\n      __sum += __df114.__memory();");
    gold.append("\n      __sum += __df115.__memory();");
    gold.append("\n      __sum += __df116.__memory();");
    gold.append("\n      __sum += __df117.__memory();");
    gold.append("\n      __sum += __df118.__memory();");
    gold.append("\n      __sum += __df119.__memory();");
    gold.append("\n      __sum += __df120.__memory();");
    gold.append("\n      __sum += __df121.__memory();");
    gold.append("\n      __sum += __df122.__memory();");
    gold.append("\n      __sum += __df123.__memory();");
    gold.append("\n      __sum += __df124.__memory();");
    gold.append("\n      __sum += __df125.__memory();");
    gold.append("\n      __sum += __df126.__memory();");
    gold.append("\n      __sum += __df127.__memory();");
    gold.append("\n      __sum += __df128.__memory();");
    gold.append("\n      __sum += __df129.__memory();");
    gold.append("\n      __sum += __df130.__memory();");
    gold.append("\n      __sum += __df131.__memory();");
    gold.append("\n      __sum += __df132.__memory();");
    gold.append("\n      __sum += __df133.__memory();");
    gold.append("\n      __sum += __df134.__memory();");
    gold.append("\n      __sum += __df135.__memory();");
    gold.append("\n      __sum += __df136.__memory();");
    gold.append("\n      __sum += __df137.__memory();");
    gold.append("\n      __sum += __df138.__memory();");
    gold.append("\n      __sum += __df139.__memory();");
    gold.append("\n      __sum += __df140.__memory();");
    gold.append("\n      __sum += __df141.__memory();");
    gold.append("\n      __sum += __df142.__memory();");
    gold.append("\n      __sum += __df143.__memory();");
    gold.append("\n      __sum += __df144.__memory();");
    gold.append("\n      __sum += __df145.__memory();");
    gold.append("\n      __sum += __df146.__memory();");
    gold.append("\n      __sum += __df147.__memory();");
    gold.append("\n      __sum += __df148.__memory();");
    gold.append("\n      __sum += __df149.__memory();");
    gold.append("\n      __sum += __df150.__memory();");
    gold.append("\n      __sum += __df151.__memory();");
    gold.append("\n      __sum += __df152.__memory();");
    gold.append("\n      __sum += __df153.__memory();");
    gold.append("\n      __sum += __df154.__memory();");
    gold.append("\n      __sum += __df155.__memory();");
    gold.append("\n      __sum += __df156.__memory();");
    gold.append("\n      __sum += __df157.__memory();");
    gold.append("\n      __sum += __df158.__memory();");
    gold.append("\n      __sum += __df159.__memory();");
    gold.append("\n      __sum += __df160.__memory();");
    gold.append("\n      __sum += __df161.__memory();");
    gold.append("\n      __sum += __df162.__memory();");
    gold.append("\n      __sum += __df163.__memory();");
    gold.append("\n      __sum += __df164.__memory();");
    gold.append("\n      __sum += __df165.__memory();");
    gold.append("\n      __sum += __df166.__memory();");
    gold.append("\n      __sum += __df167.__memory();");
    gold.append("\n      __sum += __df168.__memory();");
    gold.append("\n      __sum += __df169.__memory();");
    gold.append("\n      __sum += __df170.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(OperationsMultiplyCases_6 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 171;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gf0 != __item.f0.getGeneration()) {");
    gold.append("\n        __df0.show(__item.f0.get(), __obj.planField(\"f0\"));");
    gold.append("\n        __gf0 = __item.f0.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf1 != __item.f1.getGeneration()) {");
    gold.append("\n        __df1.show(__item.f1.get(), __obj.planField(\"f1\"));");
    gold.append("\n        __gf1 = __item.f1.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf2 != __item.f2.getGeneration()) {");
    gold.append("\n        __df2.show(__item.f2.get(), __obj.planField(\"f2\"));");
    gold.append("\n        __gf2 = __item.f2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf3 != __item.f3.getGeneration()) {");
    gold.append("\n        if (__item.f3.get().has()) {");
    gold.append("\n          Double __maybeElement0 = (Double)(__item.f3.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement1 = __df3.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement1.show(__maybeElement0, __obj.planField(\"f3\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df3.hide(__obj.planField(\"f3\"));");
    gold.append("\n        }");
    gold.append("\n        __gf3 = __item.f3.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf4 != __item.f4.getGeneration()) {");
    gold.append("\n        if (__item.f4.get().has()) {");
    gold.append("\n          Double __maybeElement2 = (Double)(__item.f4.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement3 = __df4.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement3.show(__maybeElement2, __obj.planField(\"f4\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df4.hide(__obj.planField(\"f4\"));");
    gold.append("\n        }");
    gold.append("\n        __gf4 = __item.f4.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf5 != __item.f5.getGeneration()) {");
    gold.append("\n        __df5.show(__item.f5.get(), __obj.planField(\"f5\"));");
    gold.append("\n        __gf5 = __item.f5.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf6 != __item.f6.getGeneration()) {");
    gold.append("\n        if (__item.f6.get().has()) {");
    gold.append("\n          NtComplex __maybeElement4 = (NtComplex)(__item.f6.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement5 = __df6.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement5.show(__maybeElement4, __obj.planField(\"f6\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df6.hide(__obj.planField(\"f6\"));");
    gold.append("\n        }");
    gold.append("\n        __gf6 = __item.f6.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf7 != __item.f7.getGeneration()) {");
    gold.append("\n        if (__item.f7.get().has()) {");
    gold.append("\n          NtComplex __maybeElement6 = (NtComplex)(__item.f7.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement7 = __df7.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement7.show(__maybeElement6, __obj.planField(\"f7\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df7.hide(__obj.planField(\"f7\"));");
    gold.append("\n        }");
    gold.append("\n        __gf7 = __item.f7.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf8 != __item.f8.getGeneration()) {");
    gold.append("\n        __df8.show(__item.f8.get(), __obj.planField(\"f8\"));");
    gold.append("\n        __gf8 = __item.f8.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf9 != __item.f9.getGeneration()) {");
    gold.append("\n        __df9.show(__item.f9.get(), __obj.planField(\"f9\"));");
    gold.append("\n        __gf9 = __item.f9.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf10 != __item.f10.getGeneration()) {");
    gold.append("\n        __df10.show(__item.f10.get(), __obj.planField(\"f10\"));");
    gold.append("\n        __gf10 = __item.f10.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf11 != __item.f11.getGeneration()) {");
    gold.append("\n        __df11.show(__item.f11.get(), __obj.planField(\"f11\"));");
    gold.append("\n        __gf11 = __item.f11.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf12 != __item.f12.getGeneration()) {");
    gold.append("\n        if (__item.f12.get().has()) {");
    gold.append("\n          NtComplex __maybeElement8 = (NtComplex)(__item.f12.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement9 = __df12.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement9.show(__maybeElement8, __obj.planField(\"f12\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df12.hide(__obj.planField(\"f12\"));");
    gold.append("\n        }");
    gold.append("\n        __gf12 = __item.f12.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf13 != __item.f13.getGeneration()) {");
    gold.append("\n        __df13.show(__item.f13.get(), __obj.planField(\"f13\"));");
    gold.append("\n        __gf13 = __item.f13.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf14 != __item.f14.getGeneration()) {");
    gold.append("\n        __df14.show(__item.f14.get(), __obj.planField(\"f14\"));");
    gold.append("\n        __gf14 = __item.f14.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf15 != __item.f15.getGeneration()) {");
    gold.append("\n        __df15.show(__item.f15.get(), __obj.planField(\"f15\"));");
    gold.append("\n        __gf15 = __item.f15.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf16 != __item.f16.getGeneration()) {");
    gold.append("\n        if (__item.f16.get().has()) {");
    gold.append("\n          Double __maybeElement10 = (Double)(__item.f16.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement11 = __df16.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement11.show(__maybeElement10, __obj.planField(\"f16\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df16.hide(__obj.planField(\"f16\"));");
    gold.append("\n        }");
    gold.append("\n        __gf16 = __item.f16.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf17 != __item.f17.getGeneration()) {");
    gold.append("\n        if (__item.f17.get().has()) {");
    gold.append("\n          Double __maybeElement12 = (Double)(__item.f17.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement13 = __df17.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement13.show(__maybeElement12, __obj.planField(\"f17\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df17.hide(__obj.planField(\"f17\"));");
    gold.append("\n        }");
    gold.append("\n        __gf17 = __item.f17.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf18 != __item.f18.getGeneration()) {");
    gold.append("\n        __df18.show(__item.f18.get(), __obj.planField(\"f18\"));");
    gold.append("\n        __gf18 = __item.f18.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf19 != __item.f19.getGeneration()) {");
    gold.append("\n        if (__item.f19.get().has()) {");
    gold.append("\n          NtComplex __maybeElement14 = (NtComplex)(__item.f19.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement15 = __df19.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement15.show(__maybeElement14, __obj.planField(\"f19\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df19.hide(__obj.planField(\"f19\"));");
    gold.append("\n        }");
    gold.append("\n        __gf19 = __item.f19.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf20 != __item.f20.getGeneration()) {");
    gold.append("\n        if (__item.f20.get().has()) {");
    gold.append("\n          NtComplex __maybeElement16 = (NtComplex)(__item.f20.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement17 = __df20.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement17.show(__maybeElement16, __obj.planField(\"f20\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df20.hide(__obj.planField(\"f20\"));");
    gold.append("\n        }");
    gold.append("\n        __gf20 = __item.f20.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf21 != __item.f21.getGeneration()) {");
    gold.append("\n        __df21.show(__item.f21.get(), __obj.planField(\"f21\"));");
    gold.append("\n        __gf21 = __item.f21.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf22 != __item.f22.getGeneration()) {");
    gold.append("\n        __df22.show(__item.f22.get(), __obj.planField(\"f22\"));");
    gold.append("\n        __gf22 = __item.f22.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf23 != __item.f23.getGeneration()) {");
    gold.append("\n        __df23.show(__item.f23.get(), __obj.planField(\"f23\"));");
    gold.append("\n        __gf23 = __item.f23.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf24 != __item.f24.getGeneration()) {");
    gold.append("\n        __df24.show(__item.f24.get(), __obj.planField(\"f24\"));");
    gold.append("\n        __gf24 = __item.f24.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf25 != __item.f25.getGeneration()) {");
    gold.append("\n        if (__item.f25.get().has()) {");
    gold.append("\n          NtComplex __maybeElement18 = (NtComplex)(__item.f25.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement19 = __df25.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement19.show(__maybeElement18, __obj.planField(\"f25\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df25.hide(__obj.planField(\"f25\"));");
    gold.append("\n        }");
    gold.append("\n        __gf25 = __item.f25.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf26 != __item.f26.getGeneration()) {");
    gold.append("\n        __df26.show(__item.f26.get(), __obj.planField(\"f26\"));");
    gold.append("\n        __gf26 = __item.f26.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf27 != __item.f27.getGeneration()) {");
    gold.append("\n        __df27.show(__item.f27.get(), __obj.planField(\"f27\"));");
    gold.append("\n        __gf27 = __item.f27.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf28 != __item.f28.getGeneration()) {");
    gold.append("\n        __df28.show(__item.f28.get(), __obj.planField(\"f28\"));");
    gold.append("\n        __gf28 = __item.f28.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf29 != __item.f29.getGeneration()) {");
    gold.append("\n        if (__item.f29.get().has()) {");
    gold.append("\n          Double __maybeElement20 = (Double)(__item.f29.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement21 = __df29.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement21.show(__maybeElement20, __obj.planField(\"f29\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df29.hide(__obj.planField(\"f29\"));");
    gold.append("\n        }");
    gold.append("\n        __gf29 = __item.f29.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf30 != __item.f30.getGeneration()) {");
    gold.append("\n        if (__item.f30.get().has()) {");
    gold.append("\n          Double __maybeElement22 = (Double)(__item.f30.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement23 = __df30.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement23.show(__maybeElement22, __obj.planField(\"f30\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df30.hide(__obj.planField(\"f30\"));");
    gold.append("\n        }");
    gold.append("\n        __gf30 = __item.f30.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf31 != __item.f31.getGeneration()) {");
    gold.append("\n        __df31.show(__item.f31.get(), __obj.planField(\"f31\"));");
    gold.append("\n        __gf31 = __item.f31.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf32 != __item.f32.getGeneration()) {");
    gold.append("\n        if (__item.f32.get().has()) {");
    gold.append("\n          NtComplex __maybeElement24 = (NtComplex)(__item.f32.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement25 = __df32.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement25.show(__maybeElement24, __obj.planField(\"f32\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df32.hide(__obj.planField(\"f32\"));");
    gold.append("\n        }");
    gold.append("\n        __gf32 = __item.f32.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf33 != __item.f33.getGeneration()) {");
    gold.append("\n        if (__item.f33.get().has()) {");
    gold.append("\n          NtComplex __maybeElement26 = (NtComplex)(__item.f33.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement27 = __df33.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement27.show(__maybeElement26, __obj.planField(\"f33\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df33.hide(__obj.planField(\"f33\"));");
    gold.append("\n        }");
    gold.append("\n        __gf33 = __item.f33.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf34 != __item.f34.getGeneration()) {");
    gold.append("\n        __df34.show(__item.f34.get(), __obj.planField(\"f34\"));");
    gold.append("\n        __gf34 = __item.f34.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf35 != __item.f35.getGeneration()) {");
    gold.append("\n        __df35.show(__item.f35.get(), __obj.planField(\"f35\"));");
    gold.append("\n        __gf35 = __item.f35.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf36 != __item.f36.getGeneration()) {");
    gold.append("\n        __df36.show(__item.f36.get(), __obj.planField(\"f36\"));");
    gold.append("\n        __gf36 = __item.f36.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf37 != __item.f37.getGeneration()) {");
    gold.append("\n        __df37.show(__item.f37.get(), __obj.planField(\"f37\"));");
    gold.append("\n        __gf37 = __item.f37.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf38 != __item.f38.getGeneration()) {");
    gold.append("\n        if (__item.f38.get().has()) {");
    gold.append("\n          NtComplex __maybeElement28 = (NtComplex)(__item.f38.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement29 = __df38.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement29.show(__maybeElement28, __obj.planField(\"f38\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df38.hide(__obj.planField(\"f38\"));");
    gold.append("\n        }");
    gold.append("\n        __gf38 = __item.f38.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf39 != __item.f39.getGeneration()) {");
    gold.append("\n        if (__item.f39.get().has()) {");
    gold.append("\n          Double __maybeElement30 = (Double)(__item.f39.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement31 = __df39.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement31.show(__maybeElement30, __obj.planField(\"f39\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df39.hide(__obj.planField(\"f39\"));");
    gold.append("\n        }");
    gold.append("\n        __gf39 = __item.f39.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf40 != __item.f40.getGeneration()) {");
    gold.append("\n        if (__item.f40.get().has()) {");
    gold.append("\n          Double __maybeElement32 = (Double)(__item.f40.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement33 = __df40.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement33.show(__maybeElement32, __obj.planField(\"f40\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df40.hide(__obj.planField(\"f40\"));");
    gold.append("\n        }");
    gold.append("\n        __gf40 = __item.f40.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf41 != __item.f41.getGeneration()) {");
    gold.append("\n        if (__item.f41.get().has()) {");
    gold.append("\n          Double __maybeElement34 = (Double)(__item.f41.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement35 = __df41.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement35.show(__maybeElement34, __obj.planField(\"f41\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df41.hide(__obj.planField(\"f41\"));");
    gold.append("\n        }");
    gold.append("\n        __gf41 = __item.f41.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf42 != __item.f42.getGeneration()) {");
    gold.append("\n        if (__item.f42.get().has()) {");
    gold.append("\n          Double __maybeElement36 = (Double)(__item.f42.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement37 = __df42.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement37.show(__maybeElement36, __obj.planField(\"f42\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df42.hide(__obj.planField(\"f42\"));");
    gold.append("\n        }");
    gold.append("\n        __gf42 = __item.f42.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf43 != __item.f43.getGeneration()) {");
    gold.append("\n        if (__item.f43.get().has()) {");
    gold.append("\n          Double __maybeElement38 = (Double)(__item.f43.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement39 = __df43.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement39.show(__maybeElement38, __obj.planField(\"f43\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df43.hide(__obj.planField(\"f43\"));");
    gold.append("\n        }");
    gold.append("\n        __gf43 = __item.f43.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf44 != __item.f44.getGeneration()) {");
    gold.append("\n        if (__item.f44.get().has()) {");
    gold.append("\n          NtComplex __maybeElement40 = (NtComplex)(__item.f44.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement41 = __df44.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement41.show(__maybeElement40, __obj.planField(\"f44\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df44.hide(__obj.planField(\"f44\"));");
    gold.append("\n        }");
    gold.append("\n        __gf44 = __item.f44.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf45 != __item.f45.getGeneration()) {");
    gold.append("\n        if (__item.f45.get().has()) {");
    gold.append("\n          NtComplex __maybeElement42 = (NtComplex)(__item.f45.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement43 = __df45.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement43.show(__maybeElement42, __obj.planField(\"f45\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df45.hide(__obj.planField(\"f45\"));");
    gold.append("\n        }");
    gold.append("\n        __gf45 = __item.f45.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf46 != __item.f46.getGeneration()) {");
    gold.append("\n        if (__item.f46.get().has()) {");
    gold.append("\n          NtComplex __maybeElement44 = (NtComplex)(__item.f46.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement45 = __df46.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement45.show(__maybeElement44, __obj.planField(\"f46\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df46.hide(__obj.planField(\"f46\"));");
    gold.append("\n        }");
    gold.append("\n        __gf46 = __item.f46.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf47 != __item.f47.getGeneration()) {");
    gold.append("\n        if (__item.f47.get().has()) {");
    gold.append("\n          Double __maybeElement46 = (Double)(__item.f47.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement47 = __df47.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement47.show(__maybeElement46, __obj.planField(\"f47\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df47.hide(__obj.planField(\"f47\"));");
    gold.append("\n        }");
    gold.append("\n        __gf47 = __item.f47.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf48 != __item.f48.getGeneration()) {");
    gold.append("\n        if (__item.f48.get().has()) {");
    gold.append("\n          Double __maybeElement48 = (Double)(__item.f48.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement49 = __df48.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement49.show(__maybeElement48, __obj.planField(\"f48\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df48.hide(__obj.planField(\"f48\"));");
    gold.append("\n        }");
    gold.append("\n        __gf48 = __item.f48.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf49 != __item.f49.getGeneration()) {");
    gold.append("\n        if (__item.f49.get().has()) {");
    gold.append("\n          Double __maybeElement50 = (Double)(__item.f49.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement51 = __df49.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement51.show(__maybeElement50, __obj.planField(\"f49\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df49.hide(__obj.planField(\"f49\"));");
    gold.append("\n        }");
    gold.append("\n        __gf49 = __item.f49.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf50 != __item.f50.getGeneration()) {");
    gold.append("\n        if (__item.f50.get().has()) {");
    gold.append("\n          NtComplex __maybeElement52 = (NtComplex)(__item.f50.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement53 = __df50.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement53.show(__maybeElement52, __obj.planField(\"f50\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df50.hide(__obj.planField(\"f50\"));");
    gold.append("\n        }");
    gold.append("\n        __gf50 = __item.f50.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf51 != __item.f51.getGeneration()) {");
    gold.append("\n        if (__item.f51.get().has()) {");
    gold.append("\n          NtComplex __maybeElement54 = (NtComplex)(__item.f51.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement55 = __df51.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement55.show(__maybeElement54, __obj.planField(\"f51\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df51.hide(__obj.planField(\"f51\"));");
    gold.append("\n        }");
    gold.append("\n        __gf51 = __item.f51.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf52 != __item.f52.getGeneration()) {");
    gold.append("\n        if (__item.f52.get().has()) {");
    gold.append("\n          Double __maybeElement56 = (Double)(__item.f52.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement57 = __df52.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement57.show(__maybeElement56, __obj.planField(\"f52\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df52.hide(__obj.planField(\"f52\"));");
    gold.append("\n        }");
    gold.append("\n        __gf52 = __item.f52.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf53 != __item.f53.getGeneration()) {");
    gold.append("\n        if (__item.f53.get().has()) {");
    gold.append("\n          Double __maybeElement58 = (Double)(__item.f53.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement59 = __df53.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement59.show(__maybeElement58, __obj.planField(\"f53\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df53.hide(__obj.planField(\"f53\"));");
    gold.append("\n        }");
    gold.append("\n        __gf53 = __item.f53.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf54 != __item.f54.getGeneration()) {");
    gold.append("\n        if (__item.f54.get().has()) {");
    gold.append("\n          Double __maybeElement60 = (Double)(__item.f54.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement61 = __df54.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement61.show(__maybeElement60, __obj.planField(\"f54\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df54.hide(__obj.planField(\"f54\"));");
    gold.append("\n        }");
    gold.append("\n        __gf54 = __item.f54.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf55 != __item.f55.getGeneration()) {");
    gold.append("\n        if (__item.f55.get().has()) {");
    gold.append("\n          Double __maybeElement62 = (Double)(__item.f55.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement63 = __df55.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement63.show(__maybeElement62, __obj.planField(\"f55\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df55.hide(__obj.planField(\"f55\"));");
    gold.append("\n        }");
    gold.append("\n        __gf55 = __item.f55.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf56 != __item.f56.getGeneration()) {");
    gold.append("\n        if (__item.f56.get().has()) {");
    gold.append("\n          Double __maybeElement64 = (Double)(__item.f56.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement65 = __df56.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement65.show(__maybeElement64, __obj.planField(\"f56\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df56.hide(__obj.planField(\"f56\"));");
    gold.append("\n        }");
    gold.append("\n        __gf56 = __item.f56.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf57 != __item.f57.getGeneration()) {");
    gold.append("\n        if (__item.f57.get().has()) {");
    gold.append("\n          NtComplex __maybeElement66 = (NtComplex)(__item.f57.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement67 = __df57.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement67.show(__maybeElement66, __obj.planField(\"f57\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df57.hide(__obj.planField(\"f57\"));");
    gold.append("\n        }");
    gold.append("\n        __gf57 = __item.f57.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf58 != __item.f58.getGeneration()) {");
    gold.append("\n        if (__item.f58.get().has()) {");
    gold.append("\n          NtComplex __maybeElement68 = (NtComplex)(__item.f58.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement69 = __df58.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement69.show(__maybeElement68, __obj.planField(\"f58\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df58.hide(__obj.planField(\"f58\"));");
    gold.append("\n        }");
    gold.append("\n        __gf58 = __item.f58.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf59 != __item.f59.getGeneration()) {");
    gold.append("\n        if (__item.f59.get().has()) {");
    gold.append("\n          NtComplex __maybeElement70 = (NtComplex)(__item.f59.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement71 = __df59.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement71.show(__maybeElement70, __obj.planField(\"f59\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df59.hide(__obj.planField(\"f59\"));");
    gold.append("\n        }");
    gold.append("\n        __gf59 = __item.f59.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf60 != __item.f60.getGeneration()) {");
    gold.append("\n        if (__item.f60.get().has()) {");
    gold.append("\n          Double __maybeElement72 = (Double)(__item.f60.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement73 = __df60.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement73.show(__maybeElement72, __obj.planField(\"f60\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df60.hide(__obj.planField(\"f60\"));");
    gold.append("\n        }");
    gold.append("\n        __gf60 = __item.f60.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf61 != __item.f61.getGeneration()) {");
    gold.append("\n        if (__item.f61.get().has()) {");
    gold.append("\n          Double __maybeElement74 = (Double)(__item.f61.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement75 = __df61.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement75.show(__maybeElement74, __obj.planField(\"f61\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df61.hide(__obj.planField(\"f61\"));");
    gold.append("\n        }");
    gold.append("\n        __gf61 = __item.f61.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf62 != __item.f62.getGeneration()) {");
    gold.append("\n        if (__item.f62.get().has()) {");
    gold.append("\n          Double __maybeElement76 = (Double)(__item.f62.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement77 = __df62.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement77.show(__maybeElement76, __obj.planField(\"f62\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df62.hide(__obj.planField(\"f62\"));");
    gold.append("\n        }");
    gold.append("\n        __gf62 = __item.f62.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf63 != __item.f63.getGeneration()) {");
    gold.append("\n        if (__item.f63.get().has()) {");
    gold.append("\n          NtComplex __maybeElement78 = (NtComplex)(__item.f63.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement79 = __df63.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement79.show(__maybeElement78, __obj.planField(\"f63\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df63.hide(__obj.planField(\"f63\"));");
    gold.append("\n        }");
    gold.append("\n        __gf63 = __item.f63.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf64 != __item.f64.getGeneration()) {");
    gold.append("\n        if (__item.f64.get().has()) {");
    gold.append("\n          NtComplex __maybeElement80 = (NtComplex)(__item.f64.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement81 = __df64.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement81.show(__maybeElement80, __obj.planField(\"f64\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df64.hide(__obj.planField(\"f64\"));");
    gold.append("\n        }");
    gold.append("\n        __gf64 = __item.f64.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf65 != __item.f65.getGeneration()) {");
    gold.append("\n        __df65.show(__item.f65.get(), __obj.planField(\"f65\"));");
    gold.append("\n        __gf65 = __item.f65.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf66 != __item.f66.getGeneration()) {");
    gold.append("\n        __df66.show(__item.f66.get(), __obj.planField(\"f66\"));");
    gold.append("\n        __gf66 = __item.f66.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf67 != __item.f67.getGeneration()) {");
    gold.append("\n        __df67.show(__item.f67.get(), __obj.planField(\"f67\"));");
    gold.append("\n        __gf67 = __item.f67.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf68 != __item.f68.getGeneration()) {");
    gold.append("\n        if (__item.f68.get().has()) {");
    gold.append("\n          NtComplex __maybeElement82 = (NtComplex)(__item.f68.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement83 = __df68.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement83.show(__maybeElement82, __obj.planField(\"f68\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df68.hide(__obj.planField(\"f68\"));");
    gold.append("\n        }");
    gold.append("\n        __gf68 = __item.f68.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf69 != __item.f69.getGeneration()) {");
    gold.append("\n        if (__item.f69.get().has()) {");
    gold.append("\n          NtComplex __maybeElement84 = (NtComplex)(__item.f69.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement85 = __df69.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement85.show(__maybeElement84, __obj.planField(\"f69\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df69.hide(__obj.planField(\"f69\"));");
    gold.append("\n        }");
    gold.append("\n        __gf69 = __item.f69.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf70 != __item.f70.getGeneration()) {");
    gold.append("\n        __df70.show(__item.f70.get(), __obj.planField(\"f70\"));");
    gold.append("\n        __gf70 = __item.f70.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf71 != __item.f71.getGeneration()) {");
    gold.append("\n        if (__item.f71.get().has()) {");
    gold.append("\n          NtComplex __maybeElement86 = (NtComplex)(__item.f71.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement87 = __df71.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement87.show(__maybeElement86, __obj.planField(\"f71\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df71.hide(__obj.planField(\"f71\"));");
    gold.append("\n        }");
    gold.append("\n        __gf71 = __item.f71.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf72 != __item.f72.getGeneration()) {");
    gold.append("\n        if (__item.f72.get().has()) {");
    gold.append("\n          NtComplex __maybeElement88 = (NtComplex)(__item.f72.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement89 = __df72.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement89.show(__maybeElement88, __obj.planField(\"f72\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df72.hide(__obj.planField(\"f72\"));");
    gold.append("\n        }");
    gold.append("\n        __gf72 = __item.f72.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf73 != __item.f73.getGeneration()) {");
    gold.append("\n        __df73.show(__item.f73.get(), __obj.planField(\"f73\"));");
    gold.append("\n        __gf73 = __item.f73.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf74 != __item.f74.getGeneration()) {");
    gold.append("\n        __df74.show(__item.f74.get(), __obj.planField(\"f74\"));");
    gold.append("\n        __gf74 = __item.f74.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf75 != __item.f75.getGeneration()) {");
    gold.append("\n        __df75.show(__item.f75.get(), __obj.planField(\"f75\"));");
    gold.append("\n        __gf75 = __item.f75.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf76 != __item.f76.getGeneration()) {");
    gold.append("\n        __df76.show(__item.f76.get(), __obj.planField(\"f76\"));");
    gold.append("\n        __gf76 = __item.f76.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf77 != __item.f77.getGeneration()) {");
    gold.append("\n        if (__item.f77.get().has()) {");
    gold.append("\n          NtComplex __maybeElement90 = (NtComplex)(__item.f77.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement91 = __df77.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement91.show(__maybeElement90, __obj.planField(\"f77\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df77.hide(__obj.planField(\"f77\"));");
    gold.append("\n        }");
    gold.append("\n        __gf77 = __item.f77.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf78 != __item.f78.getGeneration()) {");
    gold.append("\n        if (__item.f78.get().has()) {");
    gold.append("\n          NtComplex __maybeElement92 = (NtComplex)(__item.f78.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement93 = __df78.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement93.show(__maybeElement92, __obj.planField(\"f78\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df78.hide(__obj.planField(\"f78\"));");
    gold.append("\n        }");
    gold.append("\n        __gf78 = __item.f78.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf79 != __item.f79.getGeneration()) {");
    gold.append("\n        if (__item.f79.get().has()) {");
    gold.append("\n          NtComplex __maybeElement94 = (NtComplex)(__item.f79.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement95 = __df79.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement95.show(__maybeElement94, __obj.planField(\"f79\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df79.hide(__obj.planField(\"f79\"));");
    gold.append("\n        }");
    gold.append("\n        __gf79 = __item.f79.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf80 != __item.f80.getGeneration()) {");
    gold.append("\n        if (__item.f80.get().has()) {");
    gold.append("\n          NtComplex __maybeElement96 = (NtComplex)(__item.f80.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement97 = __df80.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement97.show(__maybeElement96, __obj.planField(\"f80\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df80.hide(__obj.planField(\"f80\"));");
    gold.append("\n        }");
    gold.append("\n        __gf80 = __item.f80.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf81 != __item.f81.getGeneration()) {");
    gold.append("\n        if (__item.f81.get().has()) {");
    gold.append("\n          NtComplex __maybeElement98 = (NtComplex)(__item.f81.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement99 = __df81.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement99.show(__maybeElement98, __obj.planField(\"f81\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df81.hide(__obj.planField(\"f81\"));");
    gold.append("\n        }");
    gold.append("\n        __gf81 = __item.f81.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf82 != __item.f82.getGeneration()) {");
    gold.append("\n        if (__item.f82.get().has()) {");
    gold.append("\n          NtComplex __maybeElement100 = (NtComplex)(__item.f82.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement101 = __df82.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement101.show(__maybeElement100, __obj.planField(\"f82\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df82.hide(__obj.planField(\"f82\"));");
    gold.append("\n        }");
    gold.append("\n        __gf82 = __item.f82.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf83 != __item.f83.getGeneration()) {");
    gold.append("\n        if (__item.f83.get().has()) {");
    gold.append("\n          NtComplex __maybeElement102 = (NtComplex)(__item.f83.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement103 = __df83.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement103.show(__maybeElement102, __obj.planField(\"f83\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df83.hide(__obj.planField(\"f83\"));");
    gold.append("\n        }");
    gold.append("\n        __gf83 = __item.f83.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf84 != __item.f84.getGeneration()) {");
    gold.append("\n        if (__item.f84.get().has()) {");
    gold.append("\n          NtComplex __maybeElement104 = (NtComplex)(__item.f84.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement105 = __df84.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement105.show(__maybeElement104, __obj.planField(\"f84\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df84.hide(__obj.planField(\"f84\"));");
    gold.append("\n        }");
    gold.append("\n        __gf84 = __item.f84.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf85 != __item.f85.getGeneration()) {");
    gold.append("\n        if (__item.f85.get().has()) {");
    gold.append("\n          NtComplex __maybeElement106 = (NtComplex)(__item.f85.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement107 = __df85.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement107.show(__maybeElement106, __obj.planField(\"f85\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df85.hide(__obj.planField(\"f85\"));");
    gold.append("\n        }");
    gold.append("\n        __gf85 = __item.f85.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf86 != __item.f86.getGeneration()) {");
    gold.append("\n        if (__item.f86.get().has()) {");
    gold.append("\n          NtComplex __maybeElement108 = (NtComplex)(__item.f86.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement109 = __df86.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement109.show(__maybeElement108, __obj.planField(\"f86\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df86.hide(__obj.planField(\"f86\"));");
    gold.append("\n        }");
    gold.append("\n        __gf86 = __item.f86.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf87 != __item.f87.getGeneration()) {");
    gold.append("\n        if (__item.f87.get().has()) {");
    gold.append("\n          NtComplex __maybeElement110 = (NtComplex)(__item.f87.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement111 = __df87.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement111.show(__maybeElement110, __obj.planField(\"f87\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df87.hide(__obj.planField(\"f87\"));");
    gold.append("\n        }");
    gold.append("\n        __gf87 = __item.f87.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf88 != __item.f88.getGeneration()) {");
    gold.append("\n        if (__item.f88.get().has()) {");
    gold.append("\n          NtComplex __maybeElement112 = (NtComplex)(__item.f88.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement113 = __df88.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement113.show(__maybeElement112, __obj.planField(\"f88\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df88.hide(__obj.planField(\"f88\"));");
    gold.append("\n        }");
    gold.append("\n        __gf88 = __item.f88.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf89 != __item.f89.getGeneration()) {");
    gold.append("\n        if (__item.f89.get().has()) {");
    gold.append("\n          NtComplex __maybeElement114 = (NtComplex)(__item.f89.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement115 = __df89.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement115.show(__maybeElement114, __obj.planField(\"f89\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df89.hide(__obj.planField(\"f89\"));");
    gold.append("\n        }");
    gold.append("\n        __gf89 = __item.f89.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf90 != __item.f90.getGeneration()) {");
    gold.append("\n        if (__item.f90.get().has()) {");
    gold.append("\n          NtComplex __maybeElement116 = (NtComplex)(__item.f90.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement117 = __df90.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement117.show(__maybeElement116, __obj.planField(\"f90\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df90.hide(__obj.planField(\"f90\"));");
    gold.append("\n        }");
    gold.append("\n        __gf90 = __item.f90.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf91 != __item.f91.getGeneration()) {");
    gold.append("\n        if (__item.f91.get().has()) {");
    gold.append("\n          NtComplex __maybeElement118 = (NtComplex)(__item.f91.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement119 = __df91.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement119.show(__maybeElement118, __obj.planField(\"f91\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df91.hide(__obj.planField(\"f91\"));");
    gold.append("\n        }");
    gold.append("\n        __gf91 = __item.f91.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf92 != __item.f92.getGeneration()) {");
    gold.append("\n        if (__item.f92.get().has()) {");
    gold.append("\n          NtComplex __maybeElement120 = (NtComplex)(__item.f92.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement121 = __df92.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement121.show(__maybeElement120, __obj.planField(\"f92\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df92.hide(__obj.planField(\"f92\"));");
    gold.append("\n        }");
    gold.append("\n        __gf92 = __item.f92.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf93 != __item.f93.getGeneration()) {");
    gold.append("\n        if (__item.f93.get().has()) {");
    gold.append("\n          NtComplex __maybeElement122 = (NtComplex)(__item.f93.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement123 = __df93.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement123.show(__maybeElement122, __obj.planField(\"f93\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df93.hide(__obj.planField(\"f93\"));");
    gold.append("\n        }");
    gold.append("\n        __gf93 = __item.f93.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf94 != __item.f94.getGeneration()) {");
    gold.append("\n        if (__item.f94.get().has()) {");
    gold.append("\n          NtComplex __maybeElement124 = (NtComplex)(__item.f94.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement125 = __df94.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement125.show(__maybeElement124, __obj.planField(\"f94\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df94.hide(__obj.planField(\"f94\"));");
    gold.append("\n        }");
    gold.append("\n        __gf94 = __item.f94.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf95 != __item.f95.getGeneration()) {");
    gold.append("\n        if (__item.f95.get().has()) {");
    gold.append("\n          NtComplex __maybeElement126 = (NtComplex)(__item.f95.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement127 = __df95.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement127.show(__maybeElement126, __obj.planField(\"f95\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df95.hide(__obj.planField(\"f95\"));");
    gold.append("\n        }");
    gold.append("\n        __gf95 = __item.f95.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf96 != __item.f96.getGeneration()) {");
    gold.append("\n        if (__item.f96.get().has()) {");
    gold.append("\n          NtComplex __maybeElement128 = (NtComplex)(__item.f96.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement129 = __df96.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement129.show(__maybeElement128, __obj.planField(\"f96\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df96.hide(__obj.planField(\"f96\"));");
    gold.append("\n        }");
    gold.append("\n        __gf96 = __item.f96.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf97 != __item.f97.getGeneration()) {");
    gold.append("\n        if (__item.f97.get().has()) {");
    gold.append("\n          NtComplex __maybeElement130 = (NtComplex)(__item.f97.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement131 = __df97.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement131.show(__maybeElement130, __obj.planField(\"f97\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df97.hide(__obj.planField(\"f97\"));");
    gold.append("\n        }");
    gold.append("\n        __gf97 = __item.f97.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf98 != __item.f98.getGeneration()) {");
    gold.append("\n        if (__item.f98.get().has()) {");
    gold.append("\n          NtComplex __maybeElement132 = (NtComplex)(__item.f98.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement133 = __df98.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement133.show(__maybeElement132, __obj.planField(\"f98\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df98.hide(__obj.planField(\"f98\"));");
    gold.append("\n        }");
    gold.append("\n        __gf98 = __item.f98.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf99 != __item.f99.getGeneration()) {");
    gold.append("\n        if (__item.f99.get().has()) {");
    gold.append("\n          NtComplex __maybeElement134 = (NtComplex)(__item.f99.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement135 = __df99.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement135.show(__maybeElement134, __obj.planField(\"f99\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df99.hide(__obj.planField(\"f99\"));");
    gold.append("\n        }");
    gold.append("\n        __gf99 = __item.f99.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf100 != __item.f100.getGeneration()) {");
    gold.append("\n        if (__item.f100.get().has()) {");
    gold.append("\n          NtComplex __maybeElement136 = (NtComplex)(__item.f100.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement137 = __df100.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement137.show(__maybeElement136, __obj.planField(\"f100\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df100.hide(__obj.planField(\"f100\"));");
    gold.append("\n        }");
    gold.append("\n        __gf100 = __item.f100.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf101 != __item.f101.getGeneration()) {");
    gold.append("\n        if (__item.f101.get().has()) {");
    gold.append("\n          NtComplex __maybeElement138 = (NtComplex)(__item.f101.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement139 = __df101.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement139.show(__maybeElement138, __obj.planField(\"f101\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df101.hide(__obj.planField(\"f101\"));");
    gold.append("\n        }");
    gold.append("\n        __gf101 = __item.f101.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf102 != __item.f102.getGeneration()) {");
    gold.append("\n        if (__item.f102.get().has()) {");
    gold.append("\n          NtComplex __maybeElement140 = (NtComplex)(__item.f102.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement141 = __df102.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement141.show(__maybeElement140, __obj.planField(\"f102\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df102.hide(__obj.planField(\"f102\"));");
    gold.append("\n        }");
    gold.append("\n        __gf102 = __item.f102.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf103 != __item.f103.getGeneration()) {");
    gold.append("\n        if (__item.f103.get().has()) {");
    gold.append("\n          NtComplex __maybeElement142 = (NtComplex)(__item.f103.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement143 = __df103.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement143.show(__maybeElement142, __obj.planField(\"f103\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df103.hide(__obj.planField(\"f103\"));");
    gold.append("\n        }");
    gold.append("\n        __gf103 = __item.f103.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf104 != __item.f104.getGeneration()) {");
    gold.append("\n        __df104.show(__item.f104.get(), __obj.planField(\"f104\"));");
    gold.append("\n        __gf104 = __item.f104.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf105 != __item.f105.getGeneration()) {");
    gold.append("\n        __df105.show(__item.f105.get(), __obj.planField(\"f105\"));");
    gold.append("\n        __gf105 = __item.f105.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf106 != __item.f106.getGeneration()) {");
    gold.append("\n        __df106.show(__item.f106.get(), __obj.planField(\"f106\"));");
    gold.append("\n        __gf106 = __item.f106.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf107 != __item.f107.getGeneration()) {");
    gold.append("\n        if (__item.f107.get().has()) {");
    gold.append("\n          Double __maybeElement144 = (Double)(__item.f107.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement145 = __df107.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement145.show(__maybeElement144, __obj.planField(\"f107\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df107.hide(__obj.planField(\"f107\"));");
    gold.append("\n        }");
    gold.append("\n        __gf107 = __item.f107.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf108 != __item.f108.getGeneration()) {");
    gold.append("\n        if (__item.f108.get().has()) {");
    gold.append("\n          Double __maybeElement146 = (Double)(__item.f108.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement147 = __df108.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement147.show(__maybeElement146, __obj.planField(\"f108\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df108.hide(__obj.planField(\"f108\"));");
    gold.append("\n        }");
    gold.append("\n        __gf108 = __item.f108.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf109 != __item.f109.getGeneration()) {");
    gold.append("\n        __df109.show(__item.f109.get(), __obj.planField(\"f109\"));");
    gold.append("\n        __gf109 = __item.f109.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf110 != __item.f110.getGeneration()) {");
    gold.append("\n        if (__item.f110.get().has()) {");
    gold.append("\n          NtComplex __maybeElement148 = (NtComplex)(__item.f110.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement149 = __df110.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement149.show(__maybeElement148, __obj.planField(\"f110\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df110.hide(__obj.planField(\"f110\"));");
    gold.append("\n        }");
    gold.append("\n        __gf110 = __item.f110.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf111 != __item.f111.getGeneration()) {");
    gold.append("\n        if (__item.f111.get().has()) {");
    gold.append("\n          NtComplex __maybeElement150 = (NtComplex)(__item.f111.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement151 = __df111.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement151.show(__maybeElement150, __obj.planField(\"f111\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df111.hide(__obj.planField(\"f111\"));");
    gold.append("\n        }");
    gold.append("\n        __gf111 = __item.f111.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf112 != __item.f112.getGeneration()) {");
    gold.append("\n        __df112.show(__item.f112.get(), __obj.planField(\"f112\"));");
    gold.append("\n        __gf112 = __item.f112.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf113 != __item.f113.getGeneration()) {");
    gold.append("\n        __df113.show(__item.f113.get(), __obj.planField(\"f113\"));");
    gold.append("\n        __gf113 = __item.f113.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf114 != __item.f114.getGeneration()) {");
    gold.append("\n        __df114.show(__item.f114.get(), __obj.planField(\"f114\"));");
    gold.append("\n        __gf114 = __item.f114.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf115 != __item.f115.getGeneration()) {");
    gold.append("\n        __df115.show(__item.f115.get(), __obj.planField(\"f115\"));");
    gold.append("\n        __gf115 = __item.f115.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf116 != __item.f116.getGeneration()) {");
    gold.append("\n        if (__item.f116.get().has()) {");
    gold.append("\n          NtComplex __maybeElement152 = (NtComplex)(__item.f116.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement153 = __df116.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement153.show(__maybeElement152, __obj.planField(\"f116\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df116.hide(__obj.planField(\"f116\"));");
    gold.append("\n        }");
    gold.append("\n        __gf116 = __item.f116.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf117 != __item.f117.getGeneration()) {");
    gold.append("\n        __df117.show(__item.f117.get(), __obj.planField(\"f117\"));");
    gold.append("\n        __gf117 = __item.f117.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf118 != __item.f118.getGeneration()) {");
    gold.append("\n        __df118.show(__item.f118.get(), __obj.planField(\"f118\"));");
    gold.append("\n        __gf118 = __item.f118.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf119 != __item.f119.getGeneration()) {");
    gold.append("\n        __df119.show(__item.f119.get(), __obj.planField(\"f119\"));");
    gold.append("\n        __gf119 = __item.f119.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf120 != __item.f120.getGeneration()) {");
    gold.append("\n        if (__item.f120.get().has()) {");
    gold.append("\n          Double __maybeElement154 = (Double)(__item.f120.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement155 = __df120.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement155.show(__maybeElement154, __obj.planField(\"f120\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df120.hide(__obj.planField(\"f120\"));");
    gold.append("\n        }");
    gold.append("\n        __gf120 = __item.f120.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf121 != __item.f121.getGeneration()) {");
    gold.append("\n        if (__item.f121.get().has()) {");
    gold.append("\n          Double __maybeElement156 = (Double)(__item.f121.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement157 = __df121.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement157.show(__maybeElement156, __obj.planField(\"f121\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df121.hide(__obj.planField(\"f121\"));");
    gold.append("\n        }");
    gold.append("\n        __gf121 = __item.f121.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf122 != __item.f122.getGeneration()) {");
    gold.append("\n        __df122.show(__item.f122.get(), __obj.planField(\"f122\"));");
    gold.append("\n        __gf122 = __item.f122.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf123 != __item.f123.getGeneration()) {");
    gold.append("\n        if (__item.f123.get().has()) {");
    gold.append("\n          NtComplex __maybeElement158 = (NtComplex)(__item.f123.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement159 = __df123.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement159.show(__maybeElement158, __obj.planField(\"f123\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df123.hide(__obj.planField(\"f123\"));");
    gold.append("\n        }");
    gold.append("\n        __gf123 = __item.f123.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf124 != __item.f124.getGeneration()) {");
    gold.append("\n        if (__item.f124.get().has()) {");
    gold.append("\n          NtComplex __maybeElement160 = (NtComplex)(__item.f124.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement161 = __df124.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement161.show(__maybeElement160, __obj.planField(\"f124\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df124.hide(__obj.planField(\"f124\"));");
    gold.append("\n        }");
    gold.append("\n        __gf124 = __item.f124.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf125 != __item.f125.getGeneration()) {");
    gold.append("\n        __df125.show(__item.f125.get(), __obj.planField(\"f125\"));");
    gold.append("\n        __gf125 = __item.f125.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf126 != __item.f126.getGeneration()) {");
    gold.append("\n        __df126.show(__item.f126.get(), __obj.planField(\"f126\"));");
    gold.append("\n        __gf126 = __item.f126.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf127 != __item.f127.getGeneration()) {");
    gold.append("\n        __df127.show(__item.f127.get(), __obj.planField(\"f127\"));");
    gold.append("\n        __gf127 = __item.f127.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf128 != __item.f128.getGeneration()) {");
    gold.append("\n        __df128.show(__item.f128.get(), __obj.planField(\"f128\"));");
    gold.append("\n        __gf128 = __item.f128.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf129 != __item.f129.getGeneration()) {");
    gold.append("\n        if (__item.f129.get().has()) {");
    gold.append("\n          NtComplex __maybeElement162 = (NtComplex)(__item.f129.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement163 = __df129.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement163.show(__maybeElement162, __obj.planField(\"f129\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df129.hide(__obj.planField(\"f129\"));");
    gold.append("\n        }");
    gold.append("\n        __gf129 = __item.f129.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf130 != __item.f130.getGeneration()) {");
    gold.append("\n        __df130.show(__item.f130.get(), __obj.planField(\"f130\"));");
    gold.append("\n        __gf130 = __item.f130.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf131 != __item.f131.getGeneration()) {");
    gold.append("\n        __df131.show(__item.f131.get(), __obj.planField(\"f131\"));");
    gold.append("\n        __gf131 = __item.f131.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf132 != __item.f132.getGeneration()) {");
    gold.append("\n        __df132.show(__item.f132.get(), __obj.planField(\"f132\"));");
    gold.append("\n        __gf132 = __item.f132.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf133 != __item.f133.getGeneration()) {");
    gold.append("\n        if (__item.f133.get().has()) {");
    gold.append("\n          Double __maybeElement164 = (Double)(__item.f133.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement165 = __df133.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement165.show(__maybeElement164, __obj.planField(\"f133\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df133.hide(__obj.planField(\"f133\"));");
    gold.append("\n        }");
    gold.append("\n        __gf133 = __item.f133.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf134 != __item.f134.getGeneration()) {");
    gold.append("\n        if (__item.f134.get().has()) {");
    gold.append("\n          Double __maybeElement166 = (Double)(__item.f134.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement167 = __df134.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement167.show(__maybeElement166, __obj.planField(\"f134\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df134.hide(__obj.planField(\"f134\"));");
    gold.append("\n        }");
    gold.append("\n        __gf134 = __item.f134.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf135 != __item.f135.getGeneration()) {");
    gold.append("\n        __df135.show(__item.f135.get(), __obj.planField(\"f135\"));");
    gold.append("\n        __gf135 = __item.f135.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf136 != __item.f136.getGeneration()) {");
    gold.append("\n        if (__item.f136.get().has()) {");
    gold.append("\n          NtComplex __maybeElement168 = (NtComplex)(__item.f136.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement169 = __df136.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement169.show(__maybeElement168, __obj.planField(\"f136\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df136.hide(__obj.planField(\"f136\"));");
    gold.append("\n        }");
    gold.append("\n        __gf136 = __item.f136.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf137 != __item.f137.getGeneration()) {");
    gold.append("\n        if (__item.f137.get().has()) {");
    gold.append("\n          NtComplex __maybeElement170 = (NtComplex)(__item.f137.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement171 = __df137.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement171.show(__maybeElement170, __obj.planField(\"f137\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df137.hide(__obj.planField(\"f137\"));");
    gold.append("\n        }");
    gold.append("\n        __gf137 = __item.f137.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf138 != __item.f138.getGeneration()) {");
    gold.append("\n        __df138.show(__item.f138.get(), __obj.planField(\"f138\"));");
    gold.append("\n        __gf138 = __item.f138.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf139 != __item.f139.getGeneration()) {");
    gold.append("\n        __df139.show(__item.f139.get(), __obj.planField(\"f139\"));");
    gold.append("\n        __gf139 = __item.f139.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf140 != __item.f140.getGeneration()) {");
    gold.append("\n        __df140.show(__item.f140.get(), __obj.planField(\"f140\"));");
    gold.append("\n        __gf140 = __item.f140.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf141 != __item.f141.getGeneration()) {");
    gold.append("\n        __df141.show(__item.f141.get(), __obj.planField(\"f141\"));");
    gold.append("\n        __gf141 = __item.f141.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf142 != __item.f142.getGeneration()) {");
    gold.append("\n        if (__item.f142.get().has()) {");
    gold.append("\n          NtComplex __maybeElement172 = (NtComplex)(__item.f142.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement173 = __df142.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement173.show(__maybeElement172, __obj.planField(\"f142\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df142.hide(__obj.planField(\"f142\"));");
    gold.append("\n        }");
    gold.append("\n        __gf142 = __item.f142.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf143 != __item.f143.getGeneration()) {");
    gold.append("\n        __df143.show(__item.f143.get(), __obj.planField(\"f143\"));");
    gold.append("\n        __gf143 = __item.f143.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf144 != __item.f144.getGeneration()) {");
    gold.append("\n        __df144.show(__item.f144.get(), __obj.planField(\"f144\"));");
    gold.append("\n        __gf144 = __item.f144.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf145 != __item.f145.getGeneration()) {");
    gold.append("\n        __df145.show(__item.f145.get(), __obj.planField(\"f145\"));");
    gold.append("\n        __gf145 = __item.f145.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf146 != __item.f146.getGeneration()) {");
    gold.append("\n        if (__item.f146.get().has()) {");
    gold.append("\n          NtComplex __maybeElement174 = (NtComplex)(__item.f146.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement175 = __df146.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement175.show(__maybeElement174, __obj.planField(\"f146\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df146.hide(__obj.planField(\"f146\"));");
    gold.append("\n        }");
    gold.append("\n        __gf146 = __item.f146.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf147 != __item.f147.getGeneration()) {");
    gold.append("\n        if (__item.f147.get().has()) {");
    gold.append("\n          NtComplex __maybeElement176 = (NtComplex)(__item.f147.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement177 = __df147.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement177.show(__maybeElement176, __obj.planField(\"f147\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df147.hide(__obj.planField(\"f147\"));");
    gold.append("\n        }");
    gold.append("\n        __gf147 = __item.f147.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf148 != __item.f148.getGeneration()) {");
    gold.append("\n        __df148.show(__item.f148.get(), __obj.planField(\"f148\"));");
    gold.append("\n        __gf148 = __item.f148.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf149 != __item.f149.getGeneration()) {");
    gold.append("\n        if (__item.f149.get().has()) {");
    gold.append("\n          NtComplex __maybeElement178 = (NtComplex)(__item.f149.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement179 = __df149.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement179.show(__maybeElement178, __obj.planField(\"f149\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df149.hide(__obj.planField(\"f149\"));");
    gold.append("\n        }");
    gold.append("\n        __gf149 = __item.f149.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf150 != __item.f150.getGeneration()) {");
    gold.append("\n        if (__item.f150.get().has()) {");
    gold.append("\n          NtComplex __maybeElement180 = (NtComplex)(__item.f150.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement181 = __df150.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement181.show(__maybeElement180, __obj.planField(\"f150\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df150.hide(__obj.planField(\"f150\"));");
    gold.append("\n        }");
    gold.append("\n        __gf150 = __item.f150.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf151 != __item.f151.getGeneration()) {");
    gold.append("\n        __df151.show(__item.f151.get(), __obj.planField(\"f151\"));");
    gold.append("\n        __gf151 = __item.f151.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf152 != __item.f152.getGeneration()) {");
    gold.append("\n        __df152.show(__item.f152.get(), __obj.planField(\"f152\"));");
    gold.append("\n        __gf152 = __item.f152.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf153 != __item.f153.getGeneration()) {");
    gold.append("\n        __df153.show(__item.f153.get(), __obj.planField(\"f153\"));");
    gold.append("\n        __gf153 = __item.f153.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf154 != __item.f154.getGeneration()) {");
    gold.append("\n        __df154.show(__item.f154.get(), __obj.planField(\"f154\"));");
    gold.append("\n        __gf154 = __item.f154.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf155 != __item.f155.getGeneration()) {");
    gold.append("\n        if (__item.f155.get().has()) {");
    gold.append("\n          NtComplex __maybeElement182 = (NtComplex)(__item.f155.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement183 = __df155.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement183.show(__maybeElement182, __obj.planField(\"f155\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df155.hide(__obj.planField(\"f155\"));");
    gold.append("\n        }");
    gold.append("\n        __gf155 = __item.f155.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf156 != __item.f156.getGeneration()) {");
    gold.append("\n        if (__item.f156.get().has()) {");
    gold.append("\n          NtComplex __maybeElement184 = (NtComplex)(__item.f156.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement185 = __df156.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement185.show(__maybeElement184, __obj.planField(\"f156\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df156.hide(__obj.planField(\"f156\"));");
    gold.append("\n        }");
    gold.append("\n        __gf156 = __item.f156.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf157 != __item.f157.getGeneration()) {");
    gold.append("\n        if (__item.f157.get().has()) {");
    gold.append("\n          NtComplex __maybeElement186 = (NtComplex)(__item.f157.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement187 = __df157.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement187.show(__maybeElement186, __obj.planField(\"f157\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df157.hide(__obj.planField(\"f157\"));");
    gold.append("\n        }");
    gold.append("\n        __gf157 = __item.f157.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf158 != __item.f158.getGeneration()) {");
    gold.append("\n        if (__item.f158.get().has()) {");
    gold.append("\n          NtComplex __maybeElement188 = (NtComplex)(__item.f158.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement189 = __df158.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement189.show(__maybeElement188, __obj.planField(\"f158\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df158.hide(__obj.planField(\"f158\"));");
    gold.append("\n        }");
    gold.append("\n        __gf158 = __item.f158.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf159 != __item.f159.getGeneration()) {");
    gold.append("\n        if (__item.f159.get().has()) {");
    gold.append("\n          NtComplex __maybeElement190 = (NtComplex)(__item.f159.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement191 = __df159.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement191.show(__maybeElement190, __obj.planField(\"f159\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df159.hide(__obj.planField(\"f159\"));");
    gold.append("\n        }");
    gold.append("\n        __gf159 = __item.f159.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf160 != __item.f160.getGeneration()) {");
    gold.append("\n        if (__item.f160.get().has()) {");
    gold.append("\n          NtComplex __maybeElement192 = (NtComplex)(__item.f160.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement193 = __df160.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement193.show(__maybeElement192, __obj.planField(\"f160\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df160.hide(__obj.planField(\"f160\"));");
    gold.append("\n        }");
    gold.append("\n        __gf160 = __item.f160.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf161 != __item.f161.getGeneration()) {");
    gold.append("\n        if (__item.f161.get().has()) {");
    gold.append("\n          NtComplex __maybeElement194 = (NtComplex)(__item.f161.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement195 = __df161.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement195.show(__maybeElement194, __obj.planField(\"f161\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df161.hide(__obj.planField(\"f161\"));");
    gold.append("\n        }");
    gold.append("\n        __gf161 = __item.f161.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf162 != __item.f162.getGeneration()) {");
    gold.append("\n        if (__item.f162.get().has()) {");
    gold.append("\n          NtComplex __maybeElement196 = (NtComplex)(__item.f162.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement197 = __df162.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement197.show(__maybeElement196, __obj.planField(\"f162\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df162.hide(__obj.planField(\"f162\"));");
    gold.append("\n        }");
    gold.append("\n        __gf162 = __item.f162.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf163 != __item.f163.getGeneration()) {");
    gold.append("\n        if (__item.f163.get().has()) {");
    gold.append("\n          NtComplex __maybeElement198 = (NtComplex)(__item.f163.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement199 = __df163.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement199.show(__maybeElement198, __obj.planField(\"f163\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df163.hide(__obj.planField(\"f163\"));");
    gold.append("\n        }");
    gold.append("\n        __gf163 = __item.f163.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf164 != __item.f164.getGeneration()) {");
    gold.append("\n        if (__item.f164.get().has()) {");
    gold.append("\n          NtComplex __maybeElement200 = (NtComplex)(__item.f164.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement201 = __df164.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement201.show(__maybeElement200, __obj.planField(\"f164\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df164.hide(__obj.planField(\"f164\"));");
    gold.append("\n        }");
    gold.append("\n        __gf164 = __item.f164.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf165 != __item.f165.getGeneration()) {");
    gold.append("\n        if (__item.f165.get().has()) {");
    gold.append("\n          NtComplex __maybeElement202 = (NtComplex)(__item.f165.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement203 = __df165.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement203.show(__maybeElement202, __obj.planField(\"f165\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df165.hide(__obj.planField(\"f165\"));");
    gold.append("\n        }");
    gold.append("\n        __gf165 = __item.f165.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf166 != __item.f166.getGeneration()) {");
    gold.append("\n        if (__item.f166.get().has()) {");
    gold.append("\n          NtComplex __maybeElement204 = (NtComplex)(__item.f166.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement205 = __df166.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement205.show(__maybeElement204, __obj.planField(\"f166\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df166.hide(__obj.planField(\"f166\"));");
    gold.append("\n        }");
    gold.append("\n        __gf166 = __item.f166.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf167 != __item.f167.getGeneration()) {");
    gold.append("\n        if (__item.f167.get().has()) {");
    gold.append("\n          NtComplex __maybeElement206 = (NtComplex)(__item.f167.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement207 = __df167.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement207.show(__maybeElement206, __obj.planField(\"f167\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df167.hide(__obj.planField(\"f167\"));");
    gold.append("\n        }");
    gold.append("\n        __gf167 = __item.f167.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf168 != __item.f168.getGeneration()) {");
    gold.append("\n        if (__item.f168.get().has()) {");
    gold.append("\n          NtComplex __maybeElement208 = (NtComplex)(__item.f168.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement209 = __df168.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement209.show(__maybeElement208, __obj.planField(\"f168\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df168.hide(__obj.planField(\"f168\"));");
    gold.append("\n        }");
    gold.append("\n        __gf168 = __item.f168.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf169 != __item.f169.getGeneration()) {");
    gold.append("\n        __df169.show(__item.f169.get(), __obj.planField(\"f169\"));");
    gold.append("\n        __gf169 = __item.f169.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf170 != __item.f170.getGeneration()) {");
    gold.append("\n        __df170.show(__item.f170.get(), __obj.planField(\"f170\"));");
    gold.append("\n        __gf170 = __item.f170.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    OperationsMultiplyCases_6 __self = this;");
    gold.append("\n    DeltaOperationsMultiplyCases_6 __state = new DeltaOperationsMultiplyCases_6();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, NtMessageBase message) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"f0\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f1\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f3\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f4\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f5\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f6\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f7\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f8\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f9\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f10\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f11\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f12\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f13\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f14\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f15\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f16\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f17\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f18\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f19\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f20\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f21\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f22\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f23\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f24\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f25\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f26\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f27\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f28\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f29\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f30\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f31\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f32\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f33\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f34\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f35\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f36\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f37\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f38\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f39\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f40\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f41\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f42\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f43\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f44\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f45\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f46\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f47\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f48\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f49\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f50\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f51\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f52\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f53\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f54\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f55\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f56\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f57\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f58\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f59\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f60\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f61\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f62\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f63\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f64\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f65\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f66\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f67\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f68\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f69\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f70\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f71\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f72\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f73\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f74\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f75\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f76\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f77\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f78\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f79\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f80\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f81\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f82\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f83\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f84\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f85\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f86\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f87\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f88\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f89\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f90\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f91\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f92\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f93\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f94\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f95\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f96\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f97\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f98\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f99\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f100\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f101\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f102\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f103\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f104\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f105\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f106\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f107\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f108\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f109\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f110\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f111\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f112\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f113\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f114\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f115\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f116\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f117\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f118\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f119\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f120\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f121\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f122\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f123\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f124\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f125\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f126\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f127\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f128\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f129\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f130\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f131\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f132\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f133\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f134\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f135\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f136\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f137\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f138\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f139\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f140\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f141\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f142\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f143\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f144\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f145\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f146\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f147\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f148\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f149\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f150\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f151\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f152\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f153\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f154\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f155\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f156\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f157\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f158\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f159\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f160\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f161\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f162\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f163\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f164\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f165\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f166\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f167\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f168\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f169\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"f170\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:7224");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"f0\":1,\"f1\":\"1\",\"f2\":0.5,\"f3\":0.5,\"f5\":{\"r\":0.0,\"i\":1.0},\"f6\":{\"r\":0.0,\"i\":-1.0},\"f8\":0,\"f9\":\"0\",\"f10\":0.0,\"f11\":{\"r\":0.0,\"i\":0.0},\"f13\":\"1\",\"f14\":\"1\",\"f15\":0.5,\"f16\":0.5,\"f18\":{\"r\":0.0,\"i\":1.0},\"f19\":{\"r\":0.0,\"i\":-1.0},\"f21\":\"0\",\"f22\":\"0\",\"f23\":0.0,\"f24\":{\"r\":0.0,\"i\":0.0},\"f26\":0.5,\"f27\":0.5,\"f28\":0.25,\"f29\":0.25,\"f31\":{\"r\":0.0,\"i\":0.5},\"f32\":{\"r\":0.0,\"i\":-0.5},\"f34\":0.0,\"f35\":0.0,\"f36\":0.0,\"f37\":{\"r\":0.0,\"i\":0.0},\"f39\":0.5,\"f40\":0.5,\"f41\":0.25,\"f42\":0.25,\"f44\":{\"r\":0.0,\"i\":0.5},\"f45\":{\"r\":0.0,\"i\":-0.5},\"f47\":0.0,\"f48\":0.0,\"f49\":0.0,\"f50\":{\"r\":0.0,\"i\":0.0},\"f65\":{\"r\":0.0,\"i\":1.0},\"f66\":{\"r\":0.0,\"i\":1.0},\"f67\":{\"r\":0.0,\"i\":0.5},\"f68\":{\"r\":0.0,\"i\":0.5},\"f70\":{\"r\":-1.0,\"i\":0.0},\"f71\":{\"r\":1.0,\"i\":0.0},\"f73\":{\"r\":0.0,\"i\":0.0},\"f74\":{\"r\":0.0,\"i\":0.0},\"f75\":{\"r\":0.0,\"i\":0.0},\"f76\":{\"r\":0.0,\"i\":0.0},\"f78\":{\"r\":0.0,\"i\":-1.0},\"f79\":{\"r\":0.0,\"i\":-1.0},\"f80\":{\"r\":0.0,\"i\":-0.5},\"f81\":{\"r\":0.0,\"i\":-0.5},\"f83\":{\"r\":1.0,\"i\":0.0},\"f84\":{\"r\":-1.0,\"i\":-0.0},\"f86\":{\"r\":0.0,\"i\":-0.0},\"f87\":{\"r\":0.0,\"i\":-0.0},\"f88\":{\"r\":0.0,\"i\":-0.0},\"f89\":{\"r\":0.0,\"i\":0.0},\"f104\":0,\"f105\":\"0\",\"f106\":0.0,\"f107\":0.0,\"f109\":{\"r\":0.0,\"i\":0.0},\"f110\":{\"r\":0.0,\"i\":-0.0},\"f112\":0,\"f113\":\"0\",\"f114\":0.0,\"f115\":{\"r\":0.0,\"i\":0.0},\"f117\":\"0\",\"f118\":\"0\",\"f119\":0.0,\"f120\":0.0,\"f122\":{\"r\":0.0,\"i\":0.0},\"f123\":{\"r\":0.0,\"i\":-0.0},\"f125\":\"0\",\"f126\":\"0\",\"f127\":0.0,\"f128\":{\"r\":0.0,\"i\":0.0},\"f130\":0.0,\"f131\":0.0,\"f132\":0.0,\"f133\":0.0,\"f135\":{\"r\":0.0,\"i\":0.0},\"f136\":{\"r\":0.0,\"i\":-0.0},\"f138\":0.0,\"f139\":0.0,\"f140\":0.0,\"f141\":{\"r\":0.0,\"i\":0.0},\"f143\":{\"r\":0.0,\"i\":0.0},\"f144\":{\"r\":0.0,\"i\":0.0},\"f145\":{\"r\":0.0,\"i\":0.0},\"f146\":{\"r\":0.0,\"i\":0.0},\"f148\":{\"r\":0.0,\"i\":0.0},\"f149\":{\"r\":0.0,\"i\":0.0},\"f151\":{\"r\":0.0,\"i\":0.0},\"f152\":{\"r\":0.0,\"i\":0.0},\"f153\":{\"r\":0.0,\"i\":0.0},\"f154\":{\"r\":0.0,\"i\":0.0},\"f169\":\"xxx\",\"f170\":\"xxx\"},\"seq\":2}");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"f0\":1,\"f1\":\"1\",\"f2\":0.5,\"f3\":0.5,\"f5\":{\"r\":0.0,\"i\":1.0},\"f6\":{\"r\":0.0,\"i\":-1.0},\"f8\":0,\"f9\":\"0\",\"f10\":0.0,\"f11\":{\"r\":0.0,\"i\":0.0},\"f13\":\"1\",\"f14\":\"1\",\"f15\":0.5,\"f16\":0.5,\"f18\":{\"r\":0.0,\"i\":1.0},\"f19\":{\"r\":0.0,\"i\":-1.0},\"f21\":\"0\",\"f22\":\"0\",\"f23\":0.0,\"f24\":{\"r\":0.0,\"i\":0.0},\"f26\":0.5,\"f27\":0.5,\"f28\":0.25,\"f29\":0.25,\"f31\":{\"r\":0.0,\"i\":0.5},\"f32\":{\"r\":0.0,\"i\":-0.5},\"f34\":0.0,\"f35\":0.0,\"f36\":0.0,\"f37\":{\"r\":0.0,\"i\":0.0},\"f39\":0.5,\"f40\":0.5,\"f41\":0.25,\"f42\":0.25,\"f44\":{\"r\":0.0,\"i\":0.5},\"f45\":{\"r\":0.0,\"i\":-0.5},\"f47\":0.0,\"f48\":0.0,\"f49\":0.0,\"f50\":{\"r\":0.0,\"i\":0.0},\"f65\":{\"r\":0.0,\"i\":1.0},\"f66\":{\"r\":0.0,\"i\":1.0},\"f67\":{\"r\":0.0,\"i\":0.5},\"f68\":{\"r\":0.0,\"i\":0.5},\"f70\":{\"r\":-1.0,\"i\":0.0},\"f71\":{\"r\":1.0,\"i\":0.0},\"f73\":{\"r\":0.0,\"i\":0.0},\"f74\":{\"r\":0.0,\"i\":0.0},\"f75\":{\"r\":0.0,\"i\":0.0},\"f76\":{\"r\":0.0,\"i\":0.0},\"f78\":{\"r\":0.0,\"i\":-1.0},\"f79\":{\"r\":0.0,\"i\":-1.0},\"f80\":{\"r\":0.0,\"i\":-0.5},\"f81\":{\"r\":0.0,\"i\":-0.5},\"f83\":{\"r\":1.0,\"i\":0.0},\"f84\":{\"r\":-1.0,\"i\":-0.0},\"f86\":{\"r\":0.0,\"i\":-0.0},\"f87\":{\"r\":0.0,\"i\":-0.0},\"f88\":{\"r\":0.0,\"i\":-0.0},\"f89\":{\"r\":0.0,\"i\":0.0},\"f104\":0,\"f105\":\"0\",\"f106\":0.0,\"f107\":0.0,\"f109\":{\"r\":0.0,\"i\":0.0},\"f110\":{\"r\":0.0,\"i\":-0.0},\"f112\":0,\"f113\":\"0\",\"f114\":0.0,\"f115\":{\"r\":0.0,\"i\":0.0},\"f117\":\"0\",\"f118\":\"0\",\"f119\":0.0,\"f120\":0.0,\"f122\":{\"r\":0.0,\"i\":0.0},\"f123\":{\"r\":0.0,\"i\":-0.0},\"f125\":\"0\",\"f126\":\"0\",\"f127\":0.0,\"f128\":{\"r\":0.0,\"i\":0.0},\"f130\":0.0,\"f131\":0.0,\"f132\":0.0,\"f133\":0.0,\"f135\":{\"r\":0.0,\"i\":0.0},\"f136\":{\"r\":0.0,\"i\":-0.0},\"f138\":0.0,\"f139\":0.0,\"f140\":0.0,\"f141\":{\"r\":0.0,\"i\":0.0},\"f143\":{\"r\":0.0,\"i\":0.0},\"f144\":{\"r\":0.0,\"i\":0.0},\"f145\":{\"r\":0.0,\"i\":0.0},\"f146\":{\"r\":0.0,\"i\":0.0},\"f148\":{\"r\":0.0,\"i\":0.0},\"f149\":{\"r\":0.0,\"i\":0.0},\"f151\":{\"r\":0.0,\"i\":0.0},\"f152\":{\"r\":0.0,\"i\":0.0},\"f153\":{\"r\":0.0,\"i\":0.0},\"f154\":{\"r\":0.0,\"i\":0.0},\"f169\":\"xxx\",\"f170\":\"xxx\"},\"seq\":3}");
    gold.append("\nRANDO was DENIED:");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nMEMORY:24742");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_OperationsSubtractionCases_7 = null;
  private String get_OperationsSubtractionCases_7() {
    if (cached_OperationsSubtractionCases_7 != null) {
      return cached_OperationsSubtractionCases_7;
    }
    cached_OperationsSubtractionCases_7 = generateTestOutput(true, "OperationsSubtractionCases_7", "./test_code/BinaryExpression_OperationsSubtractionCases_success.a");
    return cached_OperationsSubtractionCases_7;
  }

  @Test
  public void testOperationsSubtractionCasesEmission() {
    assertEmissionGood(get_OperationsSubtractionCases_7());
  }

  @Test
  public void testOperationsSubtractionCasesSuccess() {
    assertLivePass(get_OperationsSubtractionCases_7());
  }

  @Test
  public void testOperationsSubtractionCasesGoodWillHappy() {
    assertGoodWillHappy(get_OperationsSubtractionCases_7());
  }

  @Test
  public void testOperationsSubtractionCasesExceptionFree() {
    assertExceptionFree(get_OperationsSubtractionCases_7());
  }

  @Test
  public void testOperationsSubtractionCasesTODOFree() {
    assertTODOFree(get_OperationsSubtractionCases_7());
  }

  @Test
  public void stable_OperationsSubtractionCases_7() {
    String live = get_OperationsSubtractionCases_7();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_OperationsSubtractionCases_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class OperationsSubtractionCases_7 extends LivingDocument {");
    gold.append("\n  private final RxLazy<Integer> f0;");
    gold.append("\n  private final RxLazy<Long> f1;");
    gold.append("\n  private final RxLazy<Double> f2;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f3;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f4;");
    gold.append("\n  private final RxLazy<NtComplex> f5;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f6;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f7;");
    gold.append("\n  private final RxLazy<Integer> f8;");
    gold.append("\n  private final RxLazy<Long> f9;");
    gold.append("\n  private final RxLazy<Double> f10;");
    gold.append("\n  private final RxLazy<NtComplex> f11;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f12;");
    gold.append("\n  private final RxLazy<Long> f13;");
    gold.append("\n  private final RxLazy<Long> f14;");
    gold.append("\n  private final RxLazy<Double> f15;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f16;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f17;");
    gold.append("\n  private final RxLazy<NtComplex> f18;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f19;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f20;");
    gold.append("\n  private final RxLazy<Long> f21;");
    gold.append("\n  private final RxLazy<Long> f22;");
    gold.append("\n  private final RxLazy<Double> f23;");
    gold.append("\n  private final RxLazy<NtComplex> f24;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f25;");
    gold.append("\n  private final RxLazy<Double> f26;");
    gold.append("\n  private final RxLazy<Double> f27;");
    gold.append("\n  private final RxLazy<Double> f28;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f29;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f30;");
    gold.append("\n  private final RxLazy<NtComplex> f31;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f32;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f33;");
    gold.append("\n  private final RxLazy<Double> f34;");
    gold.append("\n  private final RxLazy<Double> f35;");
    gold.append("\n  private final RxLazy<Double> f36;");
    gold.append("\n  private final RxLazy<NtComplex> f37;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f38;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f39;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f40;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f41;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f42;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f43;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f44;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f45;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f46;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f47;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f48;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f49;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f50;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f51;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f52;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f53;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f54;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f55;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f56;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f57;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f58;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f59;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f60;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f61;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f62;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f63;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f64;");
    gold.append("\n  private final RxLazy<NtComplex> f65;");
    gold.append("\n  private final RxLazy<NtComplex> f66;");
    gold.append("\n  private final RxLazy<NtComplex> f67;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f68;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f69;");
    gold.append("\n  private final RxLazy<NtComplex> f70;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f71;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f72;");
    gold.append("\n  private final RxLazy<NtComplex> f73;");
    gold.append("\n  private final RxLazy<NtComplex> f74;");
    gold.append("\n  private final RxLazy<NtComplex> f75;");
    gold.append("\n  private final RxLazy<NtComplex> f76;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f77;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f78;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f79;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f80;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f81;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f82;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f83;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f84;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f85;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f86;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f87;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f88;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f89;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f90;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f91;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f92;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f93;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f94;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f95;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f96;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f97;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f98;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f99;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f100;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f101;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f102;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f103;");
    gold.append("\n  private final RxLazy<Integer> f104;");
    gold.append("\n  private final RxLazy<Long> f105;");
    gold.append("\n  private final RxLazy<Double> f106;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f107;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f108;");
    gold.append("\n  private final RxLazy<NtComplex> f109;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f110;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f111;");
    gold.append("\n  private final RxLazy<Integer> f112;");
    gold.append("\n  private final RxLazy<Long> f113;");
    gold.append("\n  private final RxLazy<Double> f114;");
    gold.append("\n  private final RxLazy<NtComplex> f115;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f116;");
    gold.append("\n  private final RxLazy<Long> f117;");
    gold.append("\n  private final RxLazy<Long> f118;");
    gold.append("\n  private final RxLazy<Double> f119;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f120;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f121;");
    gold.append("\n  private final RxLazy<NtComplex> f122;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f123;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f124;");
    gold.append("\n  private final RxLazy<Long> f125;");
    gold.append("\n  private final RxLazy<Long> f126;");
    gold.append("\n  private final RxLazy<Double> f127;");
    gold.append("\n  private final RxLazy<NtComplex> f128;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f129;");
    gold.append("\n  private final RxLazy<Double> f130;");
    gold.append("\n  private final RxLazy<Double> f131;");
    gold.append("\n  private final RxLazy<Double> f132;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f133;");
    gold.append("\n  private final RxLazy<NtMaybe<Double>> f134;");
    gold.append("\n  private final RxLazy<NtComplex> f135;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f136;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f137;");
    gold.append("\n  private final RxLazy<Double> f138;");
    gold.append("\n  private final RxLazy<Double> f139;");
    gold.append("\n  private final RxLazy<Double> f140;");
    gold.append("\n  private final RxLazy<NtComplex> f141;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f142;");
    gold.append("\n  private final RxLazy<NtComplex> f143;");
    gold.append("\n  private final RxLazy<NtComplex> f144;");
    gold.append("\n  private final RxLazy<NtComplex> f145;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f146;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f147;");
    gold.append("\n  private final RxLazy<NtComplex> f148;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f149;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f150;");
    gold.append("\n  private final RxLazy<NtComplex> f151;");
    gold.append("\n  private final RxLazy<NtComplex> f152;");
    gold.append("\n  private final RxLazy<NtComplex> f153;");
    gold.append("\n  private final RxLazy<NtComplex> f154;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f155;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f156;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f157;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f158;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f159;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f160;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f161;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f162;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f163;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f164;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f165;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f166;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f167;");
    gold.append("\n  private final RxLazy<NtMaybe<NtComplex>> f168;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += f0.__memory();");
    gold.append("\n    __sum += f1.__memory();");
    gold.append("\n    __sum += f2.__memory();");
    gold.append("\n    __sum += f3.__memory();");
    gold.append("\n    __sum += f4.__memory();");
    gold.append("\n    __sum += f5.__memory();");
    gold.append("\n    __sum += f6.__memory();");
    gold.append("\n    __sum += f7.__memory();");
    gold.append("\n    __sum += f8.__memory();");
    gold.append("\n    __sum += f9.__memory();");
    gold.append("\n    __sum += f10.__memory();");
    gold.append("\n    __sum += f11.__memory();");
    gold.append("\n    __sum += f12.__memory();");
    gold.append("\n    __sum += f13.__memory();");
    gold.append("\n    __sum += f14.__memory();");
    gold.append("\n    __sum += f15.__memory();");
    gold.append("\n    __sum += f16.__memory();");
    gold.append("\n    __sum += f17.__memory();");
    gold.append("\n    __sum += f18.__memory();");
    gold.append("\n    __sum += f19.__memory();");
    gold.append("\n    __sum += f20.__memory();");
    gold.append("\n    __sum += f21.__memory();");
    gold.append("\n    __sum += f22.__memory();");
    gold.append("\n    __sum += f23.__memory();");
    gold.append("\n    __sum += f24.__memory();");
    gold.append("\n    __sum += f25.__memory();");
    gold.append("\n    __sum += f26.__memory();");
    gold.append("\n    __sum += f27.__memory();");
    gold.append("\n    __sum += f28.__memory();");
    gold.append("\n    __sum += f29.__memory();");
    gold.append("\n    __sum += f30.__memory();");
    gold.append("\n    __sum += f31.__memory();");
    gold.append("\n    __sum += f32.__memory();");
    gold.append("\n    __sum += f33.__memory();");
    gold.append("\n    __sum += f34.__memory();");
    gold.append("\n    __sum += f35.__memory();");
    gold.append("\n    __sum += f36.__memory();");
    gold.append("\n    __sum += f37.__memory();");
    gold.append("\n    __sum += f38.__memory();");
    gold.append("\n    __sum += f39.__memory();");
    gold.append("\n    __sum += f40.__memory();");
    gold.append("\n    __sum += f41.__memory();");
    gold.append("\n    __sum += f42.__memory();");
    gold.append("\n    __sum += f43.__memory();");
    gold.append("\n    __sum += f44.__memory();");
    gold.append("\n    __sum += f45.__memory();");
    gold.append("\n    __sum += f46.__memory();");
    gold.append("\n    __sum += f47.__memory();");
    gold.append("\n    __sum += f48.__memory();");
    gold.append("\n    __sum += f49.__memory();");
    gold.append("\n    __sum += f50.__memory();");
    gold.append("\n    __sum += f51.__memory();");
    gold.append("\n    __sum += f52.__memory();");
    gold.append("\n    __sum += f53.__memory();");
    gold.append("\n    __sum += f54.__memory();");
    gold.append("\n    __sum += f55.__memory();");
    gold.append("\n    __sum += f56.__memory();");
    gold.append("\n    __sum += f57.__memory();");
    gold.append("\n    __sum += f58.__memory();");
    gold.append("\n    __sum += f59.__memory();");
    gold.append("\n    __sum += f60.__memory();");
    gold.append("\n    __sum += f61.__memory();");
    gold.append("\n    __sum += f62.__memory();");
    gold.append("\n    __sum += f63.__memory();");
    gold.append("\n    __sum += f64.__memory();");
    gold.append("\n    __sum += f65.__memory();");
    gold.append("\n    __sum += f66.__memory();");
    gold.append("\n    __sum += f67.__memory();");
    gold.append("\n    __sum += f68.__memory();");
    gold.append("\n    __sum += f69.__memory();");
    gold.append("\n    __sum += f70.__memory();");
    gold.append("\n    __sum += f71.__memory();");
    gold.append("\n    __sum += f72.__memory();");
    gold.append("\n    __sum += f73.__memory();");
    gold.append("\n    __sum += f74.__memory();");
    gold.append("\n    __sum += f75.__memory();");
    gold.append("\n    __sum += f76.__memory();");
    gold.append("\n    __sum += f77.__memory();");
    gold.append("\n    __sum += f78.__memory();");
    gold.append("\n    __sum += f79.__memory();");
    gold.append("\n    __sum += f80.__memory();");
    gold.append("\n    __sum += f81.__memory();");
    gold.append("\n    __sum += f82.__memory();");
    gold.append("\n    __sum += f83.__memory();");
    gold.append("\n    __sum += f84.__memory();");
    gold.append("\n    __sum += f85.__memory();");
    gold.append("\n    __sum += f86.__memory();");
    gold.append("\n    __sum += f87.__memory();");
    gold.append("\n    __sum += f88.__memory();");
    gold.append("\n    __sum += f89.__memory();");
    gold.append("\n    __sum += f90.__memory();");
    gold.append("\n    __sum += f91.__memory();");
    gold.append("\n    __sum += f92.__memory();");
    gold.append("\n    __sum += f93.__memory();");
    gold.append("\n    __sum += f94.__memory();");
    gold.append("\n    __sum += f95.__memory();");
    gold.append("\n    __sum += f96.__memory();");
    gold.append("\n    __sum += f97.__memory();");
    gold.append("\n    __sum += f98.__memory();");
    gold.append("\n    __sum += f99.__memory();");
    gold.append("\n    __sum += f100.__memory();");
    gold.append("\n    __sum += f101.__memory();");
    gold.append("\n    __sum += f102.__memory();");
    gold.append("\n    __sum += f103.__memory();");
    gold.append("\n    __sum += f104.__memory();");
    gold.append("\n    __sum += f105.__memory();");
    gold.append("\n    __sum += f106.__memory();");
    gold.append("\n    __sum += f107.__memory();");
    gold.append("\n    __sum += f108.__memory();");
    gold.append("\n    __sum += f109.__memory();");
    gold.append("\n    __sum += f110.__memory();");
    gold.append("\n    __sum += f111.__memory();");
    gold.append("\n    __sum += f112.__memory();");
    gold.append("\n    __sum += f113.__memory();");
    gold.append("\n    __sum += f114.__memory();");
    gold.append("\n    __sum += f115.__memory();");
    gold.append("\n    __sum += f116.__memory();");
    gold.append("\n    __sum += f117.__memory();");
    gold.append("\n    __sum += f118.__memory();");
    gold.append("\n    __sum += f119.__memory();");
    gold.append("\n    __sum += f120.__memory();");
    gold.append("\n    __sum += f121.__memory();");
    gold.append("\n    __sum += f122.__memory();");
    gold.append("\n    __sum += f123.__memory();");
    gold.append("\n    __sum += f124.__memory();");
    gold.append("\n    __sum += f125.__memory();");
    gold.append("\n    __sum += f126.__memory();");
    gold.append("\n    __sum += f127.__memory();");
    gold.append("\n    __sum += f128.__memory();");
    gold.append("\n    __sum += f129.__memory();");
    gold.append("\n    __sum += f130.__memory();");
    gold.append("\n    __sum += f131.__memory();");
    gold.append("\n    __sum += f132.__memory();");
    gold.append("\n    __sum += f133.__memory();");
    gold.append("\n    __sum += f134.__memory();");
    gold.append("\n    __sum += f135.__memory();");
    gold.append("\n    __sum += f136.__memory();");
    gold.append("\n    __sum += f137.__memory();");
    gold.append("\n    __sum += f138.__memory();");
    gold.append("\n    __sum += f139.__memory();");
    gold.append("\n    __sum += f140.__memory();");
    gold.append("\n    __sum += f141.__memory();");
    gold.append("\n    __sum += f142.__memory();");
    gold.append("\n    __sum += f143.__memory();");
    gold.append("\n    __sum += f144.__memory();");
    gold.append("\n    __sum += f145.__memory();");
    gold.append("\n    __sum += f146.__memory();");
    gold.append("\n    __sum += f147.__memory();");
    gold.append("\n    __sum += f148.__memory();");
    gold.append("\n    __sum += f149.__memory();");
    gold.append("\n    __sum += f150.__memory();");
    gold.append("\n    __sum += f151.__memory();");
    gold.append("\n    __sum += f152.__memory();");
    gold.append("\n    __sum += f153.__memory();");
    gold.append("\n    __sum += f154.__memory();");
    gold.append("\n    __sum += f155.__memory();");
    gold.append("\n    __sum += f156.__memory();");
    gold.append("\n    __sum += f157.__memory();");
    gold.append("\n    __sum += f158.__memory();");
    gold.append("\n    __sum += f159.__memory();");
    gold.append("\n    __sum += f160.__memory();");
    gold.append("\n    __sum += f161.__memory();");
    gold.append("\n    __sum += f162.__memory();");
    gold.append("\n    __sum += f163.__memory();");
    gold.append("\n    __sum += f164.__memory();");
    gold.append("\n    __sum += f165.__memory();");
    gold.append("\n    __sum += f166.__memory();");
    gold.append("\n    __sum += f167.__memory();");
    gold.append("\n    __sum += f168.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public OperationsSubtractionCases_7(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    f0 = new RxLazy<Integer>(this, () -> (1 - 1));");
    gold.append("\n    f1 = new RxLazy<Long>(this, () -> (1 - 1L));");
    gold.append("\n    f2 = new RxLazy<Double>(this, () -> (1 - 0.5));");
    gold.append("\n    f3 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.ImD(1, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f4 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.ImD(1, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f5 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.IC(1, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f6 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.ImC(1, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f7 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.ImC(1, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f8 = new RxLazy<Integer>(this, () -> (1 - 0));");
    gold.append("\n    f9 = new RxLazy<Long>(this, () -> (1 - 0L));");
    gold.append("\n    f10 = new RxLazy<Double>(this, () -> (1 - 0.0));");
    gold.append("\n    f11 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.IC(1, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f12 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.ImC(1, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f13 = new RxLazy<Long>(this, () -> (1L - 1));");
    gold.append("\n    f14 = new RxLazy<Long>(this, () -> (1L - 1L));");
    gold.append("\n    f15 = new RxLazy<Double>(this, () -> (1L - 0.5));");
    gold.append("\n    f16 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.LmD(1L, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f17 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.LmD(1L, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f18 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.LC(1L, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f19 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.LmC(1L, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f20 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.LmC(1L, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f21 = new RxLazy<Long>(this, () -> (1L - 0));");
    gold.append("\n    f22 = new RxLazy<Long>(this, () -> (1L - 0L));");
    gold.append("\n    f23 = new RxLazy<Double>(this, () -> (1L - 0.0));");
    gold.append("\n    f24 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.LC(1L, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f25 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.LmC(1L, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f26 = new RxLazy<Double>(this, () -> (0.5 - 1));");
    gold.append("\n    f27 = new RxLazy<Double>(this, () -> (0.5 - 1L));");
    gold.append("\n    f28 = new RxLazy<Double>(this, () -> (0.5 - 0.5));");
    gold.append("\n    f29 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.DmD(0.5, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f30 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.DmD(0.5, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f31 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.DC(0.5, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f32 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.DmC(0.5, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f33 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.DmC(0.5, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f34 = new RxLazy<Double>(this, () -> (0.5 - 0));");
    gold.append("\n    f35 = new RxLazy<Double>(this, () -> (0.5 - 0L));");
    gold.append("\n    f36 = new RxLazy<Double>(this, () -> (0.5 - 0.0));");
    gold.append("\n    f37 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.DC(0.5, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f38 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.DmC(0.5, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f39 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDI((LibArithmetic.Divide.II(1, 2)), 1)));");
    gold.append("\n    f40 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDL((LibArithmetic.Divide.II(1, 2)), 1L)));");
    gold.append("\n    f41 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDD((LibArithmetic.Divide.II(1, 2)), 0.5)));");
    gold.append("\n    f42 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDmD((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f43 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDmD((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f44 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mDC((LibArithmetic.Divide.II(1, 2)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f45 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mDmC((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f46 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mDmC((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f47 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDI((LibArithmetic.Divide.II(1, 2)), 0)));");
    gold.append("\n    f48 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDL((LibArithmetic.Divide.II(1, 2)), 0L)));");
    gold.append("\n    f49 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDD((LibArithmetic.Divide.II(1, 2)), 0.0)));");
    gold.append("\n    f50 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mDC((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f51 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mDmC((LibArithmetic.Divide.II(1, 2)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f52 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDI((LibArithmetic.Divide.II(1, 0)), 1)));");
    gold.append("\n    f53 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDL((LibArithmetic.Divide.II(1, 0)), 1L)));");
    gold.append("\n    f54 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDD((LibArithmetic.Divide.II(1, 0)), 0.5)));");
    gold.append("\n    f55 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDmD((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f56 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDmD((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f57 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mDC((LibArithmetic.Divide.II(1, 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f58 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mDmC((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f59 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mDmC((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f60 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDI((LibArithmetic.Divide.II(1, 0)), 0)));");
    gold.append("\n    f61 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDL((LibArithmetic.Divide.II(1, 0)), 0L)));");
    gold.append("\n    f62 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.mDD((LibArithmetic.Divide.II(1, 0)), 0.0)));");
    gold.append("\n    f63 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mDC((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f64 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mDmC((LibArithmetic.Divide.II(1, 0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f65 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CI(new NtComplex(0.0, 1.0), 1)));");
    gold.append("\n    f66 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CL(new NtComplex(0.0, 1.0), 1L)));");
    gold.append("\n    f67 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CD(new NtComplex(0.0, 1.0), 0.5)));");
    gold.append("\n    f68 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f69 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.CmD(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f70 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CC(new NtComplex(0.0, 1.0), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f71 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.CmC(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f72 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.CmC(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f73 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CI(new NtComplex(0.0, 1.0), 0)));");
    gold.append("\n    f74 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CL(new NtComplex(0.0, 1.0), 0L)));");
    gold.append("\n    f75 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CD(new NtComplex(0.0, 1.0), 0.0)));");
    gold.append("\n    f76 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CC(new NtComplex(0.0, 1.0), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f77 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.CmC(new NtComplex(0.0, 1.0), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f78 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1)));");
    gold.append("\n    f79 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 1L)));");
    gold.append("\n    f80 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.5)));");
    gold.append("\n    f81 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f82 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f83 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f84 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f85 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f86 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCI((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0)));");
    gold.append("\n    f87 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCL((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0L)));");
    gold.append("\n    f88 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCD((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), 0.0)));");
    gold.append("\n    f89 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f90 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmC((LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f91 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f92 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f93 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f94 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f95 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f96 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f97 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f98 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f99 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCI((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f100 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCL((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f101 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCD((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f102 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f103 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmC((LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f104 = new RxLazy<Integer>(this, () -> (0 - 1));");
    gold.append("\n    f105 = new RxLazy<Long>(this, () -> (0 - 1L));");
    gold.append("\n    f106 = new RxLazy<Double>(this, () -> (0 - 0.5));");
    gold.append("\n    f107 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.ImD(0, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f108 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.ImD(0, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f109 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.IC(0, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f110 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.ImC(0, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f111 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.ImC(0, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f112 = new RxLazy<Integer>(this, () -> (0 - 0));");
    gold.append("\n    f113 = new RxLazy<Long>(this, () -> (0 - 0L));");
    gold.append("\n    f114 = new RxLazy<Double>(this, () -> (0 - 0.0));");
    gold.append("\n    f115 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.IC(0, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f116 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.ImC(0, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f117 = new RxLazy<Long>(this, () -> (0L - 1));");
    gold.append("\n    f118 = new RxLazy<Long>(this, () -> (0L - 1L));");
    gold.append("\n    f119 = new RxLazy<Double>(this, () -> (0L - 0.5));");
    gold.append("\n    f120 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.LmD(0L, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f121 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.LmD(0L, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f122 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.LC(0L, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f123 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.LmC(0L, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f124 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.LmC(0L, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f125 = new RxLazy<Long>(this, () -> (0L - 0));");
    gold.append("\n    f126 = new RxLazy<Long>(this, () -> (0L - 0L));");
    gold.append("\n    f127 = new RxLazy<Double>(this, () -> (0L - 0.0));");
    gold.append("\n    f128 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.LC(0L, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f129 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.LmC(0L, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f130 = new RxLazy<Double>(this, () -> (0.0 - 1));");
    gold.append("\n    f131 = new RxLazy<Double>(this, () -> (0.0 - 1L));");
    gold.append("\n    f132 = new RxLazy<Double>(this, () -> (0.0 - 0.5));");
    gold.append("\n    f133 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.DmD(0.0, (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f134 = new RxLazy<NtMaybe<Double>>(this, () -> (LibArithmetic.Subtract.DmD(0.0, (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f135 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.DC(0.0, new NtComplex(0.0, 1.0))));");
    gold.append("\n    f136 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.DmC(0.0, (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f137 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.DmC(0.0, (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f138 = new RxLazy<Double>(this, () -> (0.0 - 0));");
    gold.append("\n    f139 = new RxLazy<Double>(this, () -> (0.0 - 0L));");
    gold.append("\n    f140 = new RxLazy<Double>(this, () -> (0.0 - 0.0));");
    gold.append("\n    f141 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.DC(0.0, (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f142 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.DmC(0.0, (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f143 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1)));");
    gold.append("\n    f144 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 1L)));");
    gold.append("\n    f145 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.5)));");
    gold.append("\n    f146 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f147 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.CmD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f148 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f149 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.CmC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f150 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.CmC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f151 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CI((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0)));");
    gold.append("\n    f152 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CL((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0L)));");
    gold.append("\n    f153 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CD((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), 0.0)));");
    gold.append("\n    f154 = new RxLazy<NtComplex>(this, () -> (LibArithmetic.Subtract.CC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f155 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.CmC((LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    f156 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1)));");
    gold.append("\n    f157 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 1L)));");
    gold.append("\n    f158 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.5)));");
    gold.append("\n    f159 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 2)))));");
    gold.append("\n    f160 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.II(1, 0)))));");
    gold.append("\n    f161 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), new NtComplex(0.0, 1.0))));");
    gold.append("\n    f162 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.IC(1, new NtComplex(0.0, 1.0))))));");
    gold.append("\n    f163 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f164 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCI((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0)));");
    gold.append("\n    f165 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCL((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0L)));");
    gold.append("\n    f166 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCD((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), 0.0)));");
    gold.append("\n    f167 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Multiply.CI(new NtComplex(0.0, 1.0), 0)))));");
    gold.append("\n    f168 = new RxLazy<NtMaybe<NtComplex>>(this, () -> (LibArithmetic.Subtract.mCmC((LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)), (LibArithmetic.Divide.CD(new NtComplex(0.0, 1.0), 0.0)))));");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaOperationsSubtractionCases_7 implements DeltaNode {");
    gold.append("\n    private int __gf0;");
    gold.append("\n    private DInt32 __df0;");
    gold.append("\n    private int __gf1;");
    gold.append("\n    private DInt64 __df1;");
    gold.append("\n    private int __gf2;");
    gold.append("\n    private DDouble __df2;");
    gold.append("\n    private int __gf3;");
    gold.append("\n    private DMaybe<DDouble> __df3;");
    gold.append("\n    private int __gf4;");
    gold.append("\n    private DMaybe<DDouble> __df4;");
    gold.append("\n    private int __gf5;");
    gold.append("\n    private DComplex __df5;");
    gold.append("\n    private int __gf6;");
    gold.append("\n    private DMaybe<DComplex> __df6;");
    gold.append("\n    private int __gf7;");
    gold.append("\n    private DMaybe<DComplex> __df7;");
    gold.append("\n    private int __gf8;");
    gold.append("\n    private DInt32 __df8;");
    gold.append("\n    private int __gf9;");
    gold.append("\n    private DInt64 __df9;");
    gold.append("\n    private int __gf10;");
    gold.append("\n    private DDouble __df10;");
    gold.append("\n    private int __gf11;");
    gold.append("\n    private DComplex __df11;");
    gold.append("\n    private int __gf12;");
    gold.append("\n    private DMaybe<DComplex> __df12;");
    gold.append("\n    private int __gf13;");
    gold.append("\n    private DInt64 __df13;");
    gold.append("\n    private int __gf14;");
    gold.append("\n    private DInt64 __df14;");
    gold.append("\n    private int __gf15;");
    gold.append("\n    private DDouble __df15;");
    gold.append("\n    private int __gf16;");
    gold.append("\n    private DMaybe<DDouble> __df16;");
    gold.append("\n    private int __gf17;");
    gold.append("\n    private DMaybe<DDouble> __df17;");
    gold.append("\n    private int __gf18;");
    gold.append("\n    private DComplex __df18;");
    gold.append("\n    private int __gf19;");
    gold.append("\n    private DMaybe<DComplex> __df19;");
    gold.append("\n    private int __gf20;");
    gold.append("\n    private DMaybe<DComplex> __df20;");
    gold.append("\n    private int __gf21;");
    gold.append("\n    private DInt64 __df21;");
    gold.append("\n    private int __gf22;");
    gold.append("\n    private DInt64 __df22;");
    gold.append("\n    private int __gf23;");
    gold.append("\n    private DDouble __df23;");
    gold.append("\n    private int __gf24;");
    gold.append("\n    private DComplex __df24;");
    gold.append("\n    private int __gf25;");
    gold.append("\n    private DMaybe<DComplex> __df25;");
    gold.append("\n    private int __gf26;");
    gold.append("\n    private DDouble __df26;");
    gold.append("\n    private int __gf27;");
    gold.append("\n    private DDouble __df27;");
    gold.append("\n    private int __gf28;");
    gold.append("\n    private DDouble __df28;");
    gold.append("\n    private int __gf29;");
    gold.append("\n    private DMaybe<DDouble> __df29;");
    gold.append("\n    private int __gf30;");
    gold.append("\n    private DMaybe<DDouble> __df30;");
    gold.append("\n    private int __gf31;");
    gold.append("\n    private DComplex __df31;");
    gold.append("\n    private int __gf32;");
    gold.append("\n    private DMaybe<DComplex> __df32;");
    gold.append("\n    private int __gf33;");
    gold.append("\n    private DMaybe<DComplex> __df33;");
    gold.append("\n    private int __gf34;");
    gold.append("\n    private DDouble __df34;");
    gold.append("\n    private int __gf35;");
    gold.append("\n    private DDouble __df35;");
    gold.append("\n    private int __gf36;");
    gold.append("\n    private DDouble __df36;");
    gold.append("\n    private int __gf37;");
    gold.append("\n    private DComplex __df37;");
    gold.append("\n    private int __gf38;");
    gold.append("\n    private DMaybe<DComplex> __df38;");
    gold.append("\n    private int __gf39;");
    gold.append("\n    private DMaybe<DDouble> __df39;");
    gold.append("\n    private int __gf40;");
    gold.append("\n    private DMaybe<DDouble> __df40;");
    gold.append("\n    private int __gf41;");
    gold.append("\n    private DMaybe<DDouble> __df41;");
    gold.append("\n    private int __gf42;");
    gold.append("\n    private DMaybe<DDouble> __df42;");
    gold.append("\n    private int __gf43;");
    gold.append("\n    private DMaybe<DDouble> __df43;");
    gold.append("\n    private int __gf44;");
    gold.append("\n    private DMaybe<DComplex> __df44;");
    gold.append("\n    private int __gf45;");
    gold.append("\n    private DMaybe<DComplex> __df45;");
    gold.append("\n    private int __gf46;");
    gold.append("\n    private DMaybe<DComplex> __df46;");
    gold.append("\n    private int __gf47;");
    gold.append("\n    private DMaybe<DDouble> __df47;");
    gold.append("\n    private int __gf48;");
    gold.append("\n    private DMaybe<DDouble> __df48;");
    gold.append("\n    private int __gf49;");
    gold.append("\n    private DMaybe<DDouble> __df49;");
    gold.append("\n    private int __gf50;");
    gold.append("\n    private DMaybe<DComplex> __df50;");
    gold.append("\n    private int __gf51;");
    gold.append("\n    private DMaybe<DComplex> __df51;");
    gold.append("\n    private int __gf52;");
    gold.append("\n    private DMaybe<DDouble> __df52;");
    gold.append("\n    private int __gf53;");
    gold.append("\n    private DMaybe<DDouble> __df53;");
    gold.append("\n    private int __gf54;");
    gold.append("\n    private DMaybe<DDouble> __df54;");
    gold.append("\n    private int __gf55;");
    gold.append("\n    private DMaybe<DDouble> __df55;");
    gold.append("\n    private int __gf56;");
    gold.append("\n    private DMaybe<DDouble> __df56;");
    gold.append("\n    private int __gf57;");
    gold.append("\n    private DMaybe<DComplex> __df57;");
    gold.append("\n    private int __gf58;");
    gold.append("\n    private DMaybe<DComplex> __df58;");
    gold.append("\n    private int __gf59;");
    gold.append("\n    private DMaybe<DComplex> __df59;");
    gold.append("\n    private int __gf60;");
    gold.append("\n    private DMaybe<DDouble> __df60;");
    gold.append("\n    private int __gf61;");
    gold.append("\n    private DMaybe<DDouble> __df61;");
    gold.append("\n    private int __gf62;");
    gold.append("\n    private DMaybe<DDouble> __df62;");
    gold.append("\n    private int __gf63;");
    gold.append("\n    private DMaybe<DComplex> __df63;");
    gold.append("\n    private int __gf64;");
    gold.append("\n    private DMaybe<DComplex> __df64;");
    gold.append("\n    private int __gf65;");
    gold.append("\n    private DComplex __df65;");
    gold.append("\n    private int __gf66;");
    gold.append("\n    private DComplex __df66;");
    gold.append("\n    private int __gf67;");
    gold.append("\n    private DComplex __df67;");
    gold.append("\n    private int __gf68;");
    gold.append("\n    private DMaybe<DComplex> __df68;");
    gold.append("\n    private int __gf69;");
    gold.append("\n    private DMaybe<DComplex> __df69;");
    gold.append("\n    private int __gf70;");
    gold.append("\n    private DComplex __df70;");
    gold.append("\n    private int __gf71;");
    gold.append("\n    private DMaybe<DComplex> __df71;");
    gold.append("\n    private int __gf72;");
    gold.append("\n    private DMaybe<DComplex> __df72;");
    gold.append("\n    private int __gf73;");
    gold.append("\n    private DComplex __df73;");
    gold.append("\n    private int __gf74;");
    gold.append("\n    private DComplex __df74;");
    gold.append("\n    private int __gf75;");
    gold.append("\n    private DComplex __df75;");
    gold.append("\n    private int __gf76;");
    gold.append("\n    private DComplex __df76;");
    gold.append("\n    private int __gf77;");
    gold.append("\n    private DMaybe<DComplex> __df77;");
    gold.append("\n    private int __gf78;");
    gold.append("\n    private DMaybe<DComplex> __df78;");
    gold.append("\n    private int __gf79;");
    gold.append("\n    private DMaybe<DComplex> __df79;");
    gold.append("\n    private int __gf80;");
    gold.append("\n    private DMaybe<DComplex> __df80;");
    gold.append("\n    private int __gf81;");
    gold.append("\n    private DMaybe<DComplex> __df81;");
    gold.append("\n    private int __gf82;");
    gold.append("\n    private DMaybe<DComplex> __df82;");
    gold.append("\n    private int __gf83;");
    gold.append("\n    private DMaybe<DComplex> __df83;");
    gold.append("\n    private int __gf84;");
    gold.append("\n    private DMaybe<DComplex> __df84;");
    gold.append("\n    private int __gf85;");
    gold.append("\n    private DMaybe<DComplex> __df85;");
    gold.append("\n    private int __gf86;");
    gold.append("\n    private DMaybe<DComplex> __df86;");
    gold.append("\n    private int __gf87;");
    gold.append("\n    private DMaybe<DComplex> __df87;");
    gold.append("\n    private int __gf88;");
    gold.append("\n    private DMaybe<DComplex> __df88;");
    gold.append("\n    private int __gf89;");
    gold.append("\n    private DMaybe<DComplex> __df89;");
    gold.append("\n    private int __gf90;");
    gold.append("\n    private DMaybe<DComplex> __df90;");
    gold.append("\n    private int __gf91;");
    gold.append("\n    private DMaybe<DComplex> __df91;");
    gold.append("\n    private int __gf92;");
    gold.append("\n    private DMaybe<DComplex> __df92;");
    gold.append("\n    private int __gf93;");
    gold.append("\n    private DMaybe<DComplex> __df93;");
    gold.append("\n    private int __gf94;");
    gold.append("\n    private DMaybe<DComplex> __df94;");
    gold.append("\n    private int __gf95;");
    gold.append("\n    private DMaybe<DComplex> __df95;");
    gold.append("\n    private int __gf96;");
    gold.append("\n    private DMaybe<DComplex> __df96;");
    gold.append("\n    private int __gf97;");
    gold.append("\n    private DMaybe<DComplex> __df97;");
    gold.append("\n    private int __gf98;");
    gold.append("\n    private DMaybe<DComplex> __df98;");
    gold.append("\n    private int __gf99;");
    gold.append("\n    private DMaybe<DComplex> __df99;");
    gold.append("\n    private int __gf100;");
    gold.append("\n    private DMaybe<DComplex> __df100;");
    gold.append("\n    private int __gf101;");
    gold.append("\n    private DMaybe<DComplex> __df101;");
    gold.append("\n    private int __gf102;");
    gold.append("\n    private DMaybe<DComplex> __df102;");
    gold.append("\n    private int __gf103;");
    gold.append("\n    private DMaybe<DComplex> __df103;");
    gold.append("\n    private int __gf104;");
    gold.append("\n    private DInt32 __df104;");
    gold.append("\n    private int __gf105;");
    gold.append("\n    private DInt64 __df105;");
    gold.append("\n    private int __gf106;");
    gold.append("\n    private DDouble __df106;");
    gold.append("\n    private int __gf107;");
    gold.append("\n    private DMaybe<DDouble> __df107;");
    gold.append("\n    private int __gf108;");
    gold.append("\n    private DMaybe<DDouble> __df108;");
    gold.append("\n    private int __gf109;");
    gold.append("\n    private DComplex __df109;");
    gold.append("\n    private int __gf110;");
    gold.append("\n    private DMaybe<DComplex> __df110;");
    gold.append("\n    private int __gf111;");
    gold.append("\n    private DMaybe<DComplex> __df111;");
    gold.append("\n    private int __gf112;");
    gold.append("\n    private DInt32 __df112;");
    gold.append("\n    private int __gf113;");
    gold.append("\n    private DInt64 __df113;");
    gold.append("\n    private int __gf114;");
    gold.append("\n    private DDouble __df114;");
    gold.append("\n    private int __gf115;");
    gold.append("\n    private DComplex __df115;");
    gold.append("\n    private int __gf116;");
    gold.append("\n    private DMaybe<DComplex> __df116;");
    gold.append("\n    private int __gf117;");
    gold.append("\n    private DInt64 __df117;");
    gold.append("\n    private int __gf118;");
    gold.append("\n    private DInt64 __df118;");
    gold.append("\n    private int __gf119;");
    gold.append("\n    private DDouble __df119;");
    gold.append("\n    private int __gf120;");
    gold.append("\n    private DMaybe<DDouble> __df120;");
    gold.append("\n    private int __gf121;");
    gold.append("\n    private DMaybe<DDouble> __df121;");
    gold.append("\n    private int __gf122;");
    gold.append("\n    private DComplex __df122;");
    gold.append("\n    private int __gf123;");
    gold.append("\n    private DMaybe<DComplex> __df123;");
    gold.append("\n    private int __gf124;");
    gold.append("\n    private DMaybe<DComplex> __df124;");
    gold.append("\n    private int __gf125;");
    gold.append("\n    private DInt64 __df125;");
    gold.append("\n    private int __gf126;");
    gold.append("\n    private DInt64 __df126;");
    gold.append("\n    private int __gf127;");
    gold.append("\n    private DDouble __df127;");
    gold.append("\n    private int __gf128;");
    gold.append("\n    private DComplex __df128;");
    gold.append("\n    private int __gf129;");
    gold.append("\n    private DMaybe<DComplex> __df129;");
    gold.append("\n    private int __gf130;");
    gold.append("\n    private DDouble __df130;");
    gold.append("\n    private int __gf131;");
    gold.append("\n    private DDouble __df131;");
    gold.append("\n    private int __gf132;");
    gold.append("\n    private DDouble __df132;");
    gold.append("\n    private int __gf133;");
    gold.append("\n    private DMaybe<DDouble> __df133;");
    gold.append("\n    private int __gf134;");
    gold.append("\n    private DMaybe<DDouble> __df134;");
    gold.append("\n    private int __gf135;");
    gold.append("\n    private DComplex __df135;");
    gold.append("\n    private int __gf136;");
    gold.append("\n    private DMaybe<DComplex> __df136;");
    gold.append("\n    private int __gf137;");
    gold.append("\n    private DMaybe<DComplex> __df137;");
    gold.append("\n    private int __gf138;");
    gold.append("\n    private DDouble __df138;");
    gold.append("\n    private int __gf139;");
    gold.append("\n    private DDouble __df139;");
    gold.append("\n    private int __gf140;");
    gold.append("\n    private DDouble __df140;");
    gold.append("\n    private int __gf141;");
    gold.append("\n    private DComplex __df141;");
    gold.append("\n    private int __gf142;");
    gold.append("\n    private DMaybe<DComplex> __df142;");
    gold.append("\n    private int __gf143;");
    gold.append("\n    private DComplex __df143;");
    gold.append("\n    private int __gf144;");
    gold.append("\n    private DComplex __df144;");
    gold.append("\n    private int __gf145;");
    gold.append("\n    private DComplex __df145;");
    gold.append("\n    private int __gf146;");
    gold.append("\n    private DMaybe<DComplex> __df146;");
    gold.append("\n    private int __gf147;");
    gold.append("\n    private DMaybe<DComplex> __df147;");
    gold.append("\n    private int __gf148;");
    gold.append("\n    private DComplex __df148;");
    gold.append("\n    private int __gf149;");
    gold.append("\n    private DMaybe<DComplex> __df149;");
    gold.append("\n    private int __gf150;");
    gold.append("\n    private DMaybe<DComplex> __df150;");
    gold.append("\n    private int __gf151;");
    gold.append("\n    private DComplex __df151;");
    gold.append("\n    private int __gf152;");
    gold.append("\n    private DComplex __df152;");
    gold.append("\n    private int __gf153;");
    gold.append("\n    private DComplex __df153;");
    gold.append("\n    private int __gf154;");
    gold.append("\n    private DComplex __df154;");
    gold.append("\n    private int __gf155;");
    gold.append("\n    private DMaybe<DComplex> __df155;");
    gold.append("\n    private int __gf156;");
    gold.append("\n    private DMaybe<DComplex> __df156;");
    gold.append("\n    private int __gf157;");
    gold.append("\n    private DMaybe<DComplex> __df157;");
    gold.append("\n    private int __gf158;");
    gold.append("\n    private DMaybe<DComplex> __df158;");
    gold.append("\n    private int __gf159;");
    gold.append("\n    private DMaybe<DComplex> __df159;");
    gold.append("\n    private int __gf160;");
    gold.append("\n    private DMaybe<DComplex> __df160;");
    gold.append("\n    private int __gf161;");
    gold.append("\n    private DMaybe<DComplex> __df161;");
    gold.append("\n    private int __gf162;");
    gold.append("\n    private DMaybe<DComplex> __df162;");
    gold.append("\n    private int __gf163;");
    gold.append("\n    private DMaybe<DComplex> __df163;");
    gold.append("\n    private int __gf164;");
    gold.append("\n    private DMaybe<DComplex> __df164;");
    gold.append("\n    private int __gf165;");
    gold.append("\n    private DMaybe<DComplex> __df165;");
    gold.append("\n    private int __gf166;");
    gold.append("\n    private DMaybe<DComplex> __df166;");
    gold.append("\n    private int __gf167;");
    gold.append("\n    private DMaybe<DComplex> __df167;");
    gold.append("\n    private int __gf168;");
    gold.append("\n    private DMaybe<DComplex> __df168;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaOperationsSubtractionCases_7() {");
    gold.append("\n      __gf0 = -1;");
    gold.append("\n      __df0 = new DInt32();");
    gold.append("\n      __gf1 = -1;");
    gold.append("\n      __df1 = new DInt64();");
    gold.append("\n      __gf2 = -1;");
    gold.append("\n      __df2 = new DDouble();");
    gold.append("\n      __gf3 = -1;");
    gold.append("\n      __df3 = new DMaybe<DDouble>();");
    gold.append("\n      __gf4 = -1;");
    gold.append("\n      __df4 = new DMaybe<DDouble>();");
    gold.append("\n      __gf5 = -1;");
    gold.append("\n      __df5 = new DComplex();");
    gold.append("\n      __gf6 = -1;");
    gold.append("\n      __df6 = new DMaybe<DComplex>();");
    gold.append("\n      __gf7 = -1;");
    gold.append("\n      __df7 = new DMaybe<DComplex>();");
    gold.append("\n      __gf8 = -1;");
    gold.append("\n      __df8 = new DInt32();");
    gold.append("\n      __gf9 = -1;");
    gold.append("\n      __df9 = new DInt64();");
    gold.append("\n      __gf10 = -1;");
    gold.append("\n      __df10 = new DDouble();");
    gold.append("\n      __gf11 = -1;");
    gold.append("\n      __df11 = new DComplex();");
    gold.append("\n      __gf12 = -1;");
    gold.append("\n      __df12 = new DMaybe<DComplex>();");
    gold.append("\n      __gf13 = -1;");
    gold.append("\n      __df13 = new DInt64();");
    gold.append("\n      __gf14 = -1;");
    gold.append("\n      __df14 = new DInt64();");
    gold.append("\n      __gf15 = -1;");
    gold.append("\n      __df15 = new DDouble();");
    gold.append("\n      __gf16 = -1;");
    gold.append("\n      __df16 = new DMaybe<DDouble>();");
    gold.append("\n      __gf17 = -1;");
    gold.append("\n      __df17 = new DMaybe<DDouble>();");
    gold.append("\n      __gf18 = -1;");
    gold.append("\n      __df18 = new DComplex();");
    gold.append("\n      __gf19 = -1;");
    gold.append("\n      __df19 = new DMaybe<DComplex>();");
    gold.append("\n      __gf20 = -1;");
    gold.append("\n      __df20 = new DMaybe<DComplex>();");
    gold.append("\n      __gf21 = -1;");
    gold.append("\n      __df21 = new DInt64();");
    gold.append("\n      __gf22 = -1;");
    gold.append("\n      __df22 = new DInt64();");
    gold.append("\n      __gf23 = -1;");
    gold.append("\n      __df23 = new DDouble();");
    gold.append("\n      __gf24 = -1;");
    gold.append("\n      __df24 = new DComplex();");
    gold.append("\n      __gf25 = -1;");
    gold.append("\n      __df25 = new DMaybe<DComplex>();");
    gold.append("\n      __gf26 = -1;");
    gold.append("\n      __df26 = new DDouble();");
    gold.append("\n      __gf27 = -1;");
    gold.append("\n      __df27 = new DDouble();");
    gold.append("\n      __gf28 = -1;");
    gold.append("\n      __df28 = new DDouble();");
    gold.append("\n      __gf29 = -1;");
    gold.append("\n      __df29 = new DMaybe<DDouble>();");
    gold.append("\n      __gf30 = -1;");
    gold.append("\n      __df30 = new DMaybe<DDouble>();");
    gold.append("\n      __gf31 = -1;");
    gold.append("\n      __df31 = new DComplex();");
    gold.append("\n      __gf32 = -1;");
    gold.append("\n      __df32 = new DMaybe<DComplex>();");
    gold.append("\n      __gf33 = -1;");
    gold.append("\n      __df33 = new DMaybe<DComplex>();");
    gold.append("\n      __gf34 = -1;");
    gold.append("\n      __df34 = new DDouble();");
    gold.append("\n      __gf35 = -1;");
    gold.append("\n      __df35 = new DDouble();");
    gold.append("\n      __gf36 = -1;");
    gold.append("\n      __df36 = new DDouble();");
    gold.append("\n      __gf37 = -1;");
    gold.append("\n      __df37 = new DComplex();");
    gold.append("\n      __gf38 = -1;");
    gold.append("\n      __df38 = new DMaybe<DComplex>();");
    gold.append("\n      __gf39 = -1;");
    gold.append("\n      __df39 = new DMaybe<DDouble>();");
    gold.append("\n      __gf40 = -1;");
    gold.append("\n      __df40 = new DMaybe<DDouble>();");
    gold.append("\n      __gf41 = -1;");
    gold.append("\n      __df41 = new DMaybe<DDouble>();");
    gold.append("\n      __gf42 = -1;");
    gold.append("\n      __df42 = new DMaybe<DDouble>();");
    gold.append("\n      __gf43 = -1;");
    gold.append("\n      __df43 = new DMaybe<DDouble>();");
    gold.append("\n      __gf44 = -1;");
    gold.append("\n      __df44 = new DMaybe<DComplex>();");
    gold.append("\n      __gf45 = -1;");
    gold.append("\n      __df45 = new DMaybe<DComplex>();");
    gold.append("\n      __gf46 = -1;");
    gold.append("\n      __df46 = new DMaybe<DComplex>();");
    gold.append("\n      __gf47 = -1;");
    gold.append("\n      __df47 = new DMaybe<DDouble>();");
    gold.append("\n      __gf48 = -1;");
    gold.append("\n      __df48 = new DMaybe<DDouble>();");
    gold.append("\n      __gf49 = -1;");
    gold.append("\n      __df49 = new DMaybe<DDouble>();");
    gold.append("\n      __gf50 = -1;");
    gold.append("\n      __df50 = new DMaybe<DComplex>();");
    gold.append("\n      __gf51 = -1;");
    gold.append("\n      __df51 = new DMaybe<DComplex>();");
    gold.append("\n      __gf52 = -1;");
    gold.append("\n      __df52 = new DMaybe<DDouble>();");
    gold.append("\n      __gf53 = -1;");
    gold.append("\n      __df53 = new DMaybe<DDouble>();");
    gold.append("\n      __gf54 = -1;");
    gold.append("\n      __df54 = new DMaybe<DDouble>();");
    gold.append("\n      __gf55 = -1;");
    gold.append("\n      __df55 = new DMaybe<DDouble>();");
    gold.append("\n      __gf56 = -1;");
    gold.append("\n      __df56 = new DMaybe<DDouble>();");
    gold.append("\n      __gf57 = -1;");
    gold.append("\n      __df57 = new DMaybe<DComplex>();");
    gold.append("\n      __gf58 = -1;");
    gold.append("\n      __df58 = new DMaybe<DComplex>();");
    gold.append("\n      __gf59 = -1;");
    gold.append("\n      __df59 = new DMaybe<DComplex>();");
    gold.append("\n      __gf60 = -1;");
    gold.append("\n      __df60 = new DMaybe<DDouble>();");
    gold.append("\n      __gf61 = -1;");
    gold.append("\n      __df61 = new DMaybe<DDouble>();");
    gold.append("\n      __gf62 = -1;");
    gold.append("\n      __df62 = new DMaybe<DDouble>();");
    gold.append("\n      __gf63 = -1;");
    gold.append("\n      __df63 = new DMaybe<DComplex>();");
    gold.append("\n      __gf64 = -1;");
    gold.append("\n      __df64 = new DMaybe<DComplex>();");
    gold.append("\n      __gf65 = -1;");
    gold.append("\n      __df65 = new DComplex();");
    gold.append("\n      __gf66 = -1;");
    gold.append("\n      __df66 = new DComplex();");
    gold.append("\n      __gf67 = -1;");
    gold.append("\n      __df67 = new DComplex();");
    gold.append("\n      __gf68 = -1;");
    gold.append("\n      __df68 = new DMaybe<DComplex>();");
    gold.append("\n      __gf69 = -1;");
    gold.append("\n      __df69 = new DMaybe<DComplex>();");
    gold.append("\n      __gf70 = -1;");
    gold.append("\n      __df70 = new DComplex();");
    gold.append("\n      __gf71 = -1;");
    gold.append("\n      __df71 = new DMaybe<DComplex>();");
    gold.append("\n      __gf72 = -1;");
    gold.append("\n      __df72 = new DMaybe<DComplex>();");
    gold.append("\n      __gf73 = -1;");
    gold.append("\n      __df73 = new DComplex();");
    gold.append("\n      __gf74 = -1;");
    gold.append("\n      __df74 = new DComplex();");
    gold.append("\n      __gf75 = -1;");
    gold.append("\n      __df75 = new DComplex();");
    gold.append("\n      __gf76 = -1;");
    gold.append("\n      __df76 = new DComplex();");
    gold.append("\n      __gf77 = -1;");
    gold.append("\n      __df77 = new DMaybe<DComplex>();");
    gold.append("\n      __gf78 = -1;");
    gold.append("\n      __df78 = new DMaybe<DComplex>();");
    gold.append("\n      __gf79 = -1;");
    gold.append("\n      __df79 = new DMaybe<DComplex>();");
    gold.append("\n      __gf80 = -1;");
    gold.append("\n      __df80 = new DMaybe<DComplex>();");
    gold.append("\n      __gf81 = -1;");
    gold.append("\n      __df81 = new DMaybe<DComplex>();");
    gold.append("\n      __gf82 = -1;");
    gold.append("\n      __df82 = new DMaybe<DComplex>();");
    gold.append("\n      __gf83 = -1;");
    gold.append("\n      __df83 = new DMaybe<DComplex>();");
    gold.append("\n      __gf84 = -1;");
    gold.append("\n      __df84 = new DMaybe<DComplex>();");
    gold.append("\n      __gf85 = -1;");
    gold.append("\n      __df85 = new DMaybe<DComplex>();");
    gold.append("\n      __gf86 = -1;");
    gold.append("\n      __df86 = new DMaybe<DComplex>();");
    gold.append("\n      __gf87 = -1;");
    gold.append("\n      __df87 = new DMaybe<DComplex>();");
    gold.append("\n      __gf88 = -1;");
    gold.append("\n      __df88 = new DMaybe<DComplex>();");
    gold.append("\n      __gf89 = -1;");
    gold.append("\n      __df89 = new DMaybe<DComplex>();");
    gold.append("\n      __gf90 = -1;");
    gold.append("\n      __df90 = new DMaybe<DComplex>();");
    gold.append("\n      __gf91 = -1;");
    gold.append("\n      __df91 = new DMaybe<DComplex>();");
    gold.append("\n      __gf92 = -1;");
    gold.append("\n      __df92 = new DMaybe<DComplex>();");
    gold.append("\n      __gf93 = -1;");
    gold.append("\n      __df93 = new DMaybe<DComplex>();");
    gold.append("\n      __gf94 = -1;");
    gold.append("\n      __df94 = new DMaybe<DComplex>();");
    gold.append("\n      __gf95 = -1;");
    gold.append("\n      __df95 = new DMaybe<DComplex>();");
    gold.append("\n      __gf96 = -1;");
    gold.append("\n      __df96 = new DMaybe<DComplex>();");
    gold.append("\n      __gf97 = -1;");
    gold.append("\n      __df97 = new DMaybe<DComplex>();");
    gold.append("\n      __gf98 = -1;");
    gold.append("\n      __df98 = new DMaybe<DComplex>();");
    gold.append("\n      __gf99 = -1;");
    gold.append("\n      __df99 = new DMaybe<DComplex>();");
    gold.append("\n      __gf100 = -1;");
    gold.append("\n      __df100 = new DMaybe<DComplex>();");
    gold.append("\n      __gf101 = -1;");
    gold.append("\n      __df101 = new DMaybe<DComplex>();");
    gold.append("\n      __gf102 = -1;");
    gold.append("\n      __df102 = new DMaybe<DComplex>();");
    gold.append("\n      __gf103 = -1;");
    gold.append("\n      __df103 = new DMaybe<DComplex>();");
    gold.append("\n      __gf104 = -1;");
    gold.append("\n      __df104 = new DInt32();");
    gold.append("\n      __gf105 = -1;");
    gold.append("\n      __df105 = new DInt64();");
    gold.append("\n      __gf106 = -1;");
    gold.append("\n      __df106 = new DDouble();");
    gold.append("\n      __gf107 = -1;");
    gold.append("\n      __df107 = new DMaybe<DDouble>();");
    gold.append("\n      __gf108 = -1;");
    gold.append("\n      __df108 = new DMaybe<DDouble>();");
    gold.append("\n      __gf109 = -1;");
    gold.append("\n      __df109 = new DComplex();");
    gold.append("\n      __gf110 = -1;");
    gold.append("\n      __df110 = new DMaybe<DComplex>();");
    gold.append("\n      __gf111 = -1;");
    gold.append("\n      __df111 = new DMaybe<DComplex>();");
    gold.append("\n      __gf112 = -1;");
    gold.append("\n      __df112 = new DInt32();");
    gold.append("\n      __gf113 = -1;");
    gold.append("\n      __df113 = new DInt64();");
    gold.append("\n      __gf114 = -1;");
    gold.append("\n      __df114 = new DDouble();");
    gold.append("\n      __gf115 = -1;");
    gold.append("\n      __df115 = new DComplex();");
    gold.append("\n      __gf116 = -1;");
    gold.append("\n      __df116 = new DMaybe<DComplex>();");
    gold.append("\n      __gf117 = -1;");
    gold.append("\n      __df117 = new DInt64();");
    gold.append("\n      __gf118 = -1;");
    gold.append("\n      __df118 = new DInt64();");
    gold.append("\n      __gf119 = -1;");
    gold.append("\n      __df119 = new DDouble();");
    gold.append("\n      __gf120 = -1;");
    gold.append("\n      __df120 = new DMaybe<DDouble>();");
    gold.append("\n      __gf121 = -1;");
    gold.append("\n      __df121 = new DMaybe<DDouble>();");
    gold.append("\n      __gf122 = -1;");
    gold.append("\n      __df122 = new DComplex();");
    gold.append("\n      __gf123 = -1;");
    gold.append("\n      __df123 = new DMaybe<DComplex>();");
    gold.append("\n      __gf124 = -1;");
    gold.append("\n      __df124 = new DMaybe<DComplex>();");
    gold.append("\n      __gf125 = -1;");
    gold.append("\n      __df125 = new DInt64();");
    gold.append("\n      __gf126 = -1;");
    gold.append("\n      __df126 = new DInt64();");
    gold.append("\n      __gf127 = -1;");
    gold.append("\n      __df127 = new DDouble();");
    gold.append("\n      __gf128 = -1;");
    gold.append("\n      __df128 = new DComplex();");
    gold.append("\n      __gf129 = -1;");
    gold.append("\n      __df129 = new DMaybe<DComplex>();");
    gold.append("\n      __gf130 = -1;");
    gold.append("\n      __df130 = new DDouble();");
    gold.append("\n      __gf131 = -1;");
    gold.append("\n      __df131 = new DDouble();");
    gold.append("\n      __gf132 = -1;");
    gold.append("\n      __df132 = new DDouble();");
    gold.append("\n      __gf133 = -1;");
    gold.append("\n      __df133 = new DMaybe<DDouble>();");
    gold.append("\n      __gf134 = -1;");
    gold.append("\n      __df134 = new DMaybe<DDouble>();");
    gold.append("\n      __gf135 = -1;");
    gold.append("\n      __df135 = new DComplex();");
    gold.append("\n      __gf136 = -1;");
    gold.append("\n      __df136 = new DMaybe<DComplex>();");
    gold.append("\n      __gf137 = -1;");
    gold.append("\n      __df137 = new DMaybe<DComplex>();");
    gold.append("\n      __gf138 = -1;");
    gold.append("\n      __df138 = new DDouble();");
    gold.append("\n      __gf139 = -1;");
    gold.append("\n      __df139 = new DDouble();");
    gold.append("\n      __gf140 = -1;");
    gold.append("\n      __df140 = new DDouble();");
    gold.append("\n      __gf141 = -1;");
    gold.append("\n      __df141 = new DComplex();");
    gold.append("\n      __gf142 = -1;");
    gold.append("\n      __df142 = new DMaybe<DComplex>();");
    gold.append("\n      __gf143 = -1;");
    gold.append("\n      __df143 = new DComplex();");
    gold.append("\n      __gf144 = -1;");
    gold.append("\n      __df144 = new DComplex();");
    gold.append("\n      __gf145 = -1;");
    gold.append("\n      __df145 = new DComplex();");
    gold.append("\n      __gf146 = -1;");
    gold.append("\n      __df146 = new DMaybe<DComplex>();");
    gold.append("\n      __gf147 = -1;");
    gold.append("\n      __df147 = new DMaybe<DComplex>();");
    gold.append("\n      __gf148 = -1;");
    gold.append("\n      __df148 = new DComplex();");
    gold.append("\n      __gf149 = -1;");
    gold.append("\n      __df149 = new DMaybe<DComplex>();");
    gold.append("\n      __gf150 = -1;");
    gold.append("\n      __df150 = new DMaybe<DComplex>();");
    gold.append("\n      __gf151 = -1;");
    gold.append("\n      __df151 = new DComplex();");
    gold.append("\n      __gf152 = -1;");
    gold.append("\n      __df152 = new DComplex();");
    gold.append("\n      __gf153 = -1;");
    gold.append("\n      __df153 = new DComplex();");
    gold.append("\n      __gf154 = -1;");
    gold.append("\n      __df154 = new DComplex();");
    gold.append("\n      __gf155 = -1;");
    gold.append("\n      __df155 = new DMaybe<DComplex>();");
    gold.append("\n      __gf156 = -1;");
    gold.append("\n      __df156 = new DMaybe<DComplex>();");
    gold.append("\n      __gf157 = -1;");
    gold.append("\n      __df157 = new DMaybe<DComplex>();");
    gold.append("\n      __gf158 = -1;");
    gold.append("\n      __df158 = new DMaybe<DComplex>();");
    gold.append("\n      __gf159 = -1;");
    gold.append("\n      __df159 = new DMaybe<DComplex>();");
    gold.append("\n      __gf160 = -1;");
    gold.append("\n      __df160 = new DMaybe<DComplex>();");
    gold.append("\n      __gf161 = -1;");
    gold.append("\n      __df161 = new DMaybe<DComplex>();");
    gold.append("\n      __gf162 = -1;");
    gold.append("\n      __df162 = new DMaybe<DComplex>();");
    gold.append("\n      __gf163 = -1;");
    gold.append("\n      __df163 = new DMaybe<DComplex>();");
    gold.append("\n      __gf164 = -1;");
    gold.append("\n      __df164 = new DMaybe<DComplex>();");
    gold.append("\n      __gf165 = -1;");
    gold.append("\n      __df165 = new DMaybe<DComplex>();");
    gold.append("\n      __gf166 = -1;");
    gold.append("\n      __df166 = new DMaybe<DComplex>();");
    gold.append("\n      __gf167 = -1;");
    gold.append("\n      __df167 = new DMaybe<DComplex>();");
    gold.append("\n      __gf168 = -1;");
    gold.append("\n      __df168 = new DMaybe<DComplex>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __df0.__memory();");
    gold.append("\n      __sum += __df1.__memory();");
    gold.append("\n      __sum += __df2.__memory();");
    gold.append("\n      __sum += __df3.__memory();");
    gold.append("\n      __sum += __df4.__memory();");
    gold.append("\n      __sum += __df5.__memory();");
    gold.append("\n      __sum += __df6.__memory();");
    gold.append("\n      __sum += __df7.__memory();");
    gold.append("\n      __sum += __df8.__memory();");
    gold.append("\n      __sum += __df9.__memory();");
    gold.append("\n      __sum += __df10.__memory();");
    gold.append("\n      __sum += __df11.__memory();");
    gold.append("\n      __sum += __df12.__memory();");
    gold.append("\n      __sum += __df13.__memory();");
    gold.append("\n      __sum += __df14.__memory();");
    gold.append("\n      __sum += __df15.__memory();");
    gold.append("\n      __sum += __df16.__memory();");
    gold.append("\n      __sum += __df17.__memory();");
    gold.append("\n      __sum += __df18.__memory();");
    gold.append("\n      __sum += __df19.__memory();");
    gold.append("\n      __sum += __df20.__memory();");
    gold.append("\n      __sum += __df21.__memory();");
    gold.append("\n      __sum += __df22.__memory();");
    gold.append("\n      __sum += __df23.__memory();");
    gold.append("\n      __sum += __df24.__memory();");
    gold.append("\n      __sum += __df25.__memory();");
    gold.append("\n      __sum += __df26.__memory();");
    gold.append("\n      __sum += __df27.__memory();");
    gold.append("\n      __sum += __df28.__memory();");
    gold.append("\n      __sum += __df29.__memory();");
    gold.append("\n      __sum += __df30.__memory();");
    gold.append("\n      __sum += __df31.__memory();");
    gold.append("\n      __sum += __df32.__memory();");
    gold.append("\n      __sum += __df33.__memory();");
    gold.append("\n      __sum += __df34.__memory();");
    gold.append("\n      __sum += __df35.__memory();");
    gold.append("\n      __sum += __df36.__memory();");
    gold.append("\n      __sum += __df37.__memory();");
    gold.append("\n      __sum += __df38.__memory();");
    gold.append("\n      __sum += __df39.__memory();");
    gold.append("\n      __sum += __df40.__memory();");
    gold.append("\n      __sum += __df41.__memory();");
    gold.append("\n      __sum += __df42.__memory();");
    gold.append("\n      __sum += __df43.__memory();");
    gold.append("\n      __sum += __df44.__memory();");
    gold.append("\n      __sum += __df45.__memory();");
    gold.append("\n      __sum += __df46.__memory();");
    gold.append("\n      __sum += __df47.__memory();");
    gold.append("\n      __sum += __df48.__memory();");
    gold.append("\n      __sum += __df49.__memory();");
    gold.append("\n      __sum += __df50.__memory();");
    gold.append("\n      __sum += __df51.__memory();");
    gold.append("\n      __sum += __df52.__memory();");
    gold.append("\n      __sum += __df53.__memory();");
    gold.append("\n      __sum += __df54.__memory();");
    gold.append("\n      __sum += __df55.__memory();");
    gold.append("\n      __sum += __df56.__memory();");
    gold.append("\n      __sum += __df57.__memory();");
    gold.append("\n      __sum += __df58.__memory();");
    gold.append("\n      __sum += __df59.__memory();");
    gold.append("\n      __sum += __df60.__memory();");
    gold.append("\n      __sum += __df61.__memory();");
    gold.append("\n      __sum += __df62.__memory();");
    gold.append("\n      __sum += __df63.__memory();");
    gold.append("\n      __sum += __df64.__memory();");
    gold.append("\n      __sum += __df65.__memory();");
    gold.append("\n      __sum += __df66.__memory();");
    gold.append("\n      __sum += __df67.__memory();");
    gold.append("\n      __sum += __df68.__memory();");
    gold.append("\n      __sum += __df69.__memory();");
    gold.append("\n      __sum += __df70.__memory();");
    gold.append("\n      __sum += __df71.__memory();");
    gold.append("\n      __sum += __df72.__memory();");
    gold.append("\n      __sum += __df73.__memory();");
    gold.append("\n      __sum += __df74.__memory();");
    gold.append("\n      __sum += __df75.__memory();");
    gold.append("\n      __sum += __df76.__memory();");
    gold.append("\n      __sum += __df77.__memory();");
    gold.append("\n      __sum += __df78.__memory();");
    gold.append("\n      __sum += __df79.__memory();");
    gold.append("\n      __sum += __df80.__memory();");
    gold.append("\n      __sum += __df81.__memory();");
    gold.append("\n      __sum += __df82.__memory();");
    gold.append("\n      __sum += __df83.__memory();");
    gold.append("\n      __sum += __df84.__memory();");
    gold.append("\n      __sum += __df85.__memory();");
    gold.append("\n      __sum += __df86.__memory();");
    gold.append("\n      __sum += __df87.__memory();");
    gold.append("\n      __sum += __df88.__memory();");
    gold.append("\n      __sum += __df89.__memory();");
    gold.append("\n      __sum += __df90.__memory();");
    gold.append("\n      __sum += __df91.__memory();");
    gold.append("\n      __sum += __df92.__memory();");
    gold.append("\n      __sum += __df93.__memory();");
    gold.append("\n      __sum += __df94.__memory();");
    gold.append("\n      __sum += __df95.__memory();");
    gold.append("\n      __sum += __df96.__memory();");
    gold.append("\n      __sum += __df97.__memory();");
    gold.append("\n      __sum += __df98.__memory();");
    gold.append("\n      __sum += __df99.__memory();");
    gold.append("\n      __sum += __df100.__memory();");
    gold.append("\n      __sum += __df101.__memory();");
    gold.append("\n      __sum += __df102.__memory();");
    gold.append("\n      __sum += __df103.__memory();");
    gold.append("\n      __sum += __df104.__memory();");
    gold.append("\n      __sum += __df105.__memory();");
    gold.append("\n      __sum += __df106.__memory();");
    gold.append("\n      __sum += __df107.__memory();");
    gold.append("\n      __sum += __df108.__memory();");
    gold.append("\n      __sum += __df109.__memory();");
    gold.append("\n      __sum += __df110.__memory();");
    gold.append("\n      __sum += __df111.__memory();");
    gold.append("\n      __sum += __df112.__memory();");
    gold.append("\n      __sum += __df113.__memory();");
    gold.append("\n      __sum += __df114.__memory();");
    gold.append("\n      __sum += __df115.__memory();");
    gold.append("\n      __sum += __df116.__memory();");
    gold.append("\n      __sum += __df117.__memory();");
    gold.append("\n      __sum += __df118.__memory();");
    gold.append("\n      __sum += __df119.__memory();");
    gold.append("\n      __sum += __df120.__memory();");
    gold.append("\n      __sum += __df121.__memory();");
    gold.append("\n      __sum += __df122.__memory();");
    gold.append("\n      __sum += __df123.__memory();");
    gold.append("\n      __sum += __df124.__memory();");
    gold.append("\n      __sum += __df125.__memory();");
    gold.append("\n      __sum += __df126.__memory();");
    gold.append("\n      __sum += __df127.__memory();");
    gold.append("\n      __sum += __df128.__memory();");
    gold.append("\n      __sum += __df129.__memory();");
    gold.append("\n      __sum += __df130.__memory();");
    gold.append("\n      __sum += __df131.__memory();");
    gold.append("\n      __sum += __df132.__memory();");
    gold.append("\n      __sum += __df133.__memory();");
    gold.append("\n      __sum += __df134.__memory();");
    gold.append("\n      __sum += __df135.__memory();");
    gold.append("\n      __sum += __df136.__memory();");
    gold.append("\n      __sum += __df137.__memory();");
    gold.append("\n      __sum += __df138.__memory();");
    gold.append("\n      __sum += __df139.__memory();");
    gold.append("\n      __sum += __df140.__memory();");
    gold.append("\n      __sum += __df141.__memory();");
    gold.append("\n      __sum += __df142.__memory();");
    gold.append("\n      __sum += __df143.__memory();");
    gold.append("\n      __sum += __df144.__memory();");
    gold.append("\n      __sum += __df145.__memory();");
    gold.append("\n      __sum += __df146.__memory();");
    gold.append("\n      __sum += __df147.__memory();");
    gold.append("\n      __sum += __df148.__memory();");
    gold.append("\n      __sum += __df149.__memory();");
    gold.append("\n      __sum += __df150.__memory();");
    gold.append("\n      __sum += __df151.__memory();");
    gold.append("\n      __sum += __df152.__memory();");
    gold.append("\n      __sum += __df153.__memory();");
    gold.append("\n      __sum += __df154.__memory();");
    gold.append("\n      __sum += __df155.__memory();");
    gold.append("\n      __sum += __df156.__memory();");
    gold.append("\n      __sum += __df157.__memory();");
    gold.append("\n      __sum += __df158.__memory();");
    gold.append("\n      __sum += __df159.__memory();");
    gold.append("\n      __sum += __df160.__memory();");
    gold.append("\n      __sum += __df161.__memory();");
    gold.append("\n      __sum += __df162.__memory();");
    gold.append("\n      __sum += __df163.__memory();");
    gold.append("\n      __sum += __df164.__memory();");
    gold.append("\n      __sum += __df165.__memory();");
    gold.append("\n      __sum += __df166.__memory();");
    gold.append("\n      __sum += __df167.__memory();");
    gold.append("\n      __sum += __df168.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(OperationsSubtractionCases_7 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      __code_cost += 169;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gf0 != __item.f0.getGeneration()) {");
    gold.append("\n        __df0.show(__item.f0.get(), __obj.planField(\"f0\"));");
    gold.append("\n        __gf0 = __item.f0.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf1 != __item.f1.getGeneration()) {");
    gold.append("\n        __df1.show(__item.f1.get(), __obj.planField(\"f1\"));");
    gold.append("\n        __gf1 = __item.f1.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf2 != __item.f2.getGeneration()) {");
    gold.append("\n        __df2.show(__item.f2.get(), __obj.planField(\"f2\"));");
    gold.append("\n        __gf2 = __item.f2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf3 != __item.f3.getGeneration()) {");
    gold.append("\n        if (__item.f3.get().has()) {");
    gold.append("\n          Double __maybeElement0 = (Double)(__item.f3.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement1 = __df3.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement1.show(__maybeElement0, __obj.planField(\"f3\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df3.hide(__obj.planField(\"f3\"));");
    gold.append("\n        }");
    gold.append("\n        __gf3 = __item.f3.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf4 != __item.f4.getGeneration()) {");
    gold.append("\n        if (__item.f4.get().has()) {");
    gold.append("\n          Double __maybeElement2 = (Double)(__item.f4.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement3 = __df4.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement3.show(__maybeElement2, __obj.planField(\"f4\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df4.hide(__obj.planField(\"f4\"));");
    gold.append("\n        }");
    gold.append("\n        __gf4 = __item.f4.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf5 != __item.f5.getGeneration()) {");
    gold.append("\n        __df5.show(__item.f5.get(), __obj.planField(\"f5\"));");
    gold.append("\n        __gf5 = __item.f5.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf6 != __item.f6.getGeneration()) {");
    gold.append("\n        if (__item.f6.get().has()) {");
    gold.append("\n          NtComplex __maybeElement4 = (NtComplex)(__item.f6.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement5 = __df6.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement5.show(__maybeElement4, __obj.planField(\"f6\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df6.hide(__obj.planField(\"f6\"));");
    gold.append("\n        }");
    gold.append("\n        __gf6 = __item.f6.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf7 != __item.f7.getGeneration()) {");
    gold.append("\n        if (__item.f7.get().has()) {");
    gold.append("\n          NtComplex __maybeElement6 = (NtComplex)(__item.f7.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement7 = __df7.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement7.show(__maybeElement6, __obj.planField(\"f7\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df7.hide(__obj.planField(\"f7\"));");
    gold.append("\n        }");
    gold.append("\n        __gf7 = __item.f7.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf8 != __item.f8.getGeneration()) {");
    gold.append("\n        __df8.show(__item.f8.get(), __obj.planField(\"f8\"));");
    gold.append("\n        __gf8 = __item.f8.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf9 != __item.f9.getGeneration()) {");
    gold.append("\n        __df9.show(__item.f9.get(), __obj.planField(\"f9\"));");
    gold.append("\n        __gf9 = __item.f9.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf10 != __item.f10.getGeneration()) {");
    gold.append("\n        __df10.show(__item.f10.get(), __obj.planField(\"f10\"));");
    gold.append("\n        __gf10 = __item.f10.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf11 != __item.f11.getGeneration()) {");
    gold.append("\n        __df11.show(__item.f11.get(), __obj.planField(\"f11\"));");
    gold.append("\n        __gf11 = __item.f11.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf12 != __item.f12.getGeneration()) {");
    gold.append("\n        if (__item.f12.get().has()) {");
    gold.append("\n          NtComplex __maybeElement8 = (NtComplex)(__item.f12.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement9 = __df12.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement9.show(__maybeElement8, __obj.planField(\"f12\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df12.hide(__obj.planField(\"f12\"));");
    gold.append("\n        }");
    gold.append("\n        __gf12 = __item.f12.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf13 != __item.f13.getGeneration()) {");
    gold.append("\n        __df13.show(__item.f13.get(), __obj.planField(\"f13\"));");
    gold.append("\n        __gf13 = __item.f13.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf14 != __item.f14.getGeneration()) {");
    gold.append("\n        __df14.show(__item.f14.get(), __obj.planField(\"f14\"));");
    gold.append("\n        __gf14 = __item.f14.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf15 != __item.f15.getGeneration()) {");
    gold.append("\n        __df15.show(__item.f15.get(), __obj.planField(\"f15\"));");
    gold.append("\n        __gf15 = __item.f15.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf16 != __item.f16.getGeneration()) {");
    gold.append("\n        if (__item.f16.get().has()) {");
    gold.append("\n          Double __maybeElement10 = (Double)(__item.f16.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement11 = __df16.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement11.show(__maybeElement10, __obj.planField(\"f16\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df16.hide(__obj.planField(\"f16\"));");
    gold.append("\n        }");
    gold.append("\n        __gf16 = __item.f16.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf17 != __item.f17.getGeneration()) {");
    gold.append("\n        if (__item.f17.get().has()) {");
    gold.append("\n          Double __maybeElement12 = (Double)(__item.f17.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement13 = __df17.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement13.show(__maybeElement12, __obj.planField(\"f17\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df17.hide(__obj.planField(\"f17\"));");
    gold.append("\n        }");
    gold.append("\n        __gf17 = __item.f17.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf18 != __item.f18.getGeneration()) {");
    gold.append("\n        __df18.show(__item.f18.get(), __obj.planField(\"f18\"));");
    gold.append("\n        __gf18 = __item.f18.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf19 != __item.f19.getGeneration()) {");
    gold.append("\n        if (__item.f19.get().has()) {");
    gold.append("\n          NtComplex __maybeElement14 = (NtComplex)(__item.f19.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement15 = __df19.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement15.show(__maybeElement14, __obj.planField(\"f19\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df19.hide(__obj.planField(\"f19\"));");
    gold.append("\n        }");
    gold.append("\n        __gf19 = __item.f19.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf20 != __item.f20.getGeneration()) {");
    gold.append("\n        if (__item.f20.get().has()) {");
    gold.append("\n          NtComplex __maybeElement16 = (NtComplex)(__item.f20.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement17 = __df20.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement17.show(__maybeElement16, __obj.planField(\"f20\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df20.hide(__obj.planField(\"f20\"));");
    gold.append("\n        }");
    gold.append("\n        __gf20 = __item.f20.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf21 != __item.f21.getGeneration()) {");
    gold.append("\n        __df21.show(__item.f21.get(), __obj.planField(\"f21\"));");
    gold.append("\n        __gf21 = __item.f21.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf22 != __item.f22.getGeneration()) {");
    gold.append("\n        __df22.show(__item.f22.get(), __obj.planField(\"f22\"));");
    gold.append("\n        __gf22 = __item.f22.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf23 != __item.f23.getGeneration()) {");
    gold.append("\n        __df23.show(__item.f23.get(), __obj.planField(\"f23\"));");
    gold.append("\n        __gf23 = __item.f23.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf24 != __item.f24.getGeneration()) {");
    gold.append("\n        __df24.show(__item.f24.get(), __obj.planField(\"f24\"));");
    gold.append("\n        __gf24 = __item.f24.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf25 != __item.f25.getGeneration()) {");
    gold.append("\n        if (__item.f25.get().has()) {");
    gold.append("\n          NtComplex __maybeElement18 = (NtComplex)(__item.f25.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement19 = __df25.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement19.show(__maybeElement18, __obj.planField(\"f25\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df25.hide(__obj.planField(\"f25\"));");
    gold.append("\n        }");
    gold.append("\n        __gf25 = __item.f25.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf26 != __item.f26.getGeneration()) {");
    gold.append("\n        __df26.show(__item.f26.get(), __obj.planField(\"f26\"));");
    gold.append("\n        __gf26 = __item.f26.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf27 != __item.f27.getGeneration()) {");
    gold.append("\n        __df27.show(__item.f27.get(), __obj.planField(\"f27\"));");
    gold.append("\n        __gf27 = __item.f27.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf28 != __item.f28.getGeneration()) {");
    gold.append("\n        __df28.show(__item.f28.get(), __obj.planField(\"f28\"));");
    gold.append("\n        __gf28 = __item.f28.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf29 != __item.f29.getGeneration()) {");
    gold.append("\n        if (__item.f29.get().has()) {");
    gold.append("\n          Double __maybeElement20 = (Double)(__item.f29.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement21 = __df29.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement21.show(__maybeElement20, __obj.planField(\"f29\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df29.hide(__obj.planField(\"f29\"));");
    gold.append("\n        }");
    gold.append("\n        __gf29 = __item.f29.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf30 != __item.f30.getGeneration()) {");
    gold.append("\n        if (__item.f30.get().has()) {");
    gold.append("\n          Double __maybeElement22 = (Double)(__item.f30.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement23 = __df30.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement23.show(__maybeElement22, __obj.planField(\"f30\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df30.hide(__obj.planField(\"f30\"));");
    gold.append("\n        }");
    gold.append("\n        __gf30 = __item.f30.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf31 != __item.f31.getGeneration()) {");
    gold.append("\n        __df31.show(__item.f31.get(), __obj.planField(\"f31\"));");
    gold.append("\n        __gf31 = __item.f31.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf32 != __item.f32.getGeneration()) {");
    gold.append("\n        if (__item.f32.get().has()) {");
    gold.append("\n          NtComplex __maybeElement24 = (NtComplex)(__item.f32.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement25 = __df32.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement25.show(__maybeElement24, __obj.planField(\"f32\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df32.hide(__obj.planField(\"f32\"));");
    gold.append("\n        }");
    gold.append("\n        __gf32 = __item.f32.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf33 != __item.f33.getGeneration()) {");
    gold.append("\n        if (__item.f33.get().has()) {");
    gold.append("\n          NtComplex __maybeElement26 = (NtComplex)(__item.f33.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement27 = __df33.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement27.show(__maybeElement26, __obj.planField(\"f33\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df33.hide(__obj.planField(\"f33\"));");
    gold.append("\n        }");
    gold.append("\n        __gf33 = __item.f33.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf34 != __item.f34.getGeneration()) {");
    gold.append("\n        __df34.show(__item.f34.get(), __obj.planField(\"f34\"));");
    gold.append("\n        __gf34 = __item.f34.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf35 != __item.f35.getGeneration()) {");
    gold.append("\n        __df35.show(__item.f35.get(), __obj.planField(\"f35\"));");
    gold.append("\n        __gf35 = __item.f35.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf36 != __item.f36.getGeneration()) {");
    gold.append("\n        __df36.show(__item.f36.get(), __obj.planField(\"f36\"));");
    gold.append("\n        __gf36 = __item.f36.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf37 != __item.f37.getGeneration()) {");
    gold.append("\n        __df37.show(__item.f37.get(), __obj.planField(\"f37\"));");
    gold.append("\n        __gf37 = __item.f37.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf38 != __item.f38.getGeneration()) {");
    gold.append("\n        if (__item.f38.get().has()) {");
    gold.append("\n          NtComplex __maybeElement28 = (NtComplex)(__item.f38.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement29 = __df38.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement29.show(__maybeElement28, __obj.planField(\"f38\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df38.hide(__obj.planField(\"f38\"));");
    gold.append("\n        }");
    gold.append("\n        __gf38 = __item.f38.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf39 != __item.f39.getGeneration()) {");
    gold.append("\n        if (__item.f39.get().has()) {");
    gold.append("\n          Double __maybeElement30 = (Double)(__item.f39.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement31 = __df39.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement31.show(__maybeElement30, __obj.planField(\"f39\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df39.hide(__obj.planField(\"f39\"));");
    gold.append("\n        }");
    gold.append("\n        __gf39 = __item.f39.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf40 != __item.f40.getGeneration()) {");
    gold.append("\n        if (__item.f40.get().has()) {");
    gold.append("\n          Double __maybeElement32 = (Double)(__item.f40.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement33 = __df40.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement33.show(__maybeElement32, __obj.planField(\"f40\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df40.hide(__obj.planField(\"f40\"));");
    gold.append("\n        }");
    gold.append("\n        __gf40 = __item.f40.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf41 != __item.f41.getGeneration()) {");
    gold.append("\n        if (__item.f41.get().has()) {");
    gold.append("\n          Double __maybeElement34 = (Double)(__item.f41.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement35 = __df41.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement35.show(__maybeElement34, __obj.planField(\"f41\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df41.hide(__obj.planField(\"f41\"));");
    gold.append("\n        }");
    gold.append("\n        __gf41 = __item.f41.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf42 != __item.f42.getGeneration()) {");
    gold.append("\n        if (__item.f42.get().has()) {");
    gold.append("\n          Double __maybeElement36 = (Double)(__item.f42.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement37 = __df42.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement37.show(__maybeElement36, __obj.planField(\"f42\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df42.hide(__obj.planField(\"f42\"));");
    gold.append("\n        }");
    gold.append("\n        __gf42 = __item.f42.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf43 != __item.f43.getGeneration()) {");
    gold.append("\n        if (__item.f43.get().has()) {");
    gold.append("\n          Double __maybeElement38 = (Double)(__item.f43.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement39 = __df43.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement39.show(__maybeElement38, __obj.planField(\"f43\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df43.hide(__obj.planField(\"f43\"));");
    gold.append("\n        }");
    gold.append("\n        __gf43 = __item.f43.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf44 != __item.f44.getGeneration()) {");
    gold.append("\n        if (__item.f44.get().has()) {");
    gold.append("\n          NtComplex __maybeElement40 = (NtComplex)(__item.f44.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement41 = __df44.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement41.show(__maybeElement40, __obj.planField(\"f44\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df44.hide(__obj.planField(\"f44\"));");
    gold.append("\n        }");
    gold.append("\n        __gf44 = __item.f44.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf45 != __item.f45.getGeneration()) {");
    gold.append("\n        if (__item.f45.get().has()) {");
    gold.append("\n          NtComplex __maybeElement42 = (NtComplex)(__item.f45.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement43 = __df45.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement43.show(__maybeElement42, __obj.planField(\"f45\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df45.hide(__obj.planField(\"f45\"));");
    gold.append("\n        }");
    gold.append("\n        __gf45 = __item.f45.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf46 != __item.f46.getGeneration()) {");
    gold.append("\n        if (__item.f46.get().has()) {");
    gold.append("\n          NtComplex __maybeElement44 = (NtComplex)(__item.f46.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement45 = __df46.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement45.show(__maybeElement44, __obj.planField(\"f46\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df46.hide(__obj.planField(\"f46\"));");
    gold.append("\n        }");
    gold.append("\n        __gf46 = __item.f46.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf47 != __item.f47.getGeneration()) {");
    gold.append("\n        if (__item.f47.get().has()) {");
    gold.append("\n          Double __maybeElement46 = (Double)(__item.f47.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement47 = __df47.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement47.show(__maybeElement46, __obj.planField(\"f47\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df47.hide(__obj.planField(\"f47\"));");
    gold.append("\n        }");
    gold.append("\n        __gf47 = __item.f47.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf48 != __item.f48.getGeneration()) {");
    gold.append("\n        if (__item.f48.get().has()) {");
    gold.append("\n          Double __maybeElement48 = (Double)(__item.f48.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement49 = __df48.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement49.show(__maybeElement48, __obj.planField(\"f48\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df48.hide(__obj.planField(\"f48\"));");
    gold.append("\n        }");
    gold.append("\n        __gf48 = __item.f48.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf49 != __item.f49.getGeneration()) {");
    gold.append("\n        if (__item.f49.get().has()) {");
    gold.append("\n          Double __maybeElement50 = (Double)(__item.f49.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement51 = __df49.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement51.show(__maybeElement50, __obj.planField(\"f49\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df49.hide(__obj.planField(\"f49\"));");
    gold.append("\n        }");
    gold.append("\n        __gf49 = __item.f49.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf50 != __item.f50.getGeneration()) {");
    gold.append("\n        if (__item.f50.get().has()) {");
    gold.append("\n          NtComplex __maybeElement52 = (NtComplex)(__item.f50.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement53 = __df50.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement53.show(__maybeElement52, __obj.planField(\"f50\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df50.hide(__obj.planField(\"f50\"));");
    gold.append("\n        }");
    gold.append("\n        __gf50 = __item.f50.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf51 != __item.f51.getGeneration()) {");
    gold.append("\n        if (__item.f51.get().has()) {");
    gold.append("\n          NtComplex __maybeElement54 = (NtComplex)(__item.f51.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement55 = __df51.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement55.show(__maybeElement54, __obj.planField(\"f51\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df51.hide(__obj.planField(\"f51\"));");
    gold.append("\n        }");
    gold.append("\n        __gf51 = __item.f51.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf52 != __item.f52.getGeneration()) {");
    gold.append("\n        if (__item.f52.get().has()) {");
    gold.append("\n          Double __maybeElement56 = (Double)(__item.f52.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement57 = __df52.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement57.show(__maybeElement56, __obj.planField(\"f52\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df52.hide(__obj.planField(\"f52\"));");
    gold.append("\n        }");
    gold.append("\n        __gf52 = __item.f52.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf53 != __item.f53.getGeneration()) {");
    gold.append("\n        if (__item.f53.get().has()) {");
    gold.append("\n          Double __maybeElement58 = (Double)(__item.f53.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement59 = __df53.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement59.show(__maybeElement58, __obj.planField(\"f53\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df53.hide(__obj.planField(\"f53\"));");
    gold.append("\n        }");
    gold.append("\n        __gf53 = __item.f53.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf54 != __item.f54.getGeneration()) {");
    gold.append("\n        if (__item.f54.get().has()) {");
    gold.append("\n          Double __maybeElement60 = (Double)(__item.f54.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement61 = __df54.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement61.show(__maybeElement60, __obj.planField(\"f54\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df54.hide(__obj.planField(\"f54\"));");
    gold.append("\n        }");
    gold.append("\n        __gf54 = __item.f54.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf55 != __item.f55.getGeneration()) {");
    gold.append("\n        if (__item.f55.get().has()) {");
    gold.append("\n          Double __maybeElement62 = (Double)(__item.f55.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement63 = __df55.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement63.show(__maybeElement62, __obj.planField(\"f55\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df55.hide(__obj.planField(\"f55\"));");
    gold.append("\n        }");
    gold.append("\n        __gf55 = __item.f55.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf56 != __item.f56.getGeneration()) {");
    gold.append("\n        if (__item.f56.get().has()) {");
    gold.append("\n          Double __maybeElement64 = (Double)(__item.f56.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement65 = __df56.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement65.show(__maybeElement64, __obj.planField(\"f56\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df56.hide(__obj.planField(\"f56\"));");
    gold.append("\n        }");
    gold.append("\n        __gf56 = __item.f56.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf57 != __item.f57.getGeneration()) {");
    gold.append("\n        if (__item.f57.get().has()) {");
    gold.append("\n          NtComplex __maybeElement66 = (NtComplex)(__item.f57.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement67 = __df57.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement67.show(__maybeElement66, __obj.planField(\"f57\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df57.hide(__obj.planField(\"f57\"));");
    gold.append("\n        }");
    gold.append("\n        __gf57 = __item.f57.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf58 != __item.f58.getGeneration()) {");
    gold.append("\n        if (__item.f58.get().has()) {");
    gold.append("\n          NtComplex __maybeElement68 = (NtComplex)(__item.f58.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement69 = __df58.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement69.show(__maybeElement68, __obj.planField(\"f58\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df58.hide(__obj.planField(\"f58\"));");
    gold.append("\n        }");
    gold.append("\n        __gf58 = __item.f58.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf59 != __item.f59.getGeneration()) {");
    gold.append("\n        if (__item.f59.get().has()) {");
    gold.append("\n          NtComplex __maybeElement70 = (NtComplex)(__item.f59.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement71 = __df59.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement71.show(__maybeElement70, __obj.planField(\"f59\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df59.hide(__obj.planField(\"f59\"));");
    gold.append("\n        }");
    gold.append("\n        __gf59 = __item.f59.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf60 != __item.f60.getGeneration()) {");
    gold.append("\n        if (__item.f60.get().has()) {");
    gold.append("\n          Double __maybeElement72 = (Double)(__item.f60.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement73 = __df60.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement73.show(__maybeElement72, __obj.planField(\"f60\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df60.hide(__obj.planField(\"f60\"));");
    gold.append("\n        }");
    gold.append("\n        __gf60 = __item.f60.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf61 != __item.f61.getGeneration()) {");
    gold.append("\n        if (__item.f61.get().has()) {");
    gold.append("\n          Double __maybeElement74 = (Double)(__item.f61.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement75 = __df61.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement75.show(__maybeElement74, __obj.planField(\"f61\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df61.hide(__obj.planField(\"f61\"));");
    gold.append("\n        }");
    gold.append("\n        __gf61 = __item.f61.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf62 != __item.f62.getGeneration()) {");
    gold.append("\n        if (__item.f62.get().has()) {");
    gold.append("\n          Double __maybeElement76 = (Double)(__item.f62.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement77 = __df62.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement77.show(__maybeElement76, __obj.planField(\"f62\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df62.hide(__obj.planField(\"f62\"));");
    gold.append("\n        }");
    gold.append("\n        __gf62 = __item.f62.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf63 != __item.f63.getGeneration()) {");
    gold.append("\n        if (__item.f63.get().has()) {");
    gold.append("\n          NtComplex __maybeElement78 = (NtComplex)(__item.f63.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement79 = __df63.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement79.show(__maybeElement78, __obj.planField(\"f63\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df63.hide(__obj.planField(\"f63\"));");
    gold.append("\n        }");
    gold.append("\n        __gf63 = __item.f63.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf64 != __item.f64.getGeneration()) {");
    gold.append("\n        if (__item.f64.get().has()) {");
    gold.append("\n          NtComplex __maybeElement80 = (NtComplex)(__item.f64.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement81 = __df64.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement81.show(__maybeElement80, __obj.planField(\"f64\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df64.hide(__obj.planField(\"f64\"));");
    gold.append("\n        }");
    gold.append("\n        __gf64 = __item.f64.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf65 != __item.f65.getGeneration()) {");
    gold.append("\n        __df65.show(__item.f65.get(), __obj.planField(\"f65\"));");
    gold.append("\n        __gf65 = __item.f65.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf66 != __item.f66.getGeneration()) {");
    gold.append("\n        __df66.show(__item.f66.get(), __obj.planField(\"f66\"));");
    gold.append("\n        __gf66 = __item.f66.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf67 != __item.f67.getGeneration()) {");
    gold.append("\n        __df67.show(__item.f67.get(), __obj.planField(\"f67\"));");
    gold.append("\n        __gf67 = __item.f67.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf68 != __item.f68.getGeneration()) {");
    gold.append("\n        if (__item.f68.get().has()) {");
    gold.append("\n          NtComplex __maybeElement82 = (NtComplex)(__item.f68.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement83 = __df68.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement83.show(__maybeElement82, __obj.planField(\"f68\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df68.hide(__obj.planField(\"f68\"));");
    gold.append("\n        }");
    gold.append("\n        __gf68 = __item.f68.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf69 != __item.f69.getGeneration()) {");
    gold.append("\n        if (__item.f69.get().has()) {");
    gold.append("\n          NtComplex __maybeElement84 = (NtComplex)(__item.f69.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement85 = __df69.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement85.show(__maybeElement84, __obj.planField(\"f69\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df69.hide(__obj.planField(\"f69\"));");
    gold.append("\n        }");
    gold.append("\n        __gf69 = __item.f69.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf70 != __item.f70.getGeneration()) {");
    gold.append("\n        __df70.show(__item.f70.get(), __obj.planField(\"f70\"));");
    gold.append("\n        __gf70 = __item.f70.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf71 != __item.f71.getGeneration()) {");
    gold.append("\n        if (__item.f71.get().has()) {");
    gold.append("\n          NtComplex __maybeElement86 = (NtComplex)(__item.f71.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement87 = __df71.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement87.show(__maybeElement86, __obj.planField(\"f71\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df71.hide(__obj.planField(\"f71\"));");
    gold.append("\n        }");
    gold.append("\n        __gf71 = __item.f71.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf72 != __item.f72.getGeneration()) {");
    gold.append("\n        if (__item.f72.get().has()) {");
    gold.append("\n          NtComplex __maybeElement88 = (NtComplex)(__item.f72.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement89 = __df72.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement89.show(__maybeElement88, __obj.planField(\"f72\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df72.hide(__obj.planField(\"f72\"));");
    gold.append("\n        }");
    gold.append("\n        __gf72 = __item.f72.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf73 != __item.f73.getGeneration()) {");
    gold.append("\n        __df73.show(__item.f73.get(), __obj.planField(\"f73\"));");
    gold.append("\n        __gf73 = __item.f73.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf74 != __item.f74.getGeneration()) {");
    gold.append("\n        __df74.show(__item.f74.get(), __obj.planField(\"f74\"));");
    gold.append("\n        __gf74 = __item.f74.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf75 != __item.f75.getGeneration()) {");
    gold.append("\n        __df75.show(__item.f75.get(), __obj.planField(\"f75\"));");
    gold.append("\n        __gf75 = __item.f75.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf76 != __item.f76.getGeneration()) {");
    gold.append("\n        __df76.show(__item.f76.get(), __obj.planField(\"f76\"));");
    gold.append("\n        __gf76 = __item.f76.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf77 != __item.f77.getGeneration()) {");
    gold.append("\n        if (__item.f77.get().has()) {");
    gold.append("\n          NtComplex __maybeElement90 = (NtComplex)(__item.f77.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement91 = __df77.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement91.show(__maybeElement90, __obj.planField(\"f77\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df77.hide(__obj.planField(\"f77\"));");
    gold.append("\n        }");
    gold.append("\n        __gf77 = __item.f77.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf78 != __item.f78.getGeneration()) {");
    gold.append("\n        if (__item.f78.get().has()) {");
    gold.append("\n          NtComplex __maybeElement92 = (NtComplex)(__item.f78.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement93 = __df78.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement93.show(__maybeElement92, __obj.planField(\"f78\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df78.hide(__obj.planField(\"f78\"));");
    gold.append("\n        }");
    gold.append("\n        __gf78 = __item.f78.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf79 != __item.f79.getGeneration()) {");
    gold.append("\n        if (__item.f79.get().has()) {");
    gold.append("\n          NtComplex __maybeElement94 = (NtComplex)(__item.f79.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement95 = __df79.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement95.show(__maybeElement94, __obj.planField(\"f79\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df79.hide(__obj.planField(\"f79\"));");
    gold.append("\n        }");
    gold.append("\n        __gf79 = __item.f79.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf80 != __item.f80.getGeneration()) {");
    gold.append("\n        if (__item.f80.get().has()) {");
    gold.append("\n          NtComplex __maybeElement96 = (NtComplex)(__item.f80.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement97 = __df80.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement97.show(__maybeElement96, __obj.planField(\"f80\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df80.hide(__obj.planField(\"f80\"));");
    gold.append("\n        }");
    gold.append("\n        __gf80 = __item.f80.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf81 != __item.f81.getGeneration()) {");
    gold.append("\n        if (__item.f81.get().has()) {");
    gold.append("\n          NtComplex __maybeElement98 = (NtComplex)(__item.f81.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement99 = __df81.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement99.show(__maybeElement98, __obj.planField(\"f81\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df81.hide(__obj.planField(\"f81\"));");
    gold.append("\n        }");
    gold.append("\n        __gf81 = __item.f81.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf82 != __item.f82.getGeneration()) {");
    gold.append("\n        if (__item.f82.get().has()) {");
    gold.append("\n          NtComplex __maybeElement100 = (NtComplex)(__item.f82.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement101 = __df82.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement101.show(__maybeElement100, __obj.planField(\"f82\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df82.hide(__obj.planField(\"f82\"));");
    gold.append("\n        }");
    gold.append("\n        __gf82 = __item.f82.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf83 != __item.f83.getGeneration()) {");
    gold.append("\n        if (__item.f83.get().has()) {");
    gold.append("\n          NtComplex __maybeElement102 = (NtComplex)(__item.f83.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement103 = __df83.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement103.show(__maybeElement102, __obj.planField(\"f83\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df83.hide(__obj.planField(\"f83\"));");
    gold.append("\n        }");
    gold.append("\n        __gf83 = __item.f83.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf84 != __item.f84.getGeneration()) {");
    gold.append("\n        if (__item.f84.get().has()) {");
    gold.append("\n          NtComplex __maybeElement104 = (NtComplex)(__item.f84.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement105 = __df84.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement105.show(__maybeElement104, __obj.planField(\"f84\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df84.hide(__obj.planField(\"f84\"));");
    gold.append("\n        }");
    gold.append("\n        __gf84 = __item.f84.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf85 != __item.f85.getGeneration()) {");
    gold.append("\n        if (__item.f85.get().has()) {");
    gold.append("\n          NtComplex __maybeElement106 = (NtComplex)(__item.f85.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement107 = __df85.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement107.show(__maybeElement106, __obj.planField(\"f85\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df85.hide(__obj.planField(\"f85\"));");
    gold.append("\n        }");
    gold.append("\n        __gf85 = __item.f85.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf86 != __item.f86.getGeneration()) {");
    gold.append("\n        if (__item.f86.get().has()) {");
    gold.append("\n          NtComplex __maybeElement108 = (NtComplex)(__item.f86.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement109 = __df86.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement109.show(__maybeElement108, __obj.planField(\"f86\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df86.hide(__obj.planField(\"f86\"));");
    gold.append("\n        }");
    gold.append("\n        __gf86 = __item.f86.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf87 != __item.f87.getGeneration()) {");
    gold.append("\n        if (__item.f87.get().has()) {");
    gold.append("\n          NtComplex __maybeElement110 = (NtComplex)(__item.f87.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement111 = __df87.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement111.show(__maybeElement110, __obj.planField(\"f87\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df87.hide(__obj.planField(\"f87\"));");
    gold.append("\n        }");
    gold.append("\n        __gf87 = __item.f87.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf88 != __item.f88.getGeneration()) {");
    gold.append("\n        if (__item.f88.get().has()) {");
    gold.append("\n          NtComplex __maybeElement112 = (NtComplex)(__item.f88.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement113 = __df88.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement113.show(__maybeElement112, __obj.planField(\"f88\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df88.hide(__obj.planField(\"f88\"));");
    gold.append("\n        }");
    gold.append("\n        __gf88 = __item.f88.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf89 != __item.f89.getGeneration()) {");
    gold.append("\n        if (__item.f89.get().has()) {");
    gold.append("\n          NtComplex __maybeElement114 = (NtComplex)(__item.f89.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement115 = __df89.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement115.show(__maybeElement114, __obj.planField(\"f89\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df89.hide(__obj.planField(\"f89\"));");
    gold.append("\n        }");
    gold.append("\n        __gf89 = __item.f89.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf90 != __item.f90.getGeneration()) {");
    gold.append("\n        if (__item.f90.get().has()) {");
    gold.append("\n          NtComplex __maybeElement116 = (NtComplex)(__item.f90.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement117 = __df90.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement117.show(__maybeElement116, __obj.planField(\"f90\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df90.hide(__obj.planField(\"f90\"));");
    gold.append("\n        }");
    gold.append("\n        __gf90 = __item.f90.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf91 != __item.f91.getGeneration()) {");
    gold.append("\n        if (__item.f91.get().has()) {");
    gold.append("\n          NtComplex __maybeElement118 = (NtComplex)(__item.f91.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement119 = __df91.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement119.show(__maybeElement118, __obj.planField(\"f91\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df91.hide(__obj.planField(\"f91\"));");
    gold.append("\n        }");
    gold.append("\n        __gf91 = __item.f91.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf92 != __item.f92.getGeneration()) {");
    gold.append("\n        if (__item.f92.get().has()) {");
    gold.append("\n          NtComplex __maybeElement120 = (NtComplex)(__item.f92.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement121 = __df92.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement121.show(__maybeElement120, __obj.planField(\"f92\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df92.hide(__obj.planField(\"f92\"));");
    gold.append("\n        }");
    gold.append("\n        __gf92 = __item.f92.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf93 != __item.f93.getGeneration()) {");
    gold.append("\n        if (__item.f93.get().has()) {");
    gold.append("\n          NtComplex __maybeElement122 = (NtComplex)(__item.f93.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement123 = __df93.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement123.show(__maybeElement122, __obj.planField(\"f93\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df93.hide(__obj.planField(\"f93\"));");
    gold.append("\n        }");
    gold.append("\n        __gf93 = __item.f93.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf94 != __item.f94.getGeneration()) {");
    gold.append("\n        if (__item.f94.get().has()) {");
    gold.append("\n          NtComplex __maybeElement124 = (NtComplex)(__item.f94.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement125 = __df94.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement125.show(__maybeElement124, __obj.planField(\"f94\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df94.hide(__obj.planField(\"f94\"));");
    gold.append("\n        }");
    gold.append("\n        __gf94 = __item.f94.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf95 != __item.f95.getGeneration()) {");
    gold.append("\n        if (__item.f95.get().has()) {");
    gold.append("\n          NtComplex __maybeElement126 = (NtComplex)(__item.f95.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement127 = __df95.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement127.show(__maybeElement126, __obj.planField(\"f95\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df95.hide(__obj.planField(\"f95\"));");
    gold.append("\n        }");
    gold.append("\n        __gf95 = __item.f95.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf96 != __item.f96.getGeneration()) {");
    gold.append("\n        if (__item.f96.get().has()) {");
    gold.append("\n          NtComplex __maybeElement128 = (NtComplex)(__item.f96.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement129 = __df96.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement129.show(__maybeElement128, __obj.planField(\"f96\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df96.hide(__obj.planField(\"f96\"));");
    gold.append("\n        }");
    gold.append("\n        __gf96 = __item.f96.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf97 != __item.f97.getGeneration()) {");
    gold.append("\n        if (__item.f97.get().has()) {");
    gold.append("\n          NtComplex __maybeElement130 = (NtComplex)(__item.f97.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement131 = __df97.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement131.show(__maybeElement130, __obj.planField(\"f97\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df97.hide(__obj.planField(\"f97\"));");
    gold.append("\n        }");
    gold.append("\n        __gf97 = __item.f97.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf98 != __item.f98.getGeneration()) {");
    gold.append("\n        if (__item.f98.get().has()) {");
    gold.append("\n          NtComplex __maybeElement132 = (NtComplex)(__item.f98.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement133 = __df98.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement133.show(__maybeElement132, __obj.planField(\"f98\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df98.hide(__obj.planField(\"f98\"));");
    gold.append("\n        }");
    gold.append("\n        __gf98 = __item.f98.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf99 != __item.f99.getGeneration()) {");
    gold.append("\n        if (__item.f99.get().has()) {");
    gold.append("\n          NtComplex __maybeElement134 = (NtComplex)(__item.f99.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement135 = __df99.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement135.show(__maybeElement134, __obj.planField(\"f99\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df99.hide(__obj.planField(\"f99\"));");
    gold.append("\n        }");
    gold.append("\n        __gf99 = __item.f99.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf100 != __item.f100.getGeneration()) {");
    gold.append("\n        if (__item.f100.get().has()) {");
    gold.append("\n          NtComplex __maybeElement136 = (NtComplex)(__item.f100.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement137 = __df100.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement137.show(__maybeElement136, __obj.planField(\"f100\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df100.hide(__obj.planField(\"f100\"));");
    gold.append("\n        }");
    gold.append("\n        __gf100 = __item.f100.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf101 != __item.f101.getGeneration()) {");
    gold.append("\n        if (__item.f101.get().has()) {");
    gold.append("\n          NtComplex __maybeElement138 = (NtComplex)(__item.f101.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement139 = __df101.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement139.show(__maybeElement138, __obj.planField(\"f101\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df101.hide(__obj.planField(\"f101\"));");
    gold.append("\n        }");
    gold.append("\n        __gf101 = __item.f101.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf102 != __item.f102.getGeneration()) {");
    gold.append("\n        if (__item.f102.get().has()) {");
    gold.append("\n          NtComplex __maybeElement140 = (NtComplex)(__item.f102.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement141 = __df102.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement141.show(__maybeElement140, __obj.planField(\"f102\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df102.hide(__obj.planField(\"f102\"));");
    gold.append("\n        }");
    gold.append("\n        __gf102 = __item.f102.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf103 != __item.f103.getGeneration()) {");
    gold.append("\n        if (__item.f103.get().has()) {");
    gold.append("\n          NtComplex __maybeElement142 = (NtComplex)(__item.f103.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement143 = __df103.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement143.show(__maybeElement142, __obj.planField(\"f103\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df103.hide(__obj.planField(\"f103\"));");
    gold.append("\n        }");
    gold.append("\n        __gf103 = __item.f103.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf104 != __item.f104.getGeneration()) {");
    gold.append("\n        __df104.show(__item.f104.get(), __obj.planField(\"f104\"));");
    gold.append("\n        __gf104 = __item.f104.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf105 != __item.f105.getGeneration()) {");
    gold.append("\n        __df105.show(__item.f105.get(), __obj.planField(\"f105\"));");
    gold.append("\n        __gf105 = __item.f105.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf106 != __item.f106.getGeneration()) {");
    gold.append("\n        __df106.show(__item.f106.get(), __obj.planField(\"f106\"));");
    gold.append("\n        __gf106 = __item.f106.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf107 != __item.f107.getGeneration()) {");
    gold.append("\n        if (__item.f107.get().has()) {");
    gold.append("\n          Double __maybeElement144 = (Double)(__item.f107.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement145 = __df107.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement145.show(__maybeElement144, __obj.planField(\"f107\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df107.hide(__obj.planField(\"f107\"));");
    gold.append("\n        }");
    gold.append("\n        __gf107 = __item.f107.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf108 != __item.f108.getGeneration()) {");
    gold.append("\n        if (__item.f108.get().has()) {");
    gold.append("\n          Double __maybeElement146 = (Double)(__item.f108.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement147 = __df108.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement147.show(__maybeElement146, __obj.planField(\"f108\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df108.hide(__obj.planField(\"f108\"));");
    gold.append("\n        }");
    gold.append("\n        __gf108 = __item.f108.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf109 != __item.f109.getGeneration()) {");
    gold.append("\n        __df109.show(__item.f109.get(), __obj.planField(\"f109\"));");
    gold.append("\n        __gf109 = __item.f109.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf110 != __item.f110.getGeneration()) {");
    gold.append("\n        if (__item.f110.get().has()) {");
    gold.append("\n          NtComplex __maybeElement148 = (NtComplex)(__item.f110.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement149 = __df110.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement149.show(__maybeElement148, __obj.planField(\"f110\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df110.hide(__obj.planField(\"f110\"));");
    gold.append("\n        }");
    gold.append("\n        __gf110 = __item.f110.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf111 != __item.f111.getGeneration()) {");
    gold.append("\n        if (__item.f111.get().has()) {");
    gold.append("\n          NtComplex __maybeElement150 = (NtComplex)(__item.f111.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement151 = __df111.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement151.show(__maybeElement150, __obj.planField(\"f111\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df111.hide(__obj.planField(\"f111\"));");
    gold.append("\n        }");
    gold.append("\n        __gf111 = __item.f111.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf112 != __item.f112.getGeneration()) {");
    gold.append("\n        __df112.show(__item.f112.get(), __obj.planField(\"f112\"));");
    gold.append("\n        __gf112 = __item.f112.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf113 != __item.f113.getGeneration()) {");
    gold.append("\n        __df113.show(__item.f113.get(), __obj.planField(\"f113\"));");
    gold.append("\n        __gf113 = __item.f113.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf114 != __item.f114.getGeneration()) {");
    gold.append("\n        __df114.show(__item.f114.get(), __obj.planField(\"f114\"));");
    gold.append("\n        __gf114 = __item.f114.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf115 != __item.f115.getGeneration()) {");
    gold.append("\n        __df115.show(__item.f115.get(), __obj.planField(\"f115\"));");
    gold.append("\n        __gf115 = __item.f115.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf116 != __item.f116.getGeneration()) {");
    gold.append("\n        if (__item.f116.get().has()) {");
    gold.append("\n          NtComplex __maybeElement152 = (NtComplex)(__item.f116.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement153 = __df116.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement153.show(__maybeElement152, __obj.planField(\"f116\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df116.hide(__obj.planField(\"f116\"));");
    gold.append("\n        }");
    gold.append("\n        __gf116 = __item.f116.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf117 != __item.f117.getGeneration()) {");
    gold.append("\n        __df117.show(__item.f117.get(), __obj.planField(\"f117\"));");
    gold.append("\n        __gf117 = __item.f117.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf118 != __item.f118.getGeneration()) {");
    gold.append("\n        __df118.show(__item.f118.get(), __obj.planField(\"f118\"));");
    gold.append("\n        __gf118 = __item.f118.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf119 != __item.f119.getGeneration()) {");
    gold.append("\n        __df119.show(__item.f119.get(), __obj.planField(\"f119\"));");
    gold.append("\n        __gf119 = __item.f119.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf120 != __item.f120.getGeneration()) {");
    gold.append("\n        if (__item.f120.get().has()) {");
    gold.append("\n          Double __maybeElement154 = (Double)(__item.f120.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement155 = __df120.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement155.show(__maybeElement154, __obj.planField(\"f120\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df120.hide(__obj.planField(\"f120\"));");
    gold.append("\n        }");
    gold.append("\n        __gf120 = __item.f120.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf121 != __item.f121.getGeneration()) {");
    gold.append("\n        if (__item.f121.get().has()) {");
    gold.append("\n          Double __maybeElement156 = (Double)(__item.f121.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement157 = __df121.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement157.show(__maybeElement156, __obj.planField(\"f121\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df121.hide(__obj.planField(\"f121\"));");
    gold.append("\n        }");
    gold.append("\n        __gf121 = __item.f121.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf122 != __item.f122.getGeneration()) {");
    gold.append("\n        __df122.show(__item.f122.get(), __obj.planField(\"f122\"));");
    gold.append("\n        __gf122 = __item.f122.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf123 != __item.f123.getGeneration()) {");
    gold.append("\n        if (__item.f123.get().has()) {");
    gold.append("\n          NtComplex __maybeElement158 = (NtComplex)(__item.f123.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement159 = __df123.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement159.show(__maybeElement158, __obj.planField(\"f123\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df123.hide(__obj.planField(\"f123\"));");
    gold.append("\n        }");
    gold.append("\n        __gf123 = __item.f123.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf124 != __item.f124.getGeneration()) {");
    gold.append("\n        if (__item.f124.get().has()) {");
    gold.append("\n          NtComplex __maybeElement160 = (NtComplex)(__item.f124.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement161 = __df124.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement161.show(__maybeElement160, __obj.planField(\"f124\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df124.hide(__obj.planField(\"f124\"));");
    gold.append("\n        }");
    gold.append("\n        __gf124 = __item.f124.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf125 != __item.f125.getGeneration()) {");
    gold.append("\n        __df125.show(__item.f125.get(), __obj.planField(\"f125\"));");
    gold.append("\n        __gf125 = __item.f125.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf126 != __item.f126.getGeneration()) {");
    gold.append("\n        __df126.show(__item.f126.get(), __obj.planField(\"f126\"));");
    gold.append("\n        __gf126 = __item.f126.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf127 != __item.f127.getGeneration()) {");
    gold.append("\n        __df127.show(__item.f127.get(), __obj.planField(\"f127\"));");
    gold.append("\n        __gf127 = __item.f127.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf128 != __item.f128.getGeneration()) {");
    gold.append("\n        __df128.show(__item.f128.get(), __obj.planField(\"f128\"));");
    gold.append("\n        __gf128 = __item.f128.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf129 != __item.f129.getGeneration()) {");
    gold.append("\n        if (__item.f129.get().has()) {");
    gold.append("\n          NtComplex __maybeElement162 = (NtComplex)(__item.f129.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement163 = __df129.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement163.show(__maybeElement162, __obj.planField(\"f129\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df129.hide(__obj.planField(\"f129\"));");
    gold.append("\n        }");
    gold.append("\n        __gf129 = __item.f129.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf130 != __item.f130.getGeneration()) {");
    gold.append("\n        __df130.show(__item.f130.get(), __obj.planField(\"f130\"));");
    gold.append("\n        __gf130 = __item.f130.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf131 != __item.f131.getGeneration()) {");
    gold.append("\n        __df131.show(__item.f131.get(), __obj.planField(\"f131\"));");
    gold.append("\n        __gf131 = __item.f131.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf132 != __item.f132.getGeneration()) {");
    gold.append("\n        __df132.show(__item.f132.get(), __obj.planField(\"f132\"));");
    gold.append("\n        __gf132 = __item.f132.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf133 != __item.f133.getGeneration()) {");
    gold.append("\n        if (__item.f133.get().has()) {");
    gold.append("\n          Double __maybeElement164 = (Double)(__item.f133.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement165 = __df133.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement165.show(__maybeElement164, __obj.planField(\"f133\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df133.hide(__obj.planField(\"f133\"));");
    gold.append("\n        }");
    gold.append("\n        __gf133 = __item.f133.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf134 != __item.f134.getGeneration()) {");
    gold.append("\n        if (__item.f134.get().has()) {");
    gold.append("\n          Double __maybeElement166 = (Double)(__item.f134.get().get());");
    gold.append("\n          DDouble __maybeDeltaElement167 = __df134.get(() -> new DDouble());");
    gold.append("\n          __maybeDeltaElement167.show(__maybeElement166, __obj.planField(\"f134\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df134.hide(__obj.planField(\"f134\"));");
    gold.append("\n        }");
    gold.append("\n        __gf134 = __item.f134.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf135 != __item.f135.getGeneration()) {");
    gold.append("\n        __df135.show(__item.f135.get(), __obj.planField(\"f135\"));");
    gold.append("\n        __gf135 = __item.f135.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf136 != __item.f136.getGeneration()) {");
    gold.append("\n        if (__item.f136.get().has()) {");
    gold.append("\n          NtComplex __maybeElement168 = (NtComplex)(__item.f136.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement169 = __df136.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement169.show(__maybeElement168, __obj.planField(\"f136\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df136.hide(__obj.planField(\"f136\"));");
    gold.append("\n        }");
    gold.append("\n        __gf136 = __item.f136.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf137 != __item.f137.getGeneration()) {");
    gold.append("\n        if (__item.f137.get().has()) {");
    gold.append("\n          NtComplex __maybeElement170 = (NtComplex)(__item.f137.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement171 = __df137.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement171.show(__maybeElement170, __obj.planField(\"f137\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df137.hide(__obj.planField(\"f137\"));");
    gold.append("\n        }");
    gold.append("\n        __gf137 = __item.f137.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf138 != __item.f138.getGeneration()) {");
    gold.append("\n        __df138.show(__item.f138.get(), __obj.planField(\"f138\"));");
    gold.append("\n        __gf138 = __item.f138.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf139 != __item.f139.getGeneration()) {");
    gold.append("\n        __df139.show(__item.f139.get(), __obj.planField(\"f139\"));");
    gold.append("\n        __gf139 = __item.f139.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf140 != __item.f140.getGeneration()) {");
    gold.append("\n        __df140.show(__item.f140.get(), __obj.planField(\"f140\"));");
    gold.append("\n        __gf140 = __item.f140.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf141 != __item.f141.getGeneration()) {");
    gold.append("\n        __df141.show(__item.f141.get(), __obj.planField(\"f141\"));");
    gold.append("\n        __gf141 = __item.f141.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf142 != __item.f142.getGeneration()) {");
    gold.append("\n        if (__item.f142.get().has()) {");
    gold.append("\n          NtComplex __maybeElement172 = (NtComplex)(__item.f142.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement173 = __df142.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement173.show(__maybeElement172, __obj.planField(\"f142\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df142.hide(__obj.planField(\"f142\"));");
    gold.append("\n        }");
    gold.append("\n        __gf142 = __item.f142.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf143 != __item.f143.getGeneration()) {");
    gold.append("\n        __df143.show(__item.f143.get(), __obj.planField(\"f143\"));");
    gold.append("\n        __gf143 = __item.f143.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf144 != __item.f144.getGeneration()) {");
    gold.append("\n        __df144.show(__item.f144.get(), __obj.planField(\"f144\"));");
    gold.append("\n        __gf144 = __item.f144.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf145 != __item.f145.getGeneration()) {");
    gold.append("\n        __df145.show(__item.f145.get(), __obj.planField(\"f145\"));");
    gold.append("\n        __gf145 = __item.f145.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf146 != __item.f146.getGeneration()) {");
    gold.append("\n        if (__item.f146.get().has()) {");
    gold.append("\n          NtComplex __maybeElement174 = (NtComplex)(__item.f146.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement175 = __df146.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement175.show(__maybeElement174, __obj.planField(\"f146\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df146.hide(__obj.planField(\"f146\"));");
    gold.append("\n        }");
    gold.append("\n        __gf146 = __item.f146.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf147 != __item.f147.getGeneration()) {");
    gold.append("\n        if (__item.f147.get().has()) {");
    gold.append("\n          NtComplex __maybeElement176 = (NtComplex)(__item.f147.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement177 = __df147.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement177.show(__maybeElement176, __obj.planField(\"f147\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df147.hide(__obj.planField(\"f147\"));");
    gold.append("\n        }");
    gold.append("\n        __gf147 = __item.f147.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf148 != __item.f148.getGeneration()) {");
    gold.append("\n        __df148.show(__item.f148.get(), __obj.planField(\"f148\"));");
    gold.append("\n        __gf148 = __item.f148.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf149 != __item.f149.getGeneration()) {");
    gold.append("\n        if (__item.f149.get().has()) {");
    gold.append("\n          NtComplex __maybeElement178 = (NtComplex)(__item.f149.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement179 = __df149.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement179.show(__maybeElement178, __obj.planField(\"f149\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df149.hide(__obj.planField(\"f149\"));");
    gold.append("\n        }");
    gold.append("\n        __gf149 = __item.f149.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf150 != __item.f150.getGeneration()) {");
    gold.append("\n        if (__item.f150.get().has()) {");
    gold.append("\n          NtComplex __maybeElement180 = (NtComplex)(__item.f150.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement181 = __df150.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement181.show(__maybeElement180, __obj.planField(\"f150\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df150.hide(__obj.planField(\"f150\"));");
    gold.append("\n        }");
    gold.append("\n        __gf150 = __item.f150.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf151 != __item.f151.getGeneration()) {");
    gold.append("\n        __df151.show(__item.f151.get(), __obj.planField(\"f151\"));");
    gold.append("\n        __gf151 = __item.f151.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf152 != __item.f152.getGeneration()) {");
    gold.append("\n        __df152.show(__item.f152.get(), __obj.planField(\"f152\"));");
    gold.append("\n        __gf152 = __item.f152.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf153 != __item.f153.getGeneration()) {");
    gold.append("\n        __df153.show(__item.f153.get(), __obj.planField(\"f153\"));");
    gold.append("\n        __gf153 = __item.f153.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf154 != __item.f154.getGeneration()) {");
    gold.append("\n        __df154.show(__item.f154.get(), __obj.planField(\"f154\"));");
    gold.append("\n        __gf154 = __item.f154.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf155 != __item.f155.getGeneration()) {");
    gold.append("\n        if (__item.f155.get().has()) {");
    gold.append("\n          NtComplex __maybeElement182 = (NtComplex)(__item.f155.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement183 = __df155.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement183.show(__maybeElement182, __obj.planField(\"f155\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df155.hide(__obj.planField(\"f155\"));");
    gold.append("\n        }");
    gold.append("\n        __gf155 = __item.f155.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf156 != __item.f156.getGeneration()) {");
    gold.append("\n        if (__item.f156.get().has()) {");
    gold.append("\n          NtComplex __maybeElement184 = (NtComplex)(__item.f156.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement185 = __df156.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement185.show(__maybeElement184, __obj.planField(\"f156\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df156.hide(__obj.planField(\"f156\"));");
    gold.append("\n        }");
    gold.append("\n        __gf156 = __item.f156.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf157 != __item.f157.getGeneration()) {");
    gold.append("\n        if (__item.f157.get().has()) {");
    gold.append("\n          NtComplex __maybeElement186 = (NtComplex)(__item.f157.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement187 = __df157.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement187.show(__maybeElement186, __obj.planField(\"f157\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df157.hide(__obj.planField(\"f157\"));");
    gold.append("\n        }");
    gold.append("\n        __gf157 = __item.f157.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf158 != __item.f158.getGeneration()) {");
    gold.append("\n        if (__item.f158.get().has()) {");
    gold.append("\n          NtComplex __maybeElement188 = (NtComplex)(__item.f158.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement189 = __df158.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement189.show(__maybeElement188, __obj.planField(\"f158\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df158.hide(__obj.planField(\"f158\"));");
    gold.append("\n        }");
    gold.append("\n        __gf158 = __item.f158.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf159 != __item.f159.getGeneration()) {");
    gold.append("\n        if (__item.f159.get().has()) {");
    gold.append("\n          NtComplex __maybeElement190 = (NtComplex)(__item.f159.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement191 = __df159.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement191.show(__maybeElement190, __obj.planField(\"f159\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df159.hide(__obj.planField(\"f159\"));");
    gold.append("\n        }");
    gold.append("\n        __gf159 = __item.f159.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf160 != __item.f160.getGeneration()) {");
    gold.append("\n        if (__item.f160.get().has()) {");
    gold.append("\n          NtComplex __maybeElement192 = (NtComplex)(__item.f160.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement193 = __df160.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement193.show(__maybeElement192, __obj.planField(\"f160\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df160.hide(__obj.planField(\"f160\"));");
    gold.append("\n        }");
    gold.append("\n        __gf160 = __item.f160.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf161 != __item.f161.getGeneration()) {");
    gold.append("\n        if (__item.f161.get().has()) {");
    gold.append("\n          NtComplex __maybeElement194 = (NtComplex)(__item.f161.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement195 = __df161.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement195.show(__maybeElement194, __obj.planField(\"f161\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df161.hide(__obj.planField(\"f161\"));");
    gold.append("\n        }");
    gold.append("\n        __gf161 = __item.f161.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf162 != __item.f162.getGeneration()) {");
    gold.append("\n        if (__item.f162.get().has()) {");
    gold.append("\n          NtComplex __maybeElement196 = (NtComplex)(__item.f162.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement197 = __df162.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement197.show(__maybeElement196, __obj.planField(\"f162\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df162.hide(__obj.planField(\"f162\"));");
    gold.append("\n        }");
    gold.append("\n        __gf162 = __item.f162.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf163 != __item.f163.getGeneration()) {");
    gold.append("\n        if (__item.f163.get().has()) {");
    gold.append("\n          NtComplex __maybeElement198 = (NtComplex)(__item.f163.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement199 = __df163.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement199.show(__maybeElement198, __obj.planField(\"f163\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df163.hide(__obj.planField(\"f163\"));");
    gold.append("\n        }");
    gold.append("\n        __gf163 = __item.f163.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf164 != __item.f164.getGeneration()) {");
    gold.append("\n        if (__item.f164.get().has()) {");
    gold.append("\n          NtComplex __maybeElement200 = (NtComplex)(__item.f164.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement201 = __df164.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement201.show(__maybeElement200, __obj.planField(\"f164\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df164.hide(__obj.planField(\"f164\"));");
    gold.append("\n        }");
    gold.append("\n        __gf164 = __item.f164.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf165 != __item.f165.getGeneration()) {");
    gold.append("\n        if (__item.f165.get().has()) {");
    gold.append("\n          NtComplex __maybeElement202 = (NtComplex)(__item.f165.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement203 = __df165.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement203.show(__maybeElement202, __obj.planField(\"f165\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df165.hide(__obj.planField(\"f165\"));");
    gold.append("\n        }");
    gold.append("\n        __gf165 = __item.f165.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf166 != __item.f166.getGeneration()) {");
    gold.append("\n        if (__item.f166.get().has()) {");
    gold.append("\n          NtComplex __maybeElement204 = (NtComplex)(__item.f166.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement205 = __df166.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement205.show(__maybeElement204, __obj.planField(\"f166\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df166.hide(__obj.planField(\"f166\"));");
    gold.append("\n        }");
    gold.append("\n        __gf166 = __item.f166.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf167 != __item.f167.getGeneration()) {");
    gold.append("\n        if (__item.f167.get().has()) {");
    gold.append("\n          NtComplex __maybeElement206 = (NtComplex)(__item.f167.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement207 = __df167.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement207.show(__maybeElement206, __obj.planField(\"f167\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df167.hide(__obj.planField(\"f167\"));");
    gold.append("\n        }");
    gold.append("\n        __gf167 = __item.f167.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gf168 != __item.f168.getGeneration()) {");
    gold.append("\n        if (__item.f168.get().has()) {");
    gold.append("\n          NtComplex __maybeElement208 = (NtComplex)(__item.f168.get().get());");
    gold.append("\n          DComplex __maybeDeltaElement209 = __df168.get(() -> new DComplex());");
    gold.append("\n          __maybeDeltaElement209.show(__maybeElement208, __obj.planField(\"f168\"));");
    gold.append("\n        } else {");
    gold.append("\n          __df168.hide(__obj.planField(\"f168\"));");
    gold.append("\n        }");
    gold.append("\n        __gf168 = __item.f168.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    OperationsSubtractionCases_7 __self = this;");
    gold.append("\n    DeltaOperationsSubtractionCases_7 __state = new DeltaOperationsSubtractionCases_7();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, NtMessageBase message) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"f0\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f1\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f3\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f4\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f5\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f6\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f7\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f8\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f9\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f10\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f11\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f12\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f13\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f14\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f15\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f16\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f17\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f18\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f19\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f20\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f21\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f22\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f23\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f24\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f25\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f26\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f27\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f28\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f29\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f30\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f31\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f32\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f33\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f34\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f35\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f36\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f37\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f38\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f39\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f40\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f41\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f42\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f43\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f44\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f45\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f46\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f47\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f48\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f49\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f50\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f51\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f52\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f53\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f54\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f55\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f56\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f57\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f58\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f59\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f60\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f61\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f62\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f63\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f64\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f65\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f66\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f67\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f68\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f69\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f70\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f71\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f72\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f73\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f74\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f75\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f76\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f77\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f78\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f79\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f80\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f81\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f82\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f83\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f84\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f85\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f86\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f87\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f88\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f89\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f90\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f91\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f92\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f93\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f94\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f95\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f96\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f97\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f98\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f99\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f100\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f101\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f102\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f103\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f104\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f105\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f106\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f107\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f108\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f109\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f110\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f111\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f112\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"f113\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f114\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f115\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f116\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f117\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f118\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f119\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f120\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f121\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f122\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f123\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f124\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f125\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f126\":{\"type\":{\"nature\":\"native_value\",\"type\":\"long\"},\"privacy\":\"public\"},\"f127\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f128\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f129\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f130\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f131\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f132\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f133\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f134\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"double\"}},\"privacy\":\"public\"},\"f135\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f136\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f137\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f138\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f139\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f140\":{\"type\":{\"nature\":\"native_value\",\"type\":\"double\"},\"privacy\":\"public\"},\"f141\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f142\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f143\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f144\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f145\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f146\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f147\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f148\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f149\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f150\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f151\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f152\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f153\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f154\":{\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"},\"privacy\":\"public\"},\"f155\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f156\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f157\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f158\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f159\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f160\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f161\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f162\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f163\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f164\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f165\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f166\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f167\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"},\"f168\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"complex\"}},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:7144");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"f0\":0,\"f1\":\"0\",\"f2\":0.5,\"f3\":0.5,\"f5\":{\"r\":1.0,\"i\":-1.0},\"f6\":{\"r\":1.0,\"i\":1.0},\"f8\":1,\"f9\":\"1\",\"f10\":1.0,\"f11\":{\"r\":1.0,\"i\":-0.0},\"f13\":\"0\",\"f14\":\"0\",\"f15\":0.5,\"f16\":0.5,\"f18\":{\"r\":1.0,\"i\":-1.0},\"f19\":{\"r\":1.0,\"i\":1.0},\"f21\":\"1\",\"f22\":\"1\",\"f23\":1.0,\"f24\":{\"r\":1.0,\"i\":-0.0},\"f26\":-0.5,\"f27\":-0.5,\"f28\":0.0,\"f29\":0.0,\"f31\":{\"r\":0.5,\"i\":-1.0},\"f32\":{\"r\":0.5,\"i\":1.0},\"f34\":0.5,\"f35\":0.5,\"f36\":0.5,\"f37\":{\"r\":0.5,\"i\":-0.0},\"f39\":-0.5,\"f40\":-0.5,\"f41\":0.0,\"f42\":0.0,\"f44\":{\"r\":0.5,\"i\":-1.0},\"f45\":{\"r\":0.5,\"i\":1.0},\"f47\":0.5,\"f48\":0.5,\"f49\":0.5,\"f50\":{\"r\":0.5,\"i\":-0.0},\"f65\":{\"r\":-1.0,\"i\":1.0},\"f66\":{\"r\":-1.0,\"i\":1.0},\"f67\":{\"r\":-0.5,\"i\":1.0},\"f68\":{\"r\":-0.5,\"i\":1.0},\"f70\":{\"r\":0.0,\"i\":0.0},\"f71\":{\"r\":0.0,\"i\":2.0},\"f73\":{\"r\":0.0,\"i\":1.0},\"f74\":{\"r\":0.0,\"i\":1.0},\"f75\":{\"r\":0.0,\"i\":1.0},\"f76\":{\"r\":0.0,\"i\":1.0},\"f78\":{\"r\":-1.0,\"i\":-1.0},\"f79\":{\"r\":-1.0,\"i\":-1.0},\"f80\":{\"r\":-0.5,\"i\":-1.0},\"f81\":{\"r\":-0.5,\"i\":-1.0},\"f83\":{\"r\":0.0,\"i\":-2.0},\"f84\":{\"r\":0.0,\"i\":0.0},\"f86\":{\"r\":0.0,\"i\":-1.0},\"f87\":{\"r\":0.0,\"i\":-1.0},\"f88\":{\"r\":0.0,\"i\":-1.0},\"f89\":{\"r\":0.0,\"i\":-1.0},\"f104\":-1,\"f105\":\"-1\",\"f106\":-0.5,\"f107\":-0.5,\"f109\":{\"r\":0.0,\"i\":-1.0},\"f110\":{\"r\":0.0,\"i\":1.0},\"f112\":0,\"f113\":\"0\",\"f114\":0.0,\"f115\":{\"r\":0.0,\"i\":-0.0},\"f117\":\"-1\",\"f118\":\"-1\",\"f119\":-0.5,\"f120\":-0.5,\"f122\":{\"r\":0.0,\"i\":-1.0},\"f123\":{\"r\":0.0,\"i\":1.0},\"f125\":\"0\",\"f126\":\"0\",\"f127\":0.0,\"f128\":{\"r\":0.0,\"i\":-0.0},\"f130\":-1.0,\"f131\":-1.0,\"f132\":-0.5,\"f133\":-0.5,\"f135\":{\"r\":0.0,\"i\":-1.0},\"f136\":{\"r\":0.0,\"i\":1.0},\"f138\":0.0,\"f139\":0.0,\"f140\":0.0,\"f141\":{\"r\":0.0,\"i\":-0.0},\"f143\":{\"r\":-1.0,\"i\":0.0},\"f144\":{\"r\":-1.0,\"i\":0.0},\"f145\":{\"r\":-0.5,\"i\":0.0},\"f146\":{\"r\":-0.5,\"i\":0.0},\"f148\":{\"r\":0.0,\"i\":-1.0},\"f149\":{\"r\":0.0,\"i\":1.0},\"f151\":{\"r\":0.0,\"i\":0.0},\"f152\":{\"r\":0.0,\"i\":0.0},\"f153\":{\"r\":0.0,\"i\":0.0},\"f154\":{\"r\":0.0,\"i\":0.0}},\"seq\":2}");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"f0\":0,\"f1\":\"0\",\"f2\":0.5,\"f3\":0.5,\"f5\":{\"r\":1.0,\"i\":-1.0},\"f6\":{\"r\":1.0,\"i\":1.0},\"f8\":1,\"f9\":\"1\",\"f10\":1.0,\"f11\":{\"r\":1.0,\"i\":-0.0},\"f13\":\"0\",\"f14\":\"0\",\"f15\":0.5,\"f16\":0.5,\"f18\":{\"r\":1.0,\"i\":-1.0},\"f19\":{\"r\":1.0,\"i\":1.0},\"f21\":\"1\",\"f22\":\"1\",\"f23\":1.0,\"f24\":{\"r\":1.0,\"i\":-0.0},\"f26\":-0.5,\"f27\":-0.5,\"f28\":0.0,\"f29\":0.0,\"f31\":{\"r\":0.5,\"i\":-1.0},\"f32\":{\"r\":0.5,\"i\":1.0},\"f34\":0.5,\"f35\":0.5,\"f36\":0.5,\"f37\":{\"r\":0.5,\"i\":-0.0},\"f39\":-0.5,\"f40\":-0.5,\"f41\":0.0,\"f42\":0.0,\"f44\":{\"r\":0.5,\"i\":-1.0},\"f45\":{\"r\":0.5,\"i\":1.0},\"f47\":0.5,\"f48\":0.5,\"f49\":0.5,\"f50\":{\"r\":0.5,\"i\":-0.0},\"f65\":{\"r\":-1.0,\"i\":1.0},\"f66\":{\"r\":-1.0,\"i\":1.0},\"f67\":{\"r\":-0.5,\"i\":1.0},\"f68\":{\"r\":-0.5,\"i\":1.0},\"f70\":{\"r\":0.0,\"i\":0.0},\"f71\":{\"r\":0.0,\"i\":2.0},\"f73\":{\"r\":0.0,\"i\":1.0},\"f74\":{\"r\":0.0,\"i\":1.0},\"f75\":{\"r\":0.0,\"i\":1.0},\"f76\":{\"r\":0.0,\"i\":1.0},\"f78\":{\"r\":-1.0,\"i\":-1.0},\"f79\":{\"r\":-1.0,\"i\":-1.0},\"f80\":{\"r\":-0.5,\"i\":-1.0},\"f81\":{\"r\":-0.5,\"i\":-1.0},\"f83\":{\"r\":0.0,\"i\":-2.0},\"f84\":{\"r\":0.0,\"i\":0.0},\"f86\":{\"r\":0.0,\"i\":-1.0},\"f87\":{\"r\":0.0,\"i\":-1.0},\"f88\":{\"r\":0.0,\"i\":-1.0},\"f89\":{\"r\":0.0,\"i\":-1.0},\"f104\":-1,\"f105\":\"-1\",\"f106\":-0.5,\"f107\":-0.5,\"f109\":{\"r\":0.0,\"i\":-1.0},\"f110\":{\"r\":0.0,\"i\":1.0},\"f112\":0,\"f113\":\"0\",\"f114\":0.0,\"f115\":{\"r\":0.0,\"i\":-0.0},\"f117\":\"-1\",\"f118\":\"-1\",\"f119\":-0.5,\"f120\":-0.5,\"f122\":{\"r\":0.0,\"i\":-1.0},\"f123\":{\"r\":0.0,\"i\":1.0},\"f125\":\"0\",\"f126\":\"0\",\"f127\":0.0,\"f128\":{\"r\":0.0,\"i\":-0.0},\"f130\":-1.0,\"f131\":-1.0,\"f132\":-0.5,\"f133\":-0.5,\"f135\":{\"r\":0.0,\"i\":-1.0},\"f136\":{\"r\":0.0,\"i\":1.0},\"f138\":0.0,\"f139\":0.0,\"f140\":0.0,\"f141\":{\"r\":0.0,\"i\":-0.0},\"f143\":{\"r\":-1.0,\"i\":0.0},\"f144\":{\"r\":-1.0,\"i\":0.0},\"f145\":{\"r\":-0.5,\"i\":0.0},\"f146\":{\"r\":-0.5,\"i\":0.0},\"f148\":{\"r\":0.0,\"i\":-1.0},\"f149\":{\"r\":0.0,\"i\":1.0},\"f151\":{\"r\":0.0,\"i\":0.0},\"f152\":{\"r\":0.0,\"i\":0.0},\"f153\":{\"r\":0.0,\"i\":0.0},\"f154\":{\"r\":0.0,\"i\":0.0}},\"seq\":3}");
    gold.append("\nRANDO was DENIED:");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nMEMORY:24478");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_StringCompare_8 = null;
  private String get_StringCompare_8() {
    if (cached_StringCompare_8 != null) {
      return cached_StringCompare_8;
    }
    cached_StringCompare_8 = generateTestOutput(true, "StringCompare_8", "./test_code/BinaryExpression_StringCompare_success.a");
    return cached_StringCompare_8;
  }

  @Test
  public void testStringCompareEmission() {
    assertEmissionGood(get_StringCompare_8());
  }

  @Test
  public void testStringCompareSuccess() {
    assertLivePass(get_StringCompare_8());
  }

  @Test
  public void testStringCompareGoodWillHappy() {
    assertGoodWillHappy(get_StringCompare_8());
  }

  @Test
  public void testStringCompareExceptionFree() {
    assertExceptionFree(get_StringCompare_8());
  }

  @Test
  public void testStringCompareTODOFree() {
    assertTODOFree(get_StringCompare_8());
  }

  @Test
  public void stable_StringCompare_8() {
    String live = get_StringCompare_8();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_StringCompare_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\nimport java.lang.Math;");
    gold.append("\npublic class StringCompare_8 extends LivingDocument {");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public StringCompare_8(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  private class DeltaStringCompare_8 implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaStringCompare_8() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(StringCompare_8 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtClient __who, Perspective ___perspective) {");
    gold.append("\n    StringCompare_8 __self = this;");
    gold.append("\n    DeltaStringCompare_8 __state = new DeltaStringCompare_8();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    return new PrivateView(__who, ___perspective) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType implements NtMessageBase {");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    public int __DATA_GENERATION = 1;");
    gold.append("\n    private void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.skipValue();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message2(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(NtClient __cvalue) {");
    gold.append("\n    boolean __result = false;");
    gold.append("\n    return __result;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(NtClient __cvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(NtClient __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanCreate(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(NtClient __client) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(NtClient __cvalue, NtAsset __asset) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  public void __test_PrimaryTest(TestReportBuilder report) {");
    gold.append("\n    report.begin(\"PrimaryTest\");");
    gold.append("\n    {");
    gold.append("\n      __code_cost += 12;");
    gold.append("\n      __track(0);");
    gold.append("\n      __assert_truth(LibString.equality(\"x\", \"x\"), 1, 2, 1, 20);");
    gold.append("\n      __track(1);");
    gold.append("\n      __assert_truth((!LibString.equality(\"x\", \"y\")), 2, 2, 2, 22);");
    gold.append("\n      __track(2);");
    gold.append("\n      __assert_truth(!(LibString.equality(\"x\", \"y\")), 3, 2, 3, 23);");
    gold.append("\n      __track(3);");
    gold.append("\n      __assert_truth(LibString.compare(\"x\", \"y\") < 0, 4, 2, 4, 19);");
    gold.append("\n      __track(4);");
    gold.append("\n      __assert_truth(LibString.compare(\"x\", \"y\") <= 0, 5, 2, 5, 20);");
    gold.append("\n      __track(5);");
    gold.append("\n      __assert_truth(!(LibString.compare(\"x\", \"y\") > 0), 6, 2, 6, 22);");
    gold.append("\n      __track(6);");
    gold.append("\n      __assert_truth(!(LibString.compare(\"x\", \"y\") >= 0), 7, 2, 7, 23);");
    gold.append("\n      __track(7);");
    gold.append("\n      __assert_truth(LibString.compare(\"y\", \"x\") > 0, 8, 2, 8, 19);");
    gold.append("\n      __track(8);");
    gold.append("\n      __assert_truth(LibString.compare(\"y\", \"x\") >= 0, 9, 2, 9, 20);");
    gold.append("\n      __track(9);");
    gold.append("\n      __assert_truth(!(LibString.compare(\"y\", \"x\") < 0), 10, 2, 10, 22);");
    gold.append("\n      __track(10);");
    gold.append("\n      __assert_truth(!(LibString.compare(\"y\", \"x\") <= 0), 11, 2, 11, 23);");
    gold.append("\n    }");
    gold.append("\n    report.end(getAndResetAssertions());");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {\"PrimaryTest\"};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {");
    gold.append("\n    switch(testName) {");
    gold.append("\n      case \"PrimaryTest\":");
    gold.append("\n          __test_PrimaryTest(report);");
    gold.append("\n          return;");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(NtClient who, NtMessageBase message) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--JAVA COMPILE RESULTS-----------------------------");
    gold.append("\nBegin");
    gold.append("\nEnd");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"#root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\"}-->{\"__constructed\":true,\"__entropy\":\"0\"} need:true in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":1,\"__entropy\":\"-4962768465676381896\",\"__time\":\"25\"} need:false in:-25");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:384");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"50\"} need:false in:-50");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":2}");
    gold.append("\nNO_ONE was DENIED");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"75\"} need:false in:-75");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":3}");
    gold.append("\n+ RANDO DELTA:{\"seq\":3}");
    gold.append("\nRANDO was DENIED:");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"100\"} need:false in:-100");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"seq\":4}");
    gold.append("\nMEMORY:502");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n{\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__auto_table_row_id\":0}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\nTEST[PrimaryTest] = 100.0%");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
  private String cached_WhenCantAdd_9 = null;
  private String get_WhenCantAdd_9() {
    if (cached_WhenCantAdd_9 != null) {
      return cached_WhenCantAdd_9;
    }
    cached_WhenCantAdd_9 = generateTestOutput(false, "WhenCantAdd_9", "./test_code/BinaryExpression_WhenCantAdd_failure.a");
    return cached_WhenCantAdd_9;
  }

  @Test
  public void testWhenCantAddFailure() {
    assertLiveFail(get_WhenCantAdd_9());
  }

  @Test
  public void testWhenCantAddNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_WhenCantAdd_9());
  }

  @Test
  public void testWhenCantAddExceptionFree() {
    assertExceptionFree(get_WhenCantAdd_9());
  }

  @Test
  public void testWhenCantAddTODOFree() {
    assertTODOFree(get_WhenCantAdd_9());
  }

  @Test
  public void stable_WhenCantAdd_9() {
    String live = get_WhenCantAdd_9();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_WhenCantAdd_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":17,\"character\":12},\"end\":{\"line\":17,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'long' + 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":18,\"character\":12},\"end\":{\"line\":18,\"character\":34}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'list<int>' + 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":22,\"character\":3},\"end\":{\"line\":22,\"character\":11}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression expected to be computed, rather than assigned to (Environment)\"},{\"range\":{\"start\":{\"line\":22,\"character\":3},\"end\":{\"line\":22,\"character\":7}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression expected to be computed, rather than assigned to (Environment)\"},{\"range\":{\"start\":{\"line\":22,\"character\":10},\"end\":{\"line\":22,\"character\":11}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression expected to be computed, rather than assigned to (Environment)\"},{\"range\":{\"start\":{\"line\":22,\"character\":3},\"end\":{\"line\":22,\"character\":11}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' + 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":22,\"character\":17},\"end\":{\"line\":22,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'string' / 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":1,\"character\":11},\"end\":{\"line\":1,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' + 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":2,\"character\":11},\"end\":{\"line\":2,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' + 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":3,\"character\":11},\"end\":{\"line\":3,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'int' + 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":4,\"character\":11},\"end\":{\"line\":4,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' + 'double' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":5,\"character\":11},\"end\":{\"line\":5,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'double' + 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":6,\"character\":11},\"end\":{\"line\":6,\"character\":25}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' + 'client' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":7,\"character\":11},\"end\":{\"line\":7,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'client' + '__ViewerType' (OperatorTable)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
  private String cached_WhenCantCompare_10 = null;
  private String get_WhenCantCompare_10() {
    if (cached_WhenCantCompare_10 != null) {
      return cached_WhenCantCompare_10;
    }
    cached_WhenCantCompare_10 = generateTestOutput(false, "WhenCantCompare_10", "./test_code/BinaryExpression_WhenCantCompare_failure.a");
    return cached_WhenCantCompare_10;
  }

  @Test
  public void testWhenCantCompareFailure() {
    assertLiveFail(get_WhenCantCompare_10());
  }

  @Test
  public void testWhenCantCompareNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_WhenCantCompare_10());
  }

  @Test
  public void testWhenCantCompareExceptionFree() {
    assertExceptionFree(get_WhenCantCompare_10());
  }

  @Test
  public void testWhenCantCompareTODOFree() {
    assertTODOFree(get_WhenCantCompare_10());
  }

  @Test
  public void stable_WhenCantCompare_10() {
    String live = get_WhenCantCompare_10();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_WhenCantCompare_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":4,\"character\":11},\"end\":{\"line\":4,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'bool' and 'int' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":5,\"character\":11},\"end\":{\"line\":5,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'int' and 'bool' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":6,\"character\":11},\"end\":{\"line\":6,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'bool' and 'double' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":7,\"character\":11},\"end\":{\"line\":7,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'double' and 'bool' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":8,\"character\":11},\"end\":{\"line\":8,\"character\":26}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'bool' and 'client' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":9,\"character\":11},\"end\":{\"line\":9,\"character\":24}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'client' and '__ViewerType' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":10,\"character\":10},\"end\":{\"line\":10,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: enum types are incompatible 'X' vs 'T'. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":15,\"character\":11},\"end\":{\"line\":15,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'bool' and 'int' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":16,\"character\":11},\"end\":{\"line\":16,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'int' and 'bool' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":17,\"character\":11},\"end\":{\"line\":17,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'bool' and 'double' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":18,\"character\":11},\"end\":{\"line\":18,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'double' and 'bool' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":19,\"character\":11},\"end\":{\"line\":19,\"character\":26}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'bool' and 'client' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":20,\"character\":11},\"end\":{\"line\":20,\"character\":24}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: unable to compare types 'client' and '__ViewerType' for equality. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":21,\"character\":10},\"end\":{\"line\":21,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: enum types are incompatible 'X' vs 'T'. (RuleSetEquality)\"},{\"range\":{\"start\":{\"line\":25,\"character\":12},\"end\":{\"line\":25,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' + 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":25,\"character\":26},\"end\":{\"line\":25,\"character\":32}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'string' / 'int' (OperatorTable)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
  private String cached_WhenCantDivide_11 = null;
  private String get_WhenCantDivide_11() {
    if (cached_WhenCantDivide_11 != null) {
      return cached_WhenCantDivide_11;
    }
    cached_WhenCantDivide_11 = generateTestOutput(false, "WhenCantDivide_11", "./test_code/BinaryExpression_WhenCantDivide_failure.a");
    return cached_WhenCantDivide_11;
  }

  @Test
  public void testWhenCantDivideFailure() {
    assertLiveFail(get_WhenCantDivide_11());
  }

  @Test
  public void testWhenCantDivideNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_WhenCantDivide_11());
  }

  @Test
  public void testWhenCantDivideExceptionFree() {
    assertExceptionFree(get_WhenCantDivide_11());
  }

  @Test
  public void testWhenCantDivideTODOFree() {
    assertTODOFree(get_WhenCantDivide_11());
  }

  @Test
  public void stable_WhenCantDivide_11() {
    String live = get_WhenCantDivide_11();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_WhenCantDivide_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":1,\"character\":11},\"end\":{\"line\":1,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' / 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":2,\"character\":11},\"end\":{\"line\":2,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' / 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":3,\"character\":11},\"end\":{\"line\":3,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'int' / 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":4,\"character\":11},\"end\":{\"line\":4,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' / 'double' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":5,\"character\":11},\"end\":{\"line\":5,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'double' / 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":6,\"character\":11},\"end\":{\"line\":6,\"character\":25}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' / 'client' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":7,\"character\":11},\"end\":{\"line\":7,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'client' / '__ViewerType' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":8,\"character\":12},\"end\":{\"line\":8,\"character\":24}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'client' / '__ViewerType' (OperatorTable)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
  private String cached_WhenCantLogic_12 = null;
  private String get_WhenCantLogic_12() {
    if (cached_WhenCantLogic_12 != null) {
      return cached_WhenCantLogic_12;
    }
    cached_WhenCantLogic_12 = generateTestOutput(false, "WhenCantLogic_12", "./test_code/BinaryExpression_WhenCantLogic_failure.a");
    return cached_WhenCantLogic_12;
  }

  @Test
  public void testWhenCantLogicFailure() {
    assertLiveFail(get_WhenCantLogic_12());
  }

  @Test
  public void testWhenCantLogicNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_WhenCantLogic_12());
  }

  @Test
  public void testWhenCantLogicExceptionFree() {
    assertExceptionFree(get_WhenCantLogic_12());
  }

  @Test
  public void testWhenCantLogicTODOFree() {
    assertTODOFree(get_WhenCantLogic_12());
  }

  @Test
  public void stable_WhenCantLogic_12() {
    String live = get_WhenCantLogic_12();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_WhenCantLogic_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":2,\"character\":19},\"end\":{\"line\":2,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'int' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":2,\"character\":11},\"end\":{\"line\":2,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'bool' and 'int' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":3,\"character\":11},\"end\":{\"line\":3,\"character\":12}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'int' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":3,\"character\":11},\"end\":{\"line\":3,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'int' and 'bool' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":4,\"character\":19},\"end\":{\"line\":4,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'double' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":4,\"character\":11},\"end\":{\"line\":4,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'bool' and 'double' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":5,\"character\":11},\"end\":{\"line\":5,\"character\":14}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'double' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":5,\"character\":11},\"end\":{\"line\":5,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'double' and 'bool' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":6,\"character\":19},\"end\":{\"line\":6,\"character\":26}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'client' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":6,\"character\":11},\"end\":{\"line\":6,\"character\":26}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'bool' and 'client' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":7,\"character\":11},\"end\":{\"line\":7,\"character\":18}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'client' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":17,\"character\":22},\"end\":{\"line\":17,\"character\":24}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually '__ViewerType' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":7,\"character\":11},\"end\":{\"line\":7,\"character\":24}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'client' and '__ViewerType' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":12,\"character\":19},\"end\":{\"line\":12,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'int' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":12,\"character\":11},\"end\":{\"line\":12,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'bool' and 'int' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":13,\"character\":11},\"end\":{\"line\":13,\"character\":12}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'int' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":13,\"character\":11},\"end\":{\"line\":13,\"character\":20}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'int' and 'bool' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":14,\"character\":19},\"end\":{\"line\":14,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'double' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":14,\"character\":11},\"end\":{\"line\":14,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'bool' and 'double' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":15,\"character\":11},\"end\":{\"line\":15,\"character\":14}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'double' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":15,\"character\":11},\"end\":{\"line\":15,\"character\":22}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'double' and 'bool' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":16,\"character\":19},\"end\":{\"line\":16,\"character\":26}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'client' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":16,\"character\":11},\"end\":{\"line\":16,\"character\":26}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'bool' and 'client' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":17,\"character\":11},\"end\":{\"line\":17,\"character\":18}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually 'client' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":17,\"character\":22},\"end\":{\"line\":17,\"character\":24}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: must have a type of 'bool', but the type is actually '__ViewerType' (TypeCheckFailures)\"},{\"range\":{\"start\":{\"line\":17,\"character\":11},\"end\":{\"line\":17,\"character\":24}},\"severity\":1,\"source\":\"error\",\"message\":\"The types 'client' and '__ViewerType' are unable to be joined with logical operators (&&, ||).\\n\\tBoth left and right hand side of the operator must be of type 'bool'. (RuleSetLogic)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
  private String cached_WhenCantMod_13 = null;
  private String get_WhenCantMod_13() {
    if (cached_WhenCantMod_13 != null) {
      return cached_WhenCantMod_13;
    }
    cached_WhenCantMod_13 = generateTestOutput(false, "WhenCantMod_13", "./test_code/BinaryExpression_WhenCantMod_failure.a");
    return cached_WhenCantMod_13;
  }

  @Test
  public void testWhenCantModFailure() {
    assertLiveFail(get_WhenCantMod_13());
  }

  @Test
  public void testWhenCantModNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_WhenCantMod_13());
  }

  @Test
  public void testWhenCantModExceptionFree() {
    assertExceptionFree(get_WhenCantMod_13());
  }

  @Test
  public void testWhenCantModTODOFree() {
    assertTODOFree(get_WhenCantMod_13());
  }

  @Test
  public void stable_WhenCantMod_13() {
    String live = get_WhenCantMod_13();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_WhenCantMod_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":1,\"character\":11},\"end\":{\"line\":1,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the types 'bool' and 'bool' are unable to be used with the mod (%) operator/. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":2,\"character\":11},\"end\":{\"line\":2,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the types 'bool' and 'int' are unable to be used with the mod (%) operator/. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":3,\"character\":11},\"end\":{\"line\":3,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the types 'int' and 'bool' are unable to be used with the mod (%) operator/. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":4,\"character\":11},\"end\":{\"line\":4,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the types 'bool' and 'double' are unable to be used with the mod (%) operator/. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":5,\"character\":11},\"end\":{\"line\":5,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the types 'double' and 'bool' are unable to be used with the mod (%) operator/. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":6,\"character\":11},\"end\":{\"line\":6,\"character\":25}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the types 'bool' and 'client' are unable to be used with the mod (%) operator/. (RuleSetLogic)\"},{\"range\":{\"start\":{\"line\":7,\"character\":11},\"end\":{\"line\":7,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Type check failure: the types 'client' and '__ViewerType' are unable to be used with the mod (%) operator/. (RuleSetLogic)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
  private String cached_WhenCantMultiply_14 = null;
  private String get_WhenCantMultiply_14() {
    if (cached_WhenCantMultiply_14 != null) {
      return cached_WhenCantMultiply_14;
    }
    cached_WhenCantMultiply_14 = generateTestOutput(false, "WhenCantMultiply_14", "./test_code/BinaryExpression_WhenCantMultiply_failure.a");
    return cached_WhenCantMultiply_14;
  }

  @Test
  public void testWhenCantMultiplyFailure() {
    assertLiveFail(get_WhenCantMultiply_14());
  }

  @Test
  public void testWhenCantMultiplyNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_WhenCantMultiply_14());
  }

  @Test
  public void testWhenCantMultiplyExceptionFree() {
    assertExceptionFree(get_WhenCantMultiply_14());
  }

  @Test
  public void testWhenCantMultiplyTODOFree() {
    assertTODOFree(get_WhenCantMultiply_14());
  }

  @Test
  public void stable_WhenCantMultiply_14() {
    String live = get_WhenCantMultiply_14();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_WhenCantMultiply_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":11,\"character\":3},\"end\":{\"line\":11,\"character\":11}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression expected to be computed, rather than assigned to (Environment)\"},{\"range\":{\"start\":{\"line\":11,\"character\":3},\"end\":{\"line\":11,\"character\":7}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression expected to be computed, rather than assigned to (Environment)\"},{\"range\":{\"start\":{\"line\":11,\"character\":10},\"end\":{\"line\":11,\"character\":11}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression expected to be computed, rather than assigned to (Environment)\"},{\"range\":{\"start\":{\"line\":11,\"character\":3},\"end\":{\"line\":11,\"character\":11}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' + 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":11,\"character\":17},\"end\":{\"line\":11,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'string' / 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":1,\"character\":11},\"end\":{\"line\":1,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' * 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":2,\"character\":11},\"end\":{\"line\":2,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' * 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":3,\"character\":11},\"end\":{\"line\":3,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'int' * 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":4,\"character\":11},\"end\":{\"line\":4,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' * 'double' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":5,\"character\":11},\"end\":{\"line\":5,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'double' * 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":6,\"character\":11},\"end\":{\"line\":6,\"character\":25}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' * 'client' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":7,\"character\":11},\"end\":{\"line\":7,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'client' * '__ViewerType' (OperatorTable)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
  private String cached_WhenCantRelate_15 = null;
  private String get_WhenCantRelate_15() {
    if (cached_WhenCantRelate_15 != null) {
      return cached_WhenCantRelate_15;
    }
    cached_WhenCantRelate_15 = generateTestOutput(false, "WhenCantRelate_15", "./test_code/BinaryExpression_WhenCantRelate_failure.a");
    return cached_WhenCantRelate_15;
  }

  @Test
  public void testWhenCantRelateFailure() {
    assertLiveFail(get_WhenCantRelate_15());
  }

  @Test
  public void testWhenCantRelateNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_WhenCantRelate_15());
  }

  @Test
  public void testWhenCantRelateExceptionFree() {
    assertExceptionFree(get_WhenCantRelate_15());
  }

  @Test
  public void testWhenCantRelateTODOFree() {
    assertTODOFree(get_WhenCantRelate_15());
  }

  @Test
  public void stable_WhenCantRelate_15() {
    String live = get_WhenCantRelate_15();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_WhenCantRelate_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":1,\"character\":11},\"end\":{\"line\":1,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'bool' is unable to be compared with type 'bool'. (Compare)\"},{\"range\":{\"start\":{\"line\":2,\"character\":11},\"end\":{\"line\":2,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'bool' is unable to be compared with type 'int'. (Compare)\"},{\"range\":{\"start\":{\"line\":3,\"character\":11},\"end\":{\"line\":3,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'int' is unable to be compared with type 'bool'. (Compare)\"},{\"range\":{\"start\":{\"line\":4,\"character\":11},\"end\":{\"line\":4,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'bool' is unable to be compared with type 'double'. (Compare)\"},{\"range\":{\"start\":{\"line\":5,\"character\":11},\"end\":{\"line\":5,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'double' is unable to be compared with type 'bool'. (Compare)\"},{\"range\":{\"start\":{\"line\":6,\"character\":11},\"end\":{\"line\":6,\"character\":25}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'bool' is unable to be compared with type 'client'. (Compare)\"},{\"range\":{\"start\":{\"line\":7,\"character\":11},\"end\":{\"line\":7,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'client' is unable to be compared with type '__ViewerType'. (Compare)\"},{\"range\":{\"start\":{\"line\":11,\"character\":11},\"end\":{\"line\":11,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'bool' is unable to be compared with type 'bool'. (Compare)\"},{\"range\":{\"start\":{\"line\":12,\"character\":11},\"end\":{\"line\":12,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'bool' is unable to be compared with type 'int'. (Compare)\"},{\"range\":{\"start\":{\"line\":13,\"character\":11},\"end\":{\"line\":13,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'int' is unable to be compared with type 'bool'. (Compare)\"},{\"range\":{\"start\":{\"line\":14,\"character\":11},\"end\":{\"line\":14,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'bool' is unable to be compared with type 'double'. (Compare)\"},{\"range\":{\"start\":{\"line\":15,\"character\":11},\"end\":{\"line\":15,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'double' is unable to be compared with type 'bool'. (Compare)\"},{\"range\":{\"start\":{\"line\":16,\"character\":11},\"end\":{\"line\":16,\"character\":25}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'bool' is unable to be compared with type 'client'. (Compare)\"},{\"range\":{\"start\":{\"line\":17,\"character\":11},\"end\":{\"line\":17,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"The type 'client' is unable to be compared with type '__ViewerType'. (Compare)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
  private String cached_WhenCantSubtract_16 = null;
  private String get_WhenCantSubtract_16() {
    if (cached_WhenCantSubtract_16 != null) {
      return cached_WhenCantSubtract_16;
    }
    cached_WhenCantSubtract_16 = generateTestOutput(false, "WhenCantSubtract_16", "./test_code/BinaryExpression_WhenCantSubtract_failure.a");
    return cached_WhenCantSubtract_16;
  }

  @Test
  public void testWhenCantSubtractFailure() {
    assertLiveFail(get_WhenCantSubtract_16());
  }

  @Test
  public void testWhenCantSubtractNotTerribleLineNumbers() {
    assertNotTerribleLineNumbers(get_WhenCantSubtract_16());
  }

  @Test
  public void testWhenCantSubtractExceptionFree() {
    assertExceptionFree(get_WhenCantSubtract_16());
  }

  @Test
  public void testWhenCantSubtractTODOFree() {
    assertTODOFree(get_WhenCantSubtract_16());
  }

  @Test
  public void stable_WhenCantSubtract_16() {
    String live = get_WhenCantSubtract_16();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:BinaryExpression_WhenCantSubtract_failure.a");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[{\"range\":{\"start\":{\"line\":11,\"character\":3},\"end\":{\"line\":11,\"character\":11}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression expected to be computed, rather than assigned to (Environment)\"},{\"range\":{\"start\":{\"line\":11,\"character\":3},\"end\":{\"line\":11,\"character\":7}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression expected to be computed, rather than assigned to (Environment)\"},{\"range\":{\"start\":{\"line\":11,\"character\":10},\"end\":{\"line\":11,\"character\":11}},\"severity\":1,\"source\":\"error\",\"message\":\"Expression expected to be computed, rather than assigned to (Environment)\"},{\"range\":{\"start\":{\"line\":11,\"character\":3},\"end\":{\"line\":11,\"character\":11}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' + 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":11,\"character\":17},\"end\":{\"line\":11,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'string' / 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":1,\"character\":11},\"end\":{\"line\":1,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' - 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":2,\"character\":11},\"end\":{\"line\":2,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' - 'int' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":3,\"character\":11},\"end\":{\"line\":3,\"character\":19}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'int' - 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":4,\"character\":11},\"end\":{\"line\":4,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' - 'double' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":5,\"character\":11},\"end\":{\"line\":5,\"character\":21}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'double' - 'bool' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":6,\"character\":11},\"end\":{\"line\":6,\"character\":25}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'bool' - 'client' (OperatorTable)\"},{\"range\":{\"start\":{\"line\":7,\"character\":11},\"end\":{\"line\":7,\"character\":23}},\"severity\":1,\"source\":\"error\",\"message\":\"Could not find a meaning for 'client' - '__ViewerType' (OperatorTable)\"}]\"--JAVA---------------------------------------------");
    gold.append("\n");
    gold.append("\nFailedValidation");
    assertStable(live, gold);
  }
}
